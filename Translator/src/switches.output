Terminals unused in grammar

    AUTO
    GUIDED
    DYNAMIC
    RUNTIME
    GLOBAL


State 192 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: omp_statement
    2        | program omp_statement

    3 omp_statement: omp_construct
    4              | omp_directive

    5 primary_expression: IDENTIFIER
    6                   | constant
    7                   | string
    8                   | '(' expression ')'
    9                   | generic_selection

   10 constant: I_CONSTANT
   11         | F_CONSTANT

   12 string: STRING_LITERAL
   13       | FUNC_NAME

   14 generic_selection: _GENERIC '(' assignment_expression ',' generic_assoc_list ')'

   15 generic_assoc_list: generic_association
   16                   | generic_assoc_list ',' generic_association

   17 generic_association: type_name ':' assignment_expression
   18                    | C_DEFAULT ':' assignment_expression

   19 postfix_expression: primary_expression
   20                   | postfix_expression '[' expression ']'
   21                   | postfix_expression '(' ')'
   22                   | postfix_expression '(' argument_expression_list ')'
   23                   | postfix_expression '.' IDENTIFIER
   24                   | postfix_expression PTR_OPERAND IDENTIFIER
   25                   | postfix_expression INC_OPERAND
   26                   | postfix_expression DEC_OPERAND
   27                   | '(' type_name ')' '{' initializer_list '}'
   28                   | '(' type_name ')' '{' initializer_list ',' '}'

   29 argument_expression_list: assignment_expression
   30                         | argument_expression_list ',' assignment_expression

   31 unary_expression: postfix_expression
   32                 | INC_OPERAND unary_expression
   33                 | DEC_OPERAND unary_expression
   34                 | unary_operator cast_expression
   35                 | SIZEOF unary_expression
   36                 | SIZEOF '(' type_name ')'
   37                 | _ALIGNOF '(' type_name ')'

   38 unary_operator: '&'
   39               | '*'
   40               | '+'
   41               | '-'
   42               | '~'
   43               | '!'

   44 cast_expression: unary_expression
   45                | '(' type_name ')' cast_expression

   46 multiplicative_expression: cast_expression
   47                          | multiplicative_expression '*' cast_expression
   48                          | multiplicative_expression '/' cast_expression
   49                          | multiplicative_expression '%' cast_expression

   50 additive_expression: multiplicative_expression
   51                    | additive_expression '+' multiplicative_expression
   52                    | additive_expression '-' multiplicative_expression

   53 shift_expression: additive_expression
   54                 | shift_expression LEFT_OPERAND additive_expression
   55                 | shift_expression RIGHT_OPERAND additive_expression

   56 relational_expression: shift_expression
   57                      | relational_expression '<' shift_expression
   58                      | relational_expression '>' shift_expression
   59                      | relational_expression LE_OPERAND shift_expression
   60                      | relational_expression GE_OPERAND shift_expression

   61 equality_expression: relational_expression
   62                    | equality_expression EQ_OPERAND relational_expression
   63                    | equality_expression NE_OPERAND relational_expression

   64 and_expression: equality_expression
   65               | and_expression '&' equality_expression

   66 exclusive_or_expression: and_expression
   67                        | exclusive_or_expression '^' and_expression

   68 inclusive_or_expression: exclusive_or_expression
   69                        | inclusive_or_expression '|' exclusive_or_expression

   70 logical_and_expression: inclusive_or_expression
   71                       | logical_and_expression AND_OPERAND inclusive_or_expression

   72 logical_or_expression: logical_and_expression
   73                      | logical_or_expression OR_OPERAND logical_and_expression

   74 conditional_expression: logical_or_expression
   75                       | logical_or_expression '?' expression ':' conditional_expression

   76 assignment_expression: conditional_expression
   77                      | unary_expression assignment_operator assignment_expression

   78 assignment_operator: '='
   79                    | MUL_ASSIGN
   80                    | DIV_ASSIGN
   81                    | MOD_ASSIGN
   82                    | ADD_ASSIGN
   83                    | SUB_ASSIGN
   84                    | LEFT_ASSIGN
   85                    | RIGHT_ASSIGN
   86                    | AND_ASSIGN
   87                    | XOR_ASSIGN
   88                    | OR_ASSIGN

   89 expression: assignment_expression
   90           | expression ',' assignment_expression

   91 constant_expression: conditional_expression

   92 type_specifier: VOID
   93               | CHAR
   94               | SHORT
   95               | INT
   96               | LONG
   97               | FLOAT
   98               | DOUBLE
   99               | BOOL
  100               | SIGNED
  101               | UNSIGNED
  102               | _BOOL
  103               | _COMPLEX
  104               | _IMAGINARY
  105               | atomic_type_specifier
  106               | struct_or_union_specifier

  107 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}'
  108                          | struct_or_union IDENTIFIER '{' struct_declaration_list '}'
  109                          | struct_or_union IDENTIFIER

  110 struct_or_union: STRUCT
  111                | UNION

  112 struct_declaration_list: struct_declaration
  113                        | struct_declaration_list struct_declaration

  114 struct_declaration: specifier_qualifier_list ';'
  115                   | specifier_qualifier_list struct_declarator_list ';'
  116                   | static_assert_declaration

  117 specifier_qualifier_list: type_specifier specifier_qualifier_list
  118                         | type_specifier
  119                         | type_qualifier specifier_qualifier_list
  120                         | type_qualifier

  121 struct_declarator_list: struct_declarator
  122                       | struct_declarator_list ',' struct_declarator

  123 struct_declarator: ':' constant_expression
  124                  | declarator ':' constant_expression
  125                  | declarator

  126 atomic_type_specifier: _ATOMIC '(' type_name ')'

  127 type_qualifier: CONST
  128               | RESTRICT
  129               | VOLATILE
  130               | _ATOMIC

  131 declarator: pointer direct_declarator
  132           | direct_declarator

  133 direct_declarator: IDENTIFIER
  134                  | '(' declarator ')'
  135                  | direct_declarator '[' ']'
  136                  | direct_declarator '[' '*' ']'
  137                  | direct_declarator '[' C_STATIC type_qualifier_list assignment_expression ']'
  138                  | direct_declarator '[' C_STATIC assignment_expression ']'
  139                  | direct_declarator '[' type_qualifier_list '*' ']'
  140                  | direct_declarator '[' type_qualifier_list C_STATIC assignment_expression ']'
  141                  | direct_declarator '[' type_qualifier_list assignment_expression ']'
  142                  | direct_declarator '[' type_qualifier_list ']'
  143                  | direct_declarator '[' assignment_expression ']'
  144                  | direct_declarator '(' ')'
  145                  | direct_declarator '(' identifier_list ')'

  146 pointer: '*' type_qualifier_list pointer
  147        | '*' type_qualifier_list
  148        | '*' pointer
  149        | '*'

  150 type_qualifier_list: type_qualifier
  151                    | type_qualifier_list type_qualifier

  152 identifier_list: IDENTIFIER
  153                | identifier_list ',' IDENTIFIER

  154 type_name: specifier_qualifier_list abstract_declarator
  155          | specifier_qualifier_list

  156 abstract_declarator: pointer direct_abstract_declarator
  157                    | pointer
  158                    | direct_abstract_declarator

  159 direct_abstract_declarator: '(' abstract_declarator ')'
  160                           | '[' ']'
  161                           | '[' '*' ']'
  162                           | '[' C_STATIC type_qualifier_list assignment_expression ']'
  163                           | '[' C_STATIC assignment_expression ']'
  164                           | '[' type_qualifier_list C_STATIC assignment_expression ']'
  165                           | '[' type_qualifier_list assignment_expression ']'
  166                           | '[' type_qualifier_list ']'
  167                           | '[' assignment_expression ']'
  168                           | direct_abstract_declarator '[' ']'
  169                           | direct_abstract_declarator '[' '*' ']'
  170                           | direct_abstract_declarator '[' C_STATIC type_qualifier_list assignment_expression ']'
  171                           | direct_abstract_declarator '[' C_STATIC assignment_expression ']'
  172                           | direct_abstract_declarator '[' type_qualifier_list assignment_expression ']'
  173                           | direct_abstract_declarator '[' type_qualifier_list C_STATIC assignment_expression ']'
  174                           | direct_abstract_declarator '[' type_qualifier_list ']'
  175                           | direct_abstract_declarator '[' assignment_expression ']'
  176                           | '(' ')'
  177                           | direct_abstract_declarator '(' ')'

  178 initializer: '{' initializer_list '}'
  179            | '{' initializer_list ',' '}'
  180            | assignment_expression

  181 initializer_list: designation initializer
  182                 | initializer
  183                 | initializer_list ',' designation initializer
  184                 | initializer_list ',' initializer

  185 designation: designator_list '='

  186 designator_list: designator
  187                | designator_list designator

  188 designator: '[' constant_expression ']'
  189           | '.' IDENTIFIER

  190 static_assert_declaration: _STATIC_ASSERT '(' constant_expression ',' STRING_LITERAL ')' ';'

  191 expression_statement: ';'
  192                     | expression ';'

  193 iteration_statement_for: FOR

  194 omp_construct: parallel_construct
  195              | for_construct
  196              | sections_construct
  197              | single_construct
  198              | section_construct
  199              | parallel_for_construct
  200              | parallel_sections_construct
  201              | master_construct
  202              | critical_construct
  203              | atomic_construct
  204              | ordered_construct
  205              | task_construct
  206              | simd_construct
  207              | for_simd_construct
  208              | parallel_for_simd_construct
  209              | target_data_construct
  210              | target_construct
  211              | target_simd_construct
  212              | target_parallel_construct
  213              | target_parallel_for_construct
  214              | target_parallel_for_simd_construct
  215              | target_update_construct
  216              | teams_construct
  217              | distribute_construct
  218              | distribute_simd_construct
  219              | distribute_parallel_for_construct
  220              | distribute_parallel_for_simd_construct
  221              | target_teams_construct
  222              | teams_distribute_construct
  223              | teams_distribute_simd_construct
  224              | target_teams_distribute_construct
  225              | target_teams_distribute_simd_construct
  226              | teams_distribute_parallel_for_construct
  227              | target_teams_distribute_parallel_for_construct
  228              | teams_distribute_parallel_for_simd_construct
  229              | target_teams_distribute_parallel_for_simd_construct
  230              | taskgroup_construct
  231              | declare_simd_construct
  232              | taskloop_construct
  233              | taskloop_simd_construct

  234 omp_directive: omp_barrier
  235              | omp_flush
  236              | omp_taskwait
  237              | omp_taskyield
  238              | omp_cancel
  239              | omp_cancellation_point
  240              | omp_target_enter_data
  241              | omp_target_exit_data
  242              | omp_threadprivate
  243              | omp_declare_reduction

  244 optional_expression: ':' expression
  245                    | ε

  246 target_simd_construct: target_simd_directive iteration_statement_for

  247 target_simd_directive: PRAGMA OMP TARGET SIMD target_simd_clause_multi ENDLN

  248 target_simd_clause_multi: target_simd_clause_multi target_simd_clause
  249                         | target_simd_clause_multi ',' target_simd_clause
  250                         | ε

  251 target_simd_clause: device_clause
  252                   | map_clause
  253                   | if_clause
  254                   | private_clause
  255                   | first_private_clause
  256                   | IS_DEVICE_PTR '(' variable_list ')'
  257                   | DEFAULTMAP '(' TOFROM ':' SCALAR ')'
  258                   | depend_clause
  259                   | safe_len_clause
  260                   | simd_len_clause
  261                   | linear_clause
  262                   | aligned_clause
  263                   | last_private_clause
  264                   | reduction_clause
  265                   | collapse_clause
  266                   | NOWAIT

  267 target_parallel_for_simd_construct: target_parallel_for_simd_directive iteration_statement_for

  268 target_parallel_for_simd_directive: PRAGMA OMP TARGET PARALLEL FOR SIMD target_parallel_for_simd_clause_multi ENDLN

  269 target_parallel_for_simd_clause_multi: target_parallel_for_simd_clause_multi target_parallel_for_simd_clause
  270                                      | target_parallel_for_simd_clause_multi ',' target_parallel_for_simd_clause
  271                                      | ε

  272 target_parallel_for_simd_clause: device_clause
  273                                | map_clause
  274                                | if_clause
  275                                | private_clause
  276                                | first_private_clause
  277                                | IS_DEVICE_PTR '(' variable_list ')'
  278                                | DEFAULTMAP '(' TOFROM ':' SCALAR ')'
  279                                | depend_clause
  280                                | num_threads_clause
  281                                | procbind_clause
  282                                | default_clause
  283                                | shared_clause
  284                                | reduction_clause
  285                                | ordered_clause
  286                                | safe_len_clause
  287                                | simd_len_clause
  288                                | linear_clause
  289                                | aligned_clause
  290                                | schedule_clause
  291                                | collapse_clause
  292                                | last_private_clause
  293                                | NOWAIT

  294 target_parallel_for_construct: target_parallel_for_directive iteration_statement_for

  295 target_parallel_for_directive: PRAGMA OMP TARGET PARALLEL FOR target_parallel_for_clause_multi ENDLN

  296 target_parallel_for_clause_multi: target_parallel_for_clause_multi target_parallel_for_clause
  297                                 | target_parallel_for_clause_multi ',' target_parallel_for_clause
  298                                 | ε

  299 target_parallel_for_clause: device_clause
  300                           | map_clause
  301                           | if_clause
  302                           | private_clause
  303                           | first_private_clause
  304                           | IS_DEVICE_PTR '(' variable_list ')'
  305                           | DEFAULTMAP '(' TOFROM ':' SCALAR ')'
  306                           | depend_clause
  307                           | num_threads_clause
  308                           | procbind_clause
  309                           | default_clause
  310                           | shared_clause
  311                           | reduction_clause
  312                           | ordered_clause
  313                           | schedule_clause
  314                           | collapse_clause
  315                           | last_private_clause
  316                           | NOWAIT

  317 target_parallel_construct: target_parallel_directive

  318 target_parallel_directive: PRAGMA OMP TARGET PARALLEL target_parallel_clause_multi ENDLN

  319 target_parallel_clause_multi: target_parallel_clause_multi target_parallel_clause
  320                             | target_parallel_clause_multi ',' target_parallel_clause
  321                             | ε

  322 target_parallel_clause: device_clause
  323                       | map_clause
  324                       | if_clause
  325                       | private_clause
  326                       | first_private_clause
  327                       | IS_DEVICE_PTR '(' variable_list ')'
  328                       | DEFAULTMAP '(' TOFROM ':' SCALAR ')'
  329                       | depend_clause
  330                       | num_threads_clause
  331                       | procbind_clause
  332                       | default_clause
  333                       | shared_clause
  334                       | reduction_clause
  335                       | NOWAIT

  336 taskloop_simd_construct: taskloop_simd_directive iteration_statement_for

  337 taskloop_simd_directive: PRAGMA OMP TASKLOOP SIMD taskloop_simd_clause_multi ENDLN

  338 taskloop_simd_clause_multi: taskloop_simd_clause_multi taskloop_simd_clause
  339                           | taskloop_simd_clause_multi ',' taskloop_simd_clause
  340                           | ε

  341 taskloop_simd_clause: if_clause
  342                     | shared_clause
  343                     | private_clause
  344                     | first_private_clause
  345                     | last_private_clause
  346                     | default_clause
  347                     | grainsize_clause
  348                     | num_tasks_clause
  349                     | collapse_clause
  350                     | final_clause
  351                     | priority_clause
  352                     | untied_clause
  353                     | mergeable_clause
  354                     | NOGROUP
  355                     | safe_len_clause
  356                     | simd_len_clause
  357                     | linear_clause
  358                     | aligned_clause
  359                     | reduction_clause

  360 taskloop_construct: taskloop_directive iteration_statement_for

  361 taskloop_directive: PRAGMA OMP TASKLOOP taskloop_clause_multi ENDLN

  362 taskloop_clause_multi: taskloop_clause_multi taskloop_clause
  363                      | taskloop_clause_multi ',' taskloop_clause
  364                      | ε

  365 taskloop_clause: if_clause
  366                | shared_clause
  367                | private_clause
  368                | first_private_clause
  369                | last_private_clause
  370                | default_clause
  371                | grainsize_clause
  372                | num_tasks_clause
  373                | collapse_clause
  374                | final_clause
  375                | priority_clause
  376                | untied_clause
  377                | mergeable_clause
  378                | NOGROUP
  379                | num_threads_clause
  380                | schedule_clause
  381                | reduction_clause
  382                | depend_clause

  383 declare_simd_construct: declare_simd_directive

  384 declare_simd_directive: PRAGMA OMP DECLARE SIMD declare_simd_directive_clause_multi ENDLN

  385 declare_simd_directive_clause_multi: declare_simd_directive_clause_multi declare_simd_directive_clause
  386                                    | declare_simd_directive_clause_multi ',' declare_simd_directive_clause
  387                                    | ε

  388 declare_simd_directive_clause: simd_len_clause
  389                              | linear_clause
  390                              | aligned_clause
  391                              | uniform_clause
  392                              | INBRANCH
  393                              | NOTINBRANCH

  394 taskgroup_construct: taskgroup_directive

  395 taskgroup_directive: PRAGMA OMP TASKGROUP ENDLN

  396 target_teams_distribute_parallel_for_simd_construct: target_teams_distribute_parallel_for_simd_directive iteration_statement_for

  397 target_teams_distribute_parallel_for_simd_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE PARALLEL FOR SIMD target_teams_distribute_parallel_for_simd_clause_multi ENDLN

  398 target_teams_distribute_parallel_for_simd_clause_multi: target_teams_distribute_parallel_for_simd_clause_multi target_teams_distribute_parallel_for_simd_clause
  399                                                       | target_teams_distribute_parallel_for_simd_clause_multi ',' target_teams_distribute_parallel_for_simd_clause
  400                                                       | ε

  401 target_teams_distribute_parallel_for_simd_clause: dist_schedule_clause
  402                                                 | if_clause
  403                                                 | num_threads_clause
  404                                                 | copyin_clause
  405                                                 | procbind_clause
  406                                                 | default_clause
  407                                                 | private_clause
  408                                                 | first_private_clause
  409                                                 | shared_clause
  410                                                 | reduction_clause
  411                                                 | ordered_clause
  412                                                 | safe_len_clause
  413                                                 | simd_len_clause
  414                                                 | linear_clause
  415                                                 | aligned_clause
  416                                                 | schedule_clause
  417                                                 | collapse_clause
  418                                                 | last_private_clause
  419                                                 | device_clause
  420                                                 | map_clause
  421                                                 | IS_DEVICE_PTR '(' variable_list ')'
  422                                                 | DEFAULTMAP '(' TOFROM ':' SCALAR ')'
  423                                                 | depend_clause
  424                                                 | num_teams_clause
  425                                                 | thread_limit_clause
  426                                                 | NOWAIT

  427 teams_distribute_parallel_for_simd_construct: teams_distribute_parallel_for_simd_directive iteration_statement_for

  428 teams_distribute_parallel_for_simd_directive: PRAGMA OMP TEAMS DISTRIBUTE PARALLEL FOR SIMD teams_distribute_parallel_for_simd_clause_multi ENDLN

  429 teams_distribute_parallel_for_simd_clause_multi: teams_distribute_parallel_for_simd_clause_multi teams_distribute_parallel_for_simd_clause
  430                                                | teams_distribute_parallel_for_simd_clause_multi ',' teams_distribute_parallel_for_simd_clause
  431                                                | ε

  432 teams_distribute_parallel_for_simd_clause: dist_schedule_clause
  433                                          | if_clause
  434                                          | num_threads_clause
  435                                          | copyin_clause
  436                                          | procbind_clause
  437                                          | default_clause
  438                                          | private_clause
  439                                          | first_private_clause
  440                                          | shared_clause
  441                                          | reduction_clause
  442                                          | ordered_clause
  443                                          | safe_len_clause
  444                                          | simd_len_clause
  445                                          | linear_clause
  446                                          | aligned_clause
  447                                          | schedule_clause
  448                                          | collapse_clause
  449                                          | last_private_clause
  450                                          | device_clause
  451                                          | map_clause
  452                                          | IS_DEVICE_PTR '(' variable_list ')'
  453                                          | DEFAULTMAP '(' TOFROM ':' SCALAR ')'
  454                                          | depend_clause
  455                                          | num_teams_clause
  456                                          | thread_limit_clause
  457                                          | NOWAIT

  458 target_teams_distribute_parallel_for_construct: target_teams_distribute_parallel_for_directive iteration_statement_for

  459 target_teams_distribute_parallel_for_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE PARALLEL FOR target_teams_distribute_parallel_for_clause_multi ENDLN

  460 target_teams_distribute_parallel_for_clause_multi: target_teams_distribute_parallel_for_clause_multi target_teams_distribute_parallel_for_clause
  461                                                  | target_teams_distribute_parallel_for_clause_multi ',' target_teams_distribute_parallel_for_clause
  462                                                  | ε

  463 target_teams_distribute_parallel_for_clause: num_teams_clause
  464                                            | thread_limit_clause
  465                                            | default_clause
  466                                            | private_clause
  467                                            | first_private_clause
  468                                            | shared_clause
  469                                            | reduction_clause
  470                                            | if_clause
  471                                            | copyin_clause
  472                                            | procbind_clause
  473                                            | ordered_clause
  474                                            | schedule_clause
  475                                            | collapse_clause
  476                                            | last_private_clause
  477                                            | dist_schedule_clause
  478                                            | device_clause
  479                                            | map_clause
  480                                            | IS_DEVICE_PTR '(' variable_list ')'
  481                                            | DEFAULTMAP '(' TOFROM ':' SCALAR ')'
  482                                            | depend_clause
  483                                            | NOWAIT

  484 teams_distribute_parallel_for_construct: teams_distribute_parallel_for_directive iteration_statement_for

  485 teams_distribute_parallel_for_directive: PRAGMA OMP TEAMS DISTRIBUTE PARALLEL FOR teams_distribute_parallel_for_clause_multi ENDLN

  486 teams_distribute_parallel_for_clause_multi: teams_distribute_parallel_for_clause_multi teams_distribute_parallel_for_clause
  487                                           | teams_distribute_parallel_for_clause_multi ',' teams_distribute_parallel_for_clause
  488                                           | ε

  489 teams_distribute_parallel_for_clause: num_teams_clause
  490                                     | thread_limit_clause
  491                                     | default_clause
  492                                     | private_clause
  493                                     | first_private_clause
  494                                     | shared_clause
  495                                     | reduction_clause
  496                                     | if_clause
  497                                     | copyin_clause
  498                                     | procbind_clause
  499                                     | ordered_clause
  500                                     | schedule_clause
  501                                     | collapse_clause
  502                                     | last_private_clause
  503                                     | dist_schedule_clause

  504 target_teams_distribute_simd_construct: target_teams_distribute_simd_directive iteration_statement_for

  505 target_teams_distribute_simd_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE SIMD target_teams_distribute_simd_clause_multi ENDLN

  506 target_teams_distribute_simd_clause_multi: target_teams_distribute_simd_clause_multi target_teams_distribute_simd_clause
  507                                          | target_teams_distribute_simd_clause_multi ',' target_teams_distribute_simd_clause
  508                                          | ε

  509 target_teams_distribute_simd_clause: device_clause
  510                                    | map_clause
  511                                    | if_clause
  512                                    | private_clause
  513                                    | first_private_clause
  514                                    | IS_DEVICE_PTR '(' variable_list ')'
  515                                    | DEFAULTMAP '(' TOFROM ':' SCALAR ')'
  516                                    | depend_clause
  517                                    | num_teams_clause
  518                                    | thread_limit_clause
  519                                    | default_clause
  520                                    | shared_clause
  521                                    | reduction_clause
  522                                    | dist_schedule_clause
  523                                    | last_private_clause
  524                                    | collapse_clause
  525                                    | safe_len_clause
  526                                    | simd_len_clause
  527                                    | linear_clause
  528                                    | aligned_clause
  529                                    | NOWAIT

  530 target_teams_distribute_construct: target_teams_distribute_directive iteration_statement_for

  531 target_teams_distribute_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE target_teams_distribute_clause_multi ENDLN

  532 target_teams_distribute_clause_multi: target_teams_distribute_clause_multi target_teams_distribute_clause
  533                                     | target_teams_distribute_clause_multi ',' target_teams_distribute_clause
  534                                     | ε

  535 target_teams_distribute_clause: device_clause
  536                               | map_clause
  537                               | if_clause
  538                               | private_clause
  539                               | first_private_clause
  540                               | IS_DEVICE_PTR '(' variable_list ')'
  541                               | DEFAULTMAP '(' TOFROM ':' SCALAR ')'
  542                               | depend_clause
  543                               | num_teams_clause
  544                               | thread_limit_clause
  545                               | default_clause
  546                               | shared_clause
  547                               | reduction_clause
  548                               | dist_schedule_clause
  549                               | last_private_clause
  550                               | collapse_clause
  551                               | NOWAIT

  552 teams_distribute_simd_construct: teams_distribute_simd_directive iteration_statement_for

  553 teams_distribute_simd_directive: PRAGMA OMP TEAMS DISTRIBUTE SIMD teams_distribute_simd_clause_multi ENDLN

  554 teams_distribute_simd_clause_multi: teams_distribute_simd_clause_multi teams_distribute_simd_clause
  555                                   | teams_distribute_simd_clause_multi ',' teams_distribute_simd_clause
  556                                   | ε

  557 teams_distribute_simd_clause: num_teams_clause
  558                             | thread_limit_clause
  559                             | default_clause
  560                             | private_clause
  561                             | first_private_clause
  562                             | shared_clause
  563                             | reduction_clause
  564                             | dist_schedule_clause
  565                             | last_private_clause
  566                             | collapse_clause
  567                             | safe_len_clause
  568                             | simd_len_clause
  569                             | linear_clause
  570                             | aligned_clause

  571 teams_distribute_construct: teams_distribute_directive iteration_statement_for

  572 teams_distribute_directive: PRAGMA OMP TEAMS DISTRIBUTE teams_distribute_clause_multi ENDLN

  573 teams_distribute_clause_multi: teams_distribute_clause_multi teams_distribute_clause
  574                              | teams_distribute_clause_multi ',' teams_distribute_clause
  575                              | ε

  576 teams_distribute_clause: num_teams_clause
  577                        | thread_limit_clause
  578                        | default_clause
  579                        | private_clause
  580                        | first_private_clause
  581                        | shared_clause
  582                        | reduction_clause
  583                        | dist_schedule_clause
  584                        | last_private_clause
  585                        | collapse_clause

  586 target_teams_construct: target_teams_directive

  587 target_teams_directive: PRAGMA OMP TARGET TEAMS target_teams_clause_multi ENDLN

  588 target_teams_clause_multi: target_teams_clause_multi target_teams_clause
  589                          | target_teams_clause_multi ',' target_teams_clause
  590                          | ε

  591 target_teams_clause: device_clause
  592                    | map_clause
  593                    | if_clause
  594                    | private_clause
  595                    | first_private_clause
  596                    | IS_DEVICE_PTR '(' variable_list ')'
  597                    | DEFAULTMAP '(' TOFROM ':' SCALAR ')'
  598                    | depend_clause
  599                    | num_teams_clause
  600                    | thread_limit_clause
  601                    | default_clause
  602                    | shared_clause
  603                    | reduction_clause
  604                    | NOWAIT

  605 distribute_parallel_for_simd_construct: distribute_parallel_for_simd_directive

  606 distribute_parallel_for_simd_directive: PRAGMA OMP DISTRIBUTE PARALLEL FOR SIMD distribute_parallel_for_simd_clause_multi ENDLN

  607 distribute_parallel_for_simd_clause_multi: distribute_parallel_for_simd_clause_multi distribute_parallel_for_simd_clause
  608                                          | distribute_parallel_for_simd_clause_multi ',' distribute_parallel_for_simd_clause
  609                                          | ε

  610 distribute_parallel_for_simd_clause: dist_schedule_clause
  611                                    | if_clause
  612                                    | num_threads_clause
  613                                    | copyin_clause
  614                                    | procbind_clause
  615                                    | default_clause
  616                                    | private_clause
  617                                    | first_private_clause
  618                                    | shared_clause
  619                                    | reduction_clause
  620                                    | ordered_clause
  621                                    | safe_len_clause
  622                                    | simd_len_clause
  623                                    | linear_clause
  624                                    | aligned_clause
  625                                    | schedule_clause
  626                                    | collapse_clause
  627                                    | last_private_clause

  628 distribute_parallel_for_construct: distribute_parallel_for_directive iteration_statement_for

  629 distribute_parallel_for_directive: PRAGMA OMP DISTRIBUTE PARALLEL FOR distribute_parallel_for_clause_multi ENDLN

  630 distribute_parallel_for_clause_multi: distribute_parallel_for_clause_multi distribute_parallel_for_clause
  631                                     | distribute_parallel_for_clause_multi ',' distribute_parallel_for_clause
  632                                     | ε

  633 distribute_parallel_for_clause: if_clause
  634                               | num_threads_clause
  635                               | copyin_clause
  636                               | procbind_clause
  637                               | default_clause
  638                               | private_clause
  639                               | first_private_clause
  640                               | shared_clause
  641                               | reduction_clause
  642                               | ordered_clause
  643                               | schedule_clause
  644                               | collapse_clause
  645                               | last_private_clause
  646                               | dist_schedule_clause

  647 distribute_simd_construct: distribute_simd_directive iteration_statement_for

  648 distribute_simd_directive: PRAGMA OMP DISTRIBUTE SIMD distribute_simd_clause_multi ENDLN

  649 distribute_simd_clause_multi: distribute_simd_clause_multi distribute_simd_clause
  650                             | distribute_simd_clause_multi ',' distribute_simd_clause
  651                             | ε

  652 distribute_simd_clause: dist_schedule_clause
  653                       | private_clause
  654                       | first_private_clause
  655                       | last_private_clause
  656                       | collapse_clause
  657                       | safe_len_clause
  658                       | simd_len_clause
  659                       | linear_clause
  660                       | aligned_clause
  661                       | reduction_clause

  662 distribute_construct: distribute_directive iteration_statement_for

  663 distribute_directive: PRAGMA OMP DISTRIBUTE distribute_clause_multi ENDLN

  664 distribute_clause_multi: distribute_clause_multi distribute_clause
  665                        | distribute_clause_multi ',' distribute_clause
  666                        | ε

  667 distribute_clause: dist_schedule_clause
  668                  | private_clause
  669                  | first_private_clause
  670                  | last_private_clause
  671                  | collapse_clause

  672 teams_construct: teams_directive

  673 teams_directive: PRAGMA OMP TEAMS teams_clause_multi ENDLN

  674 teams_clause_multi: teams_clause_multi teams_clause
  675                   | teams_clause_multi ',' teams_clause
  676                   | ε

  677 teams_clause: num_teams_clause
  678             | thread_limit_clause
  679             | default_clause
  680             | private_clause
  681             | first_private_clause
  682             | shared_clause
  683             | reduction_clause

  684 target_update_construct: target_update_directive

  685 target_update_directive: PRAGMA OMP TARGET UPDATE target_update_clause_seq ENDLN

  686 target_update_clause_seq: target_update_clause
  687                         | target_update_clause_seq target_update_clause
  688                         | target_update_clause_seq ',' target_update_clause

  689 target_update_clause: motion_clause
  690                     | device_clause
  691                     | if_clause
  692                     | depend_clause
  693                     | NOWAIT

  694 target_construct: target_directive

  695 target_directive: PRAGMA OMP TARGET target_clause_multi ENDLN

  696 target_clause_multi: target_clause_multi target_clause
  697                    | target_clause_multi ',' target_clause
  698                    | ε

  699 target_clause: device_clause
  700              | map_clause
  701              | if_clause
  702              | private_clause
  703              | first_private_clause
  704              | IS_DEVICE_PTR '(' variable_list ')'
  705              | DEFAULTMAP '(' TOFROM ':' SCALAR ')'
  706              | depend_clause
  707              | NOWAIT

  708 target_data_construct: target_data_directive

  709 target_data_directive: PRAGMA OMP TARGET DATA target_data_clause_multi ENDLN

  710 target_data_clause_multi: target_data_clause_multi target_data_clause
  711                         | target_data_clause_multi ',' target_data_clause
  712                         | ε

  713 target_data_clause: device_clause
  714                   | map_clause
  715                   | if_clause
  716                   | USE_DEVICE_PTR '(' variable_list ')'

  717 parallel_for_simd_construct: parallel_for_simd_directive iteration_statement_for

  718 parallel_for_simd_directive: PRAGMA OMP PARALLEL FOR SIMD parallel_for_simd_clause_multi ENDLN

  719 parallel_for_simd_clause_multi: parallel_for_simd_clause_multi parallel_for_simd_clause
  720                               | parallel_for_simd_clause_multi ',' parallel_for_simd_clause
  721                               | ε

  722 parallel_for_simd_clause: if_clause
  723                         | num_threads_clause
  724                         | copyin_clause
  725                         | procbind_clause
  726                         | default_clause
  727                         | private_clause
  728                         | first_private_clause
  729                         | shared_clause
  730                         | reduction_clause
  731                         | ordered_clause
  732                         | safe_len_clause
  733                         | simd_len_clause
  734                         | linear_clause
  735                         | aligned_clause
  736                         | schedule_clause
  737                         | collapse_clause
  738                         | last_private_clause

  739 for_simd_construct: for_simd_directive iteration_statement_for

  740 for_simd_directive: PRAGMA OMP FOR SIMD for_simd_clause_multi ENDLN

  741 for_simd_clause_multi: for_simd_clause_multi for_simd_clause
  742                      | for_simd_clause_multi ',' for_simd_clause
  743                      | ε

  744 for_simd_clause: ordered_clause
  745                | num_threads_clause
  746                | safe_len_clause
  747                | simd_len_clause
  748                | linear_clause
  749                | aligned_clause
  750                | schedule_clause
  751                | collapse_clause
  752                | private_clause
  753                | first_private_clause
  754                | last_private_clause
  755                | reduction_clause
  756                | NOWAIT
  757                | depend_clause

  758 simd_construct: simd_directive iteration_statement_for

  759 simd_directive: PRAGMA OMP SIMD simd_clause_multi ENDLN

  760 simd_clause_multi: simd_clause_multi simd_clause
  761                  | simd_clause_multi ',' simd_clause
  762                  | ε

  763 simd_clause: safe_len_clause
  764            | simd_len_clause
  765            | private_clause
  766            | linear_clause
  767            | aligned_clause
  768            | last_private_clause
  769            | reduction_clause
  770            | collapse_clause

  771 task_construct: task_directive

  772 task_directive: PRAGMA OMP TASK task_clause_multi ENDLN

  773 task_clause_multi: task_clause_multi task_clause
  774                  | task_clause_multi ',' task_clause
  775                  | ε

  776 task_clause: if_clause
  777            | final_clause
  778            | untied_clause
  779            | mergeable_clause
  780            | depend_clause
  781            | priority_clause
  782            | default_clause
  783            | private_clause
  784            | first_private_clause
  785            | shared_clause

  786 ordered_construct: ordered_directive

  787 ordered_directive: PRAGMA OMP ORDERED ordered_clause_multi ENDLN

  788 ordered_clause_multi: ordered_clause_multi ordered_clause_opt
  789                     | ordered_clause_multi ',' ordered_clause_opt
  790                     | ε

  791 atomic_construct: atomic_directive expression_statement

  792 atomic_directive: PRAGMA OMP ATOMIC atomic_clause seq_cst_clause ENDLN

  793 critical_construct: critical_directive

  794 critical_directive: PRAGMA OMP CRITICAL ENDLN
  795                   | PRAGMA OMP CRITICAL region_phrase ENDLN

  796 master_construct: master_directive

  797 master_directive: PRAGMA OMP MASTER ENDLN

  798 parallel_sections_construct: parallel_sections_directive

  799 parallel_sections_directive: PRAGMA OMP PARALLEL SECTIONS parallel_sections_clause_multi ENDLN

  800 parallel_sections_clause_multi: parallel_sections_clause_multi parallel_sections_clause
  801                               | parallel_sections_clause_multi ',' parallel_sections_clause
  802                               | ε

  803 parallel_sections_clause: if_clause
  804                         | num_threads_clause
  805                         | copyin_clause
  806                         | procbind_clause
  807                         | default_clause
  808                         | private_clause
  809                         | first_private_clause
  810                         | last_private_clause
  811                         | shared_clause
  812                         | reduction_clause

  813 parallel_for_construct: parallel_for_directive iteration_statement_for

  814 parallel_for_directive: PRAGMA OMP PARALLEL FOR parallel_for_clause_multi ENDLN

  815 parallel_for_clause_multi: parallel_for_clause_multi parallel_for_clause
  816                          | parallel_for_clause_multi ',' parallel_for_clause
  817                          | ε

  818 parallel_for_clause: if_clause
  819                    | num_threads_clause
  820                    | copyin_clause
  821                    | procbind_clause
  822                    | default_clause
  823                    | private_clause
  824                    | first_private_clause
  825                    | shared_clause
  826                    | reduction_clause
  827                    | ordered_clause
  828                    | schedule_clause
  829                    | collapse_clause
  830                    | last_private_clause

  831 single_construct: single_directive

  832 single_directive: PRAGMA OMP SINGLE single_clause_multi ENDLN

  833 single_clause_multi: single_clause_multi single_clause
  834                    | single_clause_multi ',' single_clause
  835                    | ε

  836 single_clause: copy_private_clause
  837              | private_clause
  838              | first_private_clause
  839              | NOWAIT

  840 sections_construct: sections_directive

  841 sections_directive: PRAGMA OMP SECTIONS sections_clause_multi ENDLN

  842 sections_clause_multi: sections_clause_multi sections_clause
  843                      | sections_clause_multi ',' sections_clause
  844                      | ε

  845 sections_clause: private_clause
  846                | first_private_clause
  847                | last_private_clause
  848                | reduction_clause
  849                | NOWAIT

  850 section_construct: section_directive

  851 section_directive: PRAGMA OMP SECTION ENDLN

  852 for_construct: for_directive iteration_statement_for

  853 for_directive: PRAGMA OMP FOR for_clause_multi ENDLN

  854 for_clause_multi: for_clause_multi for_clause
  855                 | for_clause_multi ',' for_clause
  856                 | ε

  857 for_clause: ordered_clause
  858           | num_threads_clause
  859           | schedule_clause
  860           | collapse_clause
  861           | private_clause
  862           | first_private_clause
  863           | last_private_clause
  864           | reduction_clause
  865           | NOWAIT
  866           | depend_clause

  867 parallel_construct: parallel_directive

  868 parallel_directive: PRAGMA OMP PARALLEL parallel_clause_multi ENDLN

  869 parallel_clause_multi: parallel_clause_multi parallel_clause
  870                      | parallel_clause_multi ',' parallel_clause
  871                      | ε

  872 parallel_clause: if_clause
  873                | num_threads_clause
  874                | depend_clause
  875                | copyin_clause
  876                | procbind_clause
  877                | default_clause
  878                | private_clause
  879                | first_private_clause
  880                | shared_clause
  881                | reduction_clause

  882 omp_declare_reduction: PRAGMA OMP DECLARE reduction_clause ENDLN

  883 omp_threadprivate: PRAGMA OMP THREADPRIVATE '(' variable_list ')' ENDLN

  884 omp_barrier: PRAGMA OMP BARRIER ENDLN

  885 omp_flush: PRAGMA OMP FLUSH ENDLN
  886          | PRAGMA OMP FLUSH flush_list ENDLN

  887 flush_list: '(' variable_list ')'

  888 omp_taskwait: PRAGMA OMP TASKWAIT ENDLN

  889 omp_taskyield: PRAGMA OMP TASKYIELD ENDLN

  890 omp_target_enter_data: PRAGMA OMP TARGET ENTER DATA omp_target_enter_data_clause_multi ENDLN

  891 omp_target_enter_data_clause_multi: omp_target_enter_data_clause_multi omp_target_enter_data_clause
  892                                   | omp_target_enter_data_clause_multi ',' omp_target_enter_data_clause
  893                                   | ε

  894 omp_target_enter_data_clause: if_clause
  895                             | device_clause
  896                             | map_clause
  897                             | depend_clause
  898                             | NOWAIT

  899 omp_target_exit_data: PRAGMA OMP TARGET EXIT DATA omp_target_exit_data_clause_multi ENDLN

  900 omp_target_exit_data_clause_multi: omp_target_exit_data_clause_multi omp_target_exit_data_clause
  901                                  | omp_target_exit_data_clause_multi ',' omp_target_exit_data_clause
  902                                  | ε

  903 omp_target_exit_data_clause: if_clause
  904                            | device_clause
  905                            | map_clause
  906                            | depend_clause
  907                            | NOWAIT

  908 omp_cancel: PRAGMA OMP CANCEL type_construct_clause ENDLN
  909           | PRAGMA OMP CANCEL type_construct_clause if_clause ENDLN
  910           | PRAGMA OMP CANCEL type_construct_clause ',' if_clause ENDLN

  911 omp_cancellation_point: PRAGMA OMP CANCELLATION POINT type_construct_clause ENDLN

  912 grainsize_clause: GRAINSIZE '(' I_CONSTANT ')'

  913 num_tasks_clause: NUM_TASKS '(' I_CONSTANT ')'

  914 uniform_clause: UNIFORM '(' argument_expression_list ')'

  915 dist_schedule_clause: DIST_SCHEDULE '(' STATIC ')'
  916                     | DIST_SCHEDULE '(' STATIC ',' expression ')'

  917 num_teams_clause: NUM_TEAMS '(' expression ')'

  918 thread_limit_clause: THREAD_LIMIT '(' expression ')'

  919 motion_clause: TO '(' variable_array_section_list ')'
  920              | FROM '(' variable_array_section_list ')'

  921 device_clause: DEVICE '(' expression ')'

  922 map_clause: MAP '(' map_type ':' variable_array_section_list ')'
  923           | MAP '(' variable_array_section_list ')'

  924 map_type: ALLOC
  925         | TO
  926         | FROM
  927         | TOFROM

  928 safe_len_clause: SAFELEN '(' expression ')'

  929 simd_len_clause: SIMDLEN '(' I_CONSTANT ')'

  930 final_clause: FINAL '(' expression ')'

  931 untied_clause: UNTIED

  932 mergeable_clause: MERGEABLE

  933 depend_clause: DEPEND '(' dependence_type ':' variable_array_section_list ')'

  934 dependence_type: IN
  935                | OUT
  936                | INOUT
  937                | ε

  938 priority_clause: PRIORITY '(' I_CONSTANT ')'

  939 ordered_clause_opt: THREADS
  940                   | SIMD

  941 atomic_clause: READ
  942              | WRITE
  943              | UPDATE
  944              | CAPTURE
  945              | ε

  946 seq_cst_clause: SEQ_CST
  947               | ε

  948 region_phrase: '(' IDENTIFIER ')'

  949 copy_private_clause: COPYPRIVATE '(' variable_list ')'

  950 ordered_clause: ORDERED
  951               | ORDERED '(' expression ')'

  952 schedule_clause: SCHEDULE '(' schedule_kind ')'
  953                | SCHEDULE '(' schedule_kind ',' I_CONSTANT ')'
  954                | SCHEDULE '(' schedule_kind ',' IDENTIFIER ')'

  955 schedule_kind: STATIC
  956              | CROSS
  957              | ε

  958 num_threads_clause: NUM_THREADS '(' I_CONSTANT ')'

  959 copyin_clause: COPYIN '(' variable_list ')'

  960 default_clause: DEFAULT '(' SHARED ')'
  961               | DEFAULT '(' NONE ')'

  962 private_clause: PRIVATE '(' variable_list ')'

  963 first_private_clause: FIRSTPRIVATE '(' variable_list ')'

  964 last_private_clause: LASTPRIVATE '(' variable_list ')'

  965 shared_clause: SHARED '(' variable_list ')'

  966 reduction_clause: REDUCTION '(' reduction_identifier ':' variable_list ')'

  967 linear_clause: LINEAR '(' variable_list optional_expression ')'

  968 aligned_clause: ALIGNED '(' variable_list optional_expression ')'

  969 variable_array_section_list: IDENTIFIER
  970                            | array_section
  971                            | variable_array_section_list ',' IDENTIFIER
  972                            | variable_array_section_list ',' array_section

  973 array_section: IDENTIFIER array_section_subscript

  974 array_section_subscript: array_section_subscript '[' array_section_plain ']'
  975                        | '[' array_section_plain ']'

  976 array_section_plain: IDENTIFIER
  977                    | I_CONSTANT
  978                    | IDENTIFIER ':' IDENTIFIER
  979                    | IDENTIFIER ':' I_CONSTANT
  980                    | I_CONSTANT ':' IDENTIFIER
  981                    | I_CONSTANT ':' I_CONSTANT

  982 collapse_clause: COLLAPSE '(' expression ')'

  983 variable_list: variable_list ',' IDENTIFIER
  984              | IDENTIFIER
  985              | I_CONSTANT

  986 type_construct_clause: PARALLEL
  987                      | SECTIONS
  988                      | FOR
  989                      | TASKGROUP
  990                      | ε

  991 if_clause: IF '(' expression ')'

  992 procbind_clause: PROC_BIND '(' MASTER ')'
  993                | PROC_BIND '(' CLOSE ')'
  994                | PROC_BIND '(' SPREAD ')'

  995 reduction_identifier: IDENTIFIER
  996                     | '+'
  997                     | '*'
  998                     | '-'
  999                     | '&'
  1000                     | '^'
  1001                     | '|'
  1002                     | AND_OPERAND
  1003                     | OR_OPERAND
  1004                     | MIN
  1005                     | MAX


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 43
    '%' (37) 49
    '&' (38) 38 65 999
    '(' (40) 8 14 21 22 27 28 36 37 45 126 134 144 145 159 176 177 190 256 257 277 278 304 305 327 328 421 422 452 453 480 481 514 515 540 541 596 597 704 705 716 883 887 912 913 914 915 916 917 918 919 920 921 922 923 928 929 930 933 938 948 949 951 952 953 954 958 959 960 961 962 963 964 965 966 967 968 982 991 992 993 994
    ')' (41) 8 14 21 22 27 28 36 37 45 126 134 144 145 159 176 177 190 256 257 277 278 304 305 327 328 421 422 452 453 480 481 514 515 540 541 596 597 704 705 716 883 887 912 913 914 915 916 917 918 919 920 921 922 923 928 929 930 933 938 948 949 951 952 953 954 958 959 960 961 962 963 964 965 966 967 968 982 991 992 993 994
    '*' (42) 39 47 136 139 146 147 148 149 161 169 997
    '+' (43) 40 51 996
    ',' (44) 14 16 28 30 90 122 153 179 183 184 190 249 270 297 320 339 363 386 399 430 461 487 507 533 555 574 589 608 631 650 665 675 688 697 711 720 742 761 774 789 801 816 834 843 855 870 892 901 910 916 953 954 971 972 983
    '-' (45) 41 52 998
    '.' (46) 23 189
    '/' (47) 48
    ':' (58) 17 18 75 123 124 244 257 278 305 328 422 453 481 515 541 597 705 922 933 966 978 979 980 981
    ';' (59) 114 115 190 191 192
    '<' (60) 57
    '=' (61) 78 185
    '>' (62) 58
    '?' (63) 75
    '[' (91) 20 135 136 137 138 139 140 141 142 143 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 188 974 975
    ']' (93) 20 135 136 137 138 139 140 141 142 143 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 188 974 975
    '^' (94) 67 1000
    '{' (123) 27 28 107 108 178 179
    '|' (124) 69 1001
    '}' (125) 27 28 107 108 178 179
    '~' (126) 42
    error (256)
    IDENTIFIER (258) 5 23 24 108 109 133 152 153 189 948 954 969 971 973 976 978 979 980 983 984 995
    STRING_LITERAL (259) 12 190
    F_CONSTANT (260) 11
    I_CONSTANT (261) 10 912 913 929 938 953 958 977 979 980 981 985
    C_DEFAULT (262) 18
    C_STATIC (263) 137 138 140 162 163 164 170 171 173
    _ALIGNOF (264) 37
    _ATOMIC (265) 126 130
    _STATIC_ASSERT (266) 190
    AUTO (267)
    FUNC_NAME (268) 13
    CHAR (269) 93
    CONST (270) 127
    DOUBLE (271) 98
    FLOAT (272) 97
    INT (273) 95
    LONG (274) 96
    SHORT (275) 94
    BOOL (276) 99
    SIGNED (277) 100
    SIZEOF (278) 35 36
    STRUCT (279) 110
    UNION (280) 111
    UNSIGNED (281) 101
    _BOOL (282) 102
    _COMPLEX (283) 103
    _IMAGINARY (284) 104
    VOID (285) 92
    RESTRICT (286) 128
    VOLATILE (287) 129
    _GENERIC (288) 14
    LE_OPERAND (289) 59
    GE_OPERAND (290) 60
    EQ_OPERAND (291) 62
    NE_OPERAND (292) 63
    RIGHT_ASSIGN (293) 85
    LEFT_ASSIGN (294) 84
    ADD_ASSIGN (295) 82
    SUB_ASSIGN (296) 83
    MUL_ASSIGN (297) 79
    DIV_ASSIGN (298) 80
    MOD_ASSIGN (299) 81
    AND_ASSIGN (300) 86
    XOR_ASSIGN (301) 87
    OR_ASSIGN (302) 88
    RIGHT_OPERAND (303) 55
    LEFT_OPERAND (304) 54
    INC_OPERAND (305) 25 32
    DEC_OPERAND (306) 26 33
    PTR_OPERAND (307) 24
    AND_OPERAND (308) 71 1002
    OR_OPERAND (309) 73 1003
    PRAGMA (310) 247 268 295 318 337 361 384 395 397 428 459 485 505 531 553 572 587 606 629 648 663 673 685 695 709 718 740 759 772 787 792 794 795 797 799 814 832 841 851 853 868 882 883 884 885 886 888 889 890 899 908 909 910 911
    OMP (311) 247 268 295 318 337 361 384 395 397 428 459 485 505 531 553 572 587 606 629 648 663 673 685 695 709 718 740 759 772 787 792 794 795 797 799 814 832 841 851 853 868 882 883 884 885 886 888 889 890 899 908 909 910 911
    PARALLEL (312) 268 295 318 397 428 459 485 606 629 718 799 814 868 986
    FOR (313) 193 268 295 397 428 459 485 606 629 718 740 814 853 988
    SECTIONS (314) 799 841 987
    SECTION (315) 851
    SIMD (316) 247 268 337 384 397 428 505 553 606 648 718 740 759 940
    TASK (317) 772
    SINGLE (318) 832
    TARGET (319) 247 268 295 318 397 459 505 531 587 685 695 709 890 899
    ATOMIC (320) 792
    MASTER (321) 797 992
    CRITICAL (322) 794 795
    BARRIER (323) 884
    NUM_THREADS (324) 958
    DEFAULT (325) 960 961
    PRIVATE (326) 962
    FIRSTPRIVATE (327) 963
    SHARED (328) 960 965
    COPYIN (329) 959
    REDUCTION (330) 966
    NOWAIT (331) 266 293 316 335 426 457 483 529 551 604 693 707 756 839 849 865 898 907
    DEPEND (332) 933
    LASTPRIVATE (333) 964
    COPYPRIVATE (334) 949
    LINEAR (335) 967
    COLLAPSE (336) 982
    IF (337) 991
    FINAL (338) 930
    UNTIED (339) 931
    MERGEABLE (340) 932
    PRIORITY (341) 938
    SCHEDULE (342) 952 953 954
    ORDERED (343) 787 950 951
    GRAINSIZE (344) 912
    NUM_TASKS (345) 913
    NOGROUP (346) 354 378
    ALIGNED (347) 968
    SAFELEN (348) 928
    DECLARE (349) 384 882
    SIMDLEN (350) 929
    UNIFORM (351) 914
    INBRANCH (352) 392
    NOTINBRANCH (353) 393
    TASKLOOP (354) 337 361
    UPDATE (355) 685 943
    DISTRIBUTE (356) 397 428 459 485 505 531 553 572 606 629 648 663
    DEVICE (357) 921
    TO (358) 919 925
    FROM (359) 920 926
    TASKYIELD (360) 889
    DATA (361) 709 890 899
    ENTER (362) 890
    EXIT (363) 899
    MAP (364) 922 923
    IS_DEVICE_PTR (365) 256 277 304 327 421 452 480 514 540 596 704
    DEFAULTMAP (366) 257 278 305 328 422 453 481 515 541 597 705
    NUM_TEAMS (367) 917
    THREAD_LIMIT (368) 918
    DIST_SCHEDULE (369) 915 916
    TEAMS (370) 397 428 459 485 505 531 553 572 587 673
    TASKWAIT (371) 888
    TASKGROUP (372) 395 989
    READ (373) 941
    WRITE (374) 942
    CAPTURE (375) 944
    FLUSH (376) 885 886
    THREADS (377) 939
    CANCEL (378) 908 909 910
    CANCELLATION (379) 911
    POINT (380) 911
    THREADPRIVATE (381) 883
    IN (382) 934
    OUT (383) 935
    INOUT (384) 936
    NONE (385) 961
    PROC_BIND (386) 992 993 994
    CLOSE (387) 993
    SPREAD (388) 994
    MAX (389) 1005
    MIN (390) 1004
    SEQ_CST (391) 946
    ALLOC (392) 924
    TOFROM (393) 257 278 305 328 422 453 481 515 541 597 705 927
    USE_DEVICE_PTR (394) 716
    SCALAR (395) 257 278 305 328 422 453 481 515 541 597 705
    GUIDED (396)
    DYNAMIC (397)
    STATIC (398) 915 916 955
    RUNTIME (399)
    CROSS (400) 956
    ENDLN (401) 247 268 295 318 337 361 384 395 397 428 459 485 505 531 553 572 587 606 629 648 663 673 685 695 709 718 740 759 772 787 792 794 795 797 799 814 832 841 851 853 868 882 883 884 885 886 888 889 890 899 908 909 910 911
    GLOBAL (402)


Nonterminals, with rules where they appear

    $accept (172)
        on left: 0
    program (173)
        on left: 1 2
        on right: 0 2
    omp_statement (174)
        on left: 3 4
        on right: 1 2
    primary_expression (175)
        on left: 5 6 7 8 9
        on right: 19
    constant (176)
        on left: 10 11
        on right: 6
    string (177)
        on left: 12 13
        on right: 7
    generic_selection (178)
        on left: 14
        on right: 9
    generic_assoc_list (179)
        on left: 15 16
        on right: 14 16
    generic_association (180)
        on left: 17 18
        on right: 15 16
    postfix_expression (181)
        on left: 19 20 21 22 23 24 25 26 27 28
        on right: 20 21 22 23 24 25 26 31
    argument_expression_list (182)
        on left: 29 30
        on right: 22 30 914
    unary_expression (183)
        on left: 31 32 33 34 35 36 37
        on right: 32 33 35 44 77
    unary_operator (184)
        on left: 38 39 40 41 42 43
        on right: 34
    cast_expression (185)
        on left: 44 45
        on right: 34 45 46 47 48 49
    multiplicative_expression (186)
        on left: 46 47 48 49
        on right: 47 48 49 50 51 52
    additive_expression (187)
        on left: 50 51 52
        on right: 51 52 53 54 55
    shift_expression (188)
        on left: 53 54 55
        on right: 54 55 56 57 58 59 60
    relational_expression (189)
        on left: 56 57 58 59 60
        on right: 57 58 59 60 61 62 63
    equality_expression (190)
        on left: 61 62 63
        on right: 62 63 64 65
    and_expression (191)
        on left: 64 65
        on right: 65 66 67
    exclusive_or_expression (192)
        on left: 66 67
        on right: 67 68 69
    inclusive_or_expression (193)
        on left: 68 69
        on right: 69 70 71
    logical_and_expression (194)
        on left: 70 71
        on right: 71 72 73
    logical_or_expression (195)
        on left: 72 73
        on right: 73 74 75
    conditional_expression (196)
        on left: 74 75
        on right: 75 76 91
    assignment_expression (197)
        on left: 76 77
        on right: 14 17 18 29 30 77 89 90 137 138 140 141 143 162 163 164 165 167 170 171 172 173 175 180
    assignment_operator (198)
        on left: 78 79 80 81 82 83 84 85 86 87 88
        on right: 77
    expression (199)
        on left: 89 90
        on right: 8 20 75 90 192 244 916 917 918 921 928 930 951 982 991
    constant_expression (200)
        on left: 91
        on right: 123 124 188 190
    type_specifier (201)
        on left: 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106
        on right: 117 118
    struct_or_union_specifier (202)
        on left: 107 108 109
        on right: 106
    struct_or_union (203)
        on left: 110 111
        on right: 107 108 109
    struct_declaration_list (204)
        on left: 112 113
        on right: 107 108 113
    struct_declaration (205)
        on left: 114 115 116
        on right: 112 113
    specifier_qualifier_list (206)
        on left: 117 118 119 120
        on right: 114 115 117 119 154 155
    struct_declarator_list (207)
        on left: 121 122
        on right: 115 122
    struct_declarator (208)
        on left: 123 124 125
        on right: 121 122
    atomic_type_specifier (209)
        on left: 126
        on right: 105
    type_qualifier (210)
        on left: 127 128 129 130
        on right: 119 120 150 151
    declarator (211)
        on left: 131 132
        on right: 124 125 134
    direct_declarator (212)
        on left: 133 134 135 136 137 138 139 140 141 142 143 144 145
        on right: 131 132 135 136 137 138 139 140 141 142 143 144 145
    pointer (213)
        on left: 146 147 148 149
        on right: 131 146 148 156 157
    type_qualifier_list (214)
        on left: 150 151
        on right: 137 139 140 141 142 146 147 151 162 164 165 166 170 172 173 174
    identifier_list (215)
        on left: 152 153
        on right: 145 153
    type_name (216)
        on left: 154 155
        on right: 17 27 28 36 37 45 126
    abstract_declarator (217)
        on left: 156 157 158
        on right: 154 159
    direct_abstract_declarator (218)
        on left: 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177
        on right: 156 158 168 169 170 171 172 173 174 175 177
    initializer (219)
        on left: 178 179 180
        on right: 181 182 183 184
    initializer_list (220)
        on left: 181 182 183 184
        on right: 27 28 178 179 183 184
    designation (221)
        on left: 185
        on right: 181 183
    designator_list (222)
        on left: 186 187
        on right: 185 187
    designator (223)
        on left: 188 189
        on right: 186 187
    static_assert_declaration (224)
        on left: 190
        on right: 116
    expression_statement (225)
        on left: 191 192
        on right: 791
    iteration_statement_for (226)
        on left: 193
        on right: 246 267 294 336 360 396 427 458 484 504 530 552 571 628 647 662 717 739 758 813 852
    omp_construct (227)
        on left: 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
        on right: 3
    omp_directive (228)
        on left: 234 235 236 237 238 239 240 241 242 243
        on right: 4
    optional_expression (229)
        on left: 244 245
        on right: 967 968
    target_simd_construct (230)
        on left: 246
        on right: 211
    target_simd_directive (231)
        on left: 247
        on right: 246
    target_simd_clause_multi (232)
        on left: 248 249 250
        on right: 247 248 249
    target_simd_clause (233)
        on left: 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266
        on right: 248 249
    target_parallel_for_simd_construct (234)
        on left: 267
        on right: 214
    target_parallel_for_simd_directive (235)
        on left: 268
        on right: 267
    target_parallel_for_simd_clause_multi (236)
        on left: 269 270 271
        on right: 268 269 270
    target_parallel_for_simd_clause (237)
        on left: 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293
        on right: 269 270
    target_parallel_for_construct (238)
        on left: 294
        on right: 213
    target_parallel_for_directive (239)
        on left: 295
        on right: 294
    target_parallel_for_clause_multi (240)
        on left: 296 297 298
        on right: 295 296 297
    target_parallel_for_clause (241)
        on left: 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316
        on right: 296 297
    target_parallel_construct (242)
        on left: 317
        on right: 212
    target_parallel_directive (243)
        on left: 318
        on right: 317
    target_parallel_clause_multi (244)
        on left: 319 320 321
        on right: 318 319 320
    target_parallel_clause (245)
        on left: 322 323 324 325 326 327 328 329 330 331 332 333 334 335
        on right: 319 320
    taskloop_simd_construct (246)
        on left: 336
        on right: 233
    taskloop_simd_directive (247)
        on left: 337
        on right: 336
    taskloop_simd_clause_multi (248)
        on left: 338 339 340
        on right: 337 338 339
    taskloop_simd_clause (249)
        on left: 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
        on right: 338 339
    taskloop_construct (250)
        on left: 360
        on right: 232
    taskloop_directive (251)
        on left: 361
        on right: 360
    taskloop_clause_multi (252)
        on left: 362 363 364
        on right: 361 362 363
    taskloop_clause (253)
        on left: 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382
        on right: 362 363
    declare_simd_construct (254)
        on left: 383
        on right: 231
    declare_simd_directive (255)
        on left: 384
        on right: 383
    declare_simd_directive_clause_multi (256)
        on left: 385 386 387
        on right: 384 385 386
    declare_simd_directive_clause (257)
        on left: 388 389 390 391 392 393
        on right: 385 386
    taskgroup_construct (258)
        on left: 394
        on right: 230
    taskgroup_directive (259)
        on left: 395
        on right: 394
    target_teams_distribute_parallel_for_simd_construct (260)
        on left: 396
        on right: 229
    target_teams_distribute_parallel_for_simd_directive (261)
        on left: 397
        on right: 396
    target_teams_distribute_parallel_for_simd_clause_multi (262)
        on left: 398 399 400
        on right: 397 398 399
    target_teams_distribute_parallel_for_simd_clause (263)
        on left: 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426
        on right: 398 399
    teams_distribute_parallel_for_simd_construct (264)
        on left: 427
        on right: 228
    teams_distribute_parallel_for_simd_directive (265)
        on left: 428
        on right: 427
    teams_distribute_parallel_for_simd_clause_multi (266)
        on left: 429 430 431
        on right: 428 429 430
    teams_distribute_parallel_for_simd_clause (267)
        on left: 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457
        on right: 429 430
    target_teams_distribute_parallel_for_construct (268)
        on left: 458
        on right: 227
    target_teams_distribute_parallel_for_directive (269)
        on left: 459
        on right: 458
    target_teams_distribute_parallel_for_clause_multi (270)
        on left: 460 461 462
        on right: 459 460 461
    target_teams_distribute_parallel_for_clause (271)
        on left: 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483
        on right: 460 461
    teams_distribute_parallel_for_construct (272)
        on left: 484
        on right: 226
    teams_distribute_parallel_for_directive (273)
        on left: 485
        on right: 484
    teams_distribute_parallel_for_clause_multi (274)
        on left: 486 487 488
        on right: 485 486 487
    teams_distribute_parallel_for_clause (275)
        on left: 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503
        on right: 486 487
    target_teams_distribute_simd_construct (276)
        on left: 504
        on right: 225
    target_teams_distribute_simd_directive (277)
        on left: 505
        on right: 504
    target_teams_distribute_simd_clause_multi (278)
        on left: 506 507 508
        on right: 505 506 507
    target_teams_distribute_simd_clause (279)
        on left: 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529
        on right: 506 507
    target_teams_distribute_construct (280)
        on left: 530
        on right: 224
    target_teams_distribute_directive (281)
        on left: 531
        on right: 530
    target_teams_distribute_clause_multi (282)
        on left: 532 533 534
        on right: 531 532 533
    target_teams_distribute_clause (283)
        on left: 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551
        on right: 532 533
    teams_distribute_simd_construct (284)
        on left: 552
        on right: 223
    teams_distribute_simd_directive (285)
        on left: 553
        on right: 552
    teams_distribute_simd_clause_multi (286)
        on left: 554 555 556
        on right: 553 554 555
    teams_distribute_simd_clause (287)
        on left: 557 558 559 560 561 562 563 564 565 566 567 568 569 570
        on right: 554 555
    teams_distribute_construct (288)
        on left: 571
        on right: 222
    teams_distribute_directive (289)
        on left: 572
        on right: 571
    teams_distribute_clause_multi (290)
        on left: 573 574 575
        on right: 572 573 574
    teams_distribute_clause (291)
        on left: 576 577 578 579 580 581 582 583 584 585
        on right: 573 574
    target_teams_construct (292)
        on left: 586
        on right: 221
    target_teams_directive (293)
        on left: 587
        on right: 586
    target_teams_clause_multi (294)
        on left: 588 589 590
        on right: 587 588 589
    target_teams_clause (295)
        on left: 591 592 593 594 595 596 597 598 599 600 601 602 603 604
        on right: 588 589
    distribute_parallel_for_simd_construct (296)
        on left: 605
        on right: 220
    distribute_parallel_for_simd_directive (297)
        on left: 606
        on right: 605
    distribute_parallel_for_simd_clause_multi (298)
        on left: 607 608 609
        on right: 606 607 608
    distribute_parallel_for_simd_clause (299)
        on left: 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627
        on right: 607 608
    distribute_parallel_for_construct (300)
        on left: 628
        on right: 219
    distribute_parallel_for_directive (301)
        on left: 629
        on right: 628
    distribute_parallel_for_clause_multi (302)
        on left: 630 631 632
        on right: 629 630 631
    distribute_parallel_for_clause (303)
        on left: 633 634 635 636 637 638 639 640 641 642 643 644 645 646
        on right: 630 631
    distribute_simd_construct (304)
        on left: 647
        on right: 218
    distribute_simd_directive (305)
        on left: 648
        on right: 647
    distribute_simd_clause_multi (306)
        on left: 649 650 651
        on right: 648 649 650
    distribute_simd_clause (307)
        on left: 652 653 654 655 656 657 658 659 660 661
        on right: 649 650
    distribute_construct (308)
        on left: 662
        on right: 217
    distribute_directive (309)
        on left: 663
        on right: 662
    distribute_clause_multi (310)
        on left: 664 665 666
        on right: 663 664 665
    distribute_clause (311)
        on left: 667 668 669 670 671
        on right: 664 665
    teams_construct (312)
        on left: 672
        on right: 216
    teams_directive (313)
        on left: 673
        on right: 672
    teams_clause_multi (314)
        on left: 674 675 676
        on right: 673 674 675
    teams_clause (315)
        on left: 677 678 679 680 681 682 683
        on right: 674 675
    target_update_construct (316)
        on left: 684
        on right: 215
    target_update_directive (317)
        on left: 685
        on right: 684
    target_update_clause_seq (318)
        on left: 686 687 688
        on right: 685 687 688
    target_update_clause (319)
        on left: 689 690 691 692 693
        on right: 686 687 688
    target_construct (320)
        on left: 694
        on right: 210
    target_directive (321)
        on left: 695
        on right: 694
    target_clause_multi (322)
        on left: 696 697 698
        on right: 695 696 697
    target_clause (323)
        on left: 699 700 701 702 703 704 705 706 707
        on right: 696 697
    target_data_construct (324)
        on left: 708
        on right: 209
    target_data_directive (325)
        on left: 709
        on right: 708
    target_data_clause_multi (326)
        on left: 710 711 712
        on right: 709 710 711
    target_data_clause (327)
        on left: 713 714 715 716
        on right: 710 711
    parallel_for_simd_construct (328)
        on left: 717
        on right: 208
    parallel_for_simd_directive (329)
        on left: 718
        on right: 717
    parallel_for_simd_clause_multi (330)
        on left: 719 720 721
        on right: 718 719 720
    parallel_for_simd_clause (331)
        on left: 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738
        on right: 719 720
    for_simd_construct (332)
        on left: 739
        on right: 207
    for_simd_directive (333)
        on left: 740
        on right: 739
    for_simd_clause_multi (334)
        on left: 741 742 743
        on right: 740 741 742
    for_simd_clause (335)
        on left: 744 745 746 747 748 749 750 751 752 753 754 755 756 757
        on right: 741 742
    simd_construct (336)
        on left: 758
        on right: 206
    simd_directive (337)
        on left: 759
        on right: 758
    simd_clause_multi (338)
        on left: 760 761 762
        on right: 759 760 761
    simd_clause (339)
        on left: 763 764 765 766 767 768 769 770
        on right: 760 761
    task_construct (340)
        on left: 771
        on right: 205
    task_directive (341)
        on left: 772
        on right: 771
    task_clause_multi (342)
        on left: 773 774 775
        on right: 772 773 774
    task_clause (343)
        on left: 776 777 778 779 780 781 782 783 784 785
        on right: 773 774
    ordered_construct (344)
        on left: 786
        on right: 204
    ordered_directive (345)
        on left: 787
        on right: 786
    ordered_clause_multi (346)
        on left: 788 789 790
        on right: 787 788 789
    atomic_construct (347)
        on left: 791
        on right: 203
    atomic_directive (348)
        on left: 792
        on right: 791
    critical_construct (349)
        on left: 793
        on right: 202
    critical_directive (350)
        on left: 794 795
        on right: 793
    master_construct (351)
        on left: 796
        on right: 201
    master_directive (352)
        on left: 797
        on right: 796
    parallel_sections_construct (353)
        on left: 798
        on right: 200
    parallel_sections_directive (354)
        on left: 799
        on right: 798
    parallel_sections_clause_multi (355)
        on left: 800 801 802
        on right: 799 800 801
    parallel_sections_clause (356)
        on left: 803 804 805 806 807 808 809 810 811 812
        on right: 800 801
    parallel_for_construct (357)
        on left: 813
        on right: 199
    parallel_for_directive (358)
        on left: 814
        on right: 813
    parallel_for_clause_multi (359)
        on left: 815 816 817
        on right: 814 815 816
    parallel_for_clause (360)
        on left: 818 819 820 821 822 823 824 825 826 827 828 829 830
        on right: 815 816
    single_construct (361)
        on left: 831
        on right: 197
    single_directive (362)
        on left: 832
        on right: 831
    single_clause_multi (363)
        on left: 833 834 835
        on right: 832 833 834
    single_clause (364)
        on left: 836 837 838 839
        on right: 833 834
    sections_construct (365)
        on left: 840
        on right: 196
    sections_directive (366)
        on left: 841
        on right: 840
    sections_clause_multi (367)
        on left: 842 843 844
        on right: 841 842 843
    sections_clause (368)
        on left: 845 846 847 848 849
        on right: 842 843
    section_construct (369)
        on left: 850
        on right: 198
    section_directive (370)
        on left: 851
        on right: 850
    for_construct (371)
        on left: 852
        on right: 195
    for_directive (372)
        on left: 853
        on right: 852
    for_clause_multi (373)
        on left: 854 855 856
        on right: 853 854 855
    for_clause (374)
        on left: 857 858 859 860 861 862 863 864 865 866
        on right: 854 855
    parallel_construct (375)
        on left: 867
        on right: 194
    parallel_directive (376)
        on left: 868
        on right: 867
    parallel_clause_multi (377)
        on left: 869 870 871
        on right: 868 869 870
    parallel_clause (378)
        on left: 872 873 874 875 876 877 878 879 880 881
        on right: 869 870
    omp_declare_reduction (379)
        on left: 882
        on right: 243
    omp_threadprivate (380)
        on left: 883
        on right: 242
    omp_barrier (381)
        on left: 884
        on right: 234
    omp_flush (382)
        on left: 885 886
        on right: 235
    flush_list (383)
        on left: 887
        on right: 886
    omp_taskwait (384)
        on left: 888
        on right: 236
    omp_taskyield (385)
        on left: 889
        on right: 237
    omp_target_enter_data (386)
        on left: 890
        on right: 240
    omp_target_enter_data_clause_multi (387)
        on left: 891 892 893
        on right: 890 891 892
    omp_target_enter_data_clause (388)
        on left: 894 895 896 897 898
        on right: 891 892
    omp_target_exit_data (389)
        on left: 899
        on right: 241
    omp_target_exit_data_clause_multi (390)
        on left: 900 901 902
        on right: 899 900 901
    omp_target_exit_data_clause (391)
        on left: 903 904 905 906 907
        on right: 900 901
    omp_cancel (392)
        on left: 908 909 910
        on right: 238
    omp_cancellation_point (393)
        on left: 911
        on right: 239
    grainsize_clause (394)
        on left: 912
        on right: 347 371
    num_tasks_clause (395)
        on left: 913
        on right: 348 372
    uniform_clause (396)
        on left: 914
        on right: 391
    dist_schedule_clause (397)
        on left: 915 916
        on right: 401 432 477 503 522 548 564 583 610 646 652 667
    num_teams_clause (398)
        on left: 917
        on right: 424 455 463 489 517 543 557 576 599 677
    thread_limit_clause (399)
        on left: 918
        on right: 425 456 464 490 518 544 558 577 600 678
    motion_clause (400)
        on left: 919 920
        on right: 689
    device_clause (401)
        on left: 921
        on right: 251 272 299 322 419 450 478 509 535 591 690 699 713 895 904
    map_clause (402)
        on left: 922 923
        on right: 252 273 300 323 420 451 479 510 536 592 700 714 896 905
    map_type (403)
        on left: 924 925 926 927
        on right: 922
    safe_len_clause (404)
        on left: 928
        on right: 259 286 355 412 443 525 567 621 657 732 746 763
    simd_len_clause (405)
        on left: 929
        on right: 260 287 356 388 413 444 526 568 622 658 733 747 764
    final_clause (406)
        on left: 930
        on right: 350 374 777
    untied_clause (407)
        on left: 931
        on right: 352 376 778
    mergeable_clause (408)
        on left: 932
        on right: 353 377 779
    depend_clause (409)
        on left: 933
        on right: 258 279 306 329 382 423 454 482 516 542 598 692 706 757 780 866 874 897 906
    dependence_type (410)
        on left: 934 935 936 937
        on right: 933
    priority_clause (411)
        on left: 938
        on right: 351 375 781
    ordered_clause_opt (412)
        on left: 939 940
        on right: 788 789
    atomic_clause (413)
        on left: 941 942 943 944 945
        on right: 792
    seq_cst_clause (414)
        on left: 946 947
        on right: 792
    region_phrase (415)
        on left: 948
        on right: 795
    copy_private_clause (416)
        on left: 949
        on right: 836
    ordered_clause (417)
        on left: 950 951
        on right: 285 312 411 442 473 499 620 642 731 744 827 857
    schedule_clause (418)
        on left: 952 953 954
        on right: 290 313 380 416 447 474 500 625 643 736 750 828 859
    schedule_kind (419)
        on left: 955 956 957
        on right: 952 953 954
    num_threads_clause (420)
        on left: 958
        on right: 280 307 330 379 403 434 612 634 723 745 804 819 858 873
    copyin_clause (421)
        on left: 959
        on right: 404 435 471 497 613 635 724 805 820 875
    default_clause (422)
        on left: 960 961
        on right: 282 309 332 346 370 406 437 465 491 519 545 559 578 601 615 637 679 726 782 807 822 877
    private_clause (423)
        on left: 962
        on right: 254 275 302 325 343 367 407 438 466 492 512 538 560 579 594 616 638 653 668 680 702 727 752 765 783 808 823 837 845 861 878
    first_private_clause (424)
        on left: 963
        on right: 255 276 303 326 344 368 408 439 467 493 513 539 561 580 595 617 639 654 669 681 703 728 753 784 809 824 838 846 862 879
    last_private_clause (425)
        on left: 964
        on right: 263 292 315 345 369 418 449 476 502 523 549 565 584 627 645 655 670 738 754 768 810 830 847 863
    shared_clause (426)
        on left: 965
        on right: 283 310 333 342 366 409 440 468 494 520 546 562 581 602 618 640 682 729 785 811 825 880
    reduction_clause (427)
        on left: 966
        on right: 264 284 311 334 359 381 410 441 469 495 521 547 563 582 603 619 641 661 683 730 755 769 812 826 848 864 881 882
    linear_clause (428)
        on left: 967
        on right: 261 288 357 389 414 445 527 569 623 659 734 748 766
    aligned_clause (429)
        on left: 968
        on right: 262 289 358 390 415 446 528 570 624 660 735 749 767
    variable_array_section_list (430)
        on left: 969 970 971 972
        on right: 919 920 922 923 933 971 972
    array_section (431)
        on left: 973
        on right: 970 972
    array_section_subscript (432)
        on left: 974 975
        on right: 973 974
    array_section_plain (433)
        on left: 976 977 978 979 980 981
        on right: 974 975
    collapse_clause (434)
        on left: 982
        on right: 265 291 314 349 373 417 448 475 501 524 550 566 585 626 644 656 671 737 751 770 829 860
    variable_list (435)
        on left: 983 984 985
        on right: 256 277 304 327 421 452 480 514 540 596 704 716 883 887 949 959 962 963 964 965 966 967 968 983
    type_construct_clause (436)
        on left: 986 987 988 989 990
        on right: 908 909 910 911
    if_clause (437)
        on left: 991
        on right: 253 274 301 324 341 365 402 433 470 496 511 537 593 611 633 691 701 715 722 776 803 818 872 894 903 909 910
    procbind_clause (438)
        on left: 992 993 994
        on right: 281 308 331 405 436 472 498 614 636 725 806 821 876
    reduction_identifier (439)
        on left: 995 996 997 998 999 1000 1001 1002 1003 1004 1005
        on right: 966


State 0

    0 $accept: • program $end

    PRAGMA  shift, and go to state 1

    program                                              go to state 2
    omp_statement                                        go to state 3
    omp_construct                                        go to state 4
    omp_directive                                        go to state 5
    target_simd_construct                                go to state 6
    target_simd_directive                                go to state 7
    target_parallel_for_simd_construct                   go to state 8
    target_parallel_for_simd_directive                   go to state 9
    target_parallel_for_construct                        go to state 10
    target_parallel_for_directive                        go to state 11
    target_parallel_construct                            go to state 12
    target_parallel_directive                            go to state 13
    taskloop_simd_construct                              go to state 14
    taskloop_simd_directive                              go to state 15
    taskloop_construct                                   go to state 16
    taskloop_directive                                   go to state 17
    declare_simd_construct                               go to state 18
    declare_simd_directive                               go to state 19
    taskgroup_construct                                  go to state 20
    taskgroup_directive                                  go to state 21
    target_teams_distribute_parallel_for_simd_construct  go to state 22
    target_teams_distribute_parallel_for_simd_directive  go to state 23
    teams_distribute_parallel_for_simd_construct         go to state 24
    teams_distribute_parallel_for_simd_directive         go to state 25
    target_teams_distribute_parallel_for_construct       go to state 26
    target_teams_distribute_parallel_for_directive       go to state 27
    teams_distribute_parallel_for_construct              go to state 28
    teams_distribute_parallel_for_directive              go to state 29
    target_teams_distribute_simd_construct               go to state 30
    target_teams_distribute_simd_directive               go to state 31
    target_teams_distribute_construct                    go to state 32
    target_teams_distribute_directive                    go to state 33
    teams_distribute_simd_construct                      go to state 34
    teams_distribute_simd_directive                      go to state 35
    teams_distribute_construct                           go to state 36
    teams_distribute_directive                           go to state 37
    target_teams_construct                               go to state 38
    target_teams_directive                               go to state 39
    distribute_parallel_for_simd_construct               go to state 40
    distribute_parallel_for_simd_directive               go to state 41
    distribute_parallel_for_construct                    go to state 42
    distribute_parallel_for_directive                    go to state 43
    distribute_simd_construct                            go to state 44
    distribute_simd_directive                            go to state 45
    distribute_construct                                 go to state 46
    distribute_directive                                 go to state 47
    teams_construct                                      go to state 48
    teams_directive                                      go to state 49
    target_update_construct                              go to state 50
    target_update_directive                              go to state 51
    target_construct                                     go to state 52
    target_directive                                     go to state 53
    target_data_construct                                go to state 54
    target_data_directive                                go to state 55
    parallel_for_simd_construct                          go to state 56
    parallel_for_simd_directive                          go to state 57
    for_simd_construct                                   go to state 58
    for_simd_directive                                   go to state 59
    simd_construct                                       go to state 60
    simd_directive                                       go to state 61
    task_construct                                       go to state 62
    task_directive                                       go to state 63
    ordered_construct                                    go to state 64
    ordered_directive                                    go to state 65
    atomic_construct                                     go to state 66
    atomic_directive                                     go to state 67
    critical_construct                                   go to state 68
    critical_directive                                   go to state 69
    master_construct                                     go to state 70
    master_directive                                     go to state 71
    parallel_sections_construct                          go to state 72
    parallel_sections_directive                          go to state 73
    parallel_for_construct                               go to state 74
    parallel_for_directive                               go to state 75
    single_construct                                     go to state 76
    single_directive                                     go to state 77
    sections_construct                                   go to state 78
    sections_directive                                   go to state 79
    section_construct                                    go to state 80
    section_directive                                    go to state 81
    for_construct                                        go to state 82
    for_directive                                        go to state 83
    parallel_construct                                   go to state 84
    parallel_directive                                   go to state 85
    omp_declare_reduction                                go to state 86
    omp_threadprivate                                    go to state 87
    omp_barrier                                          go to state 88
    omp_flush                                            go to state 89
    omp_taskwait                                         go to state 90
    omp_taskyield                                        go to state 91
    omp_target_enter_data                                go to state 92
    omp_target_exit_data                                 go to state 93
    omp_cancel                                           go to state 94
    omp_cancellation_point                               go to state 95


State 1

  247 target_simd_directive: PRAGMA • OMP TARGET SIMD target_simd_clause_multi ENDLN
  268 target_parallel_for_simd_directive: PRAGMA • OMP TARGET PARALLEL FOR SIMD target_parallel_for_simd_clause_multi ENDLN
  295 target_parallel_for_directive: PRAGMA • OMP TARGET PARALLEL FOR target_parallel_for_clause_multi ENDLN
  318 target_parallel_directive: PRAGMA • OMP TARGET PARALLEL target_parallel_clause_multi ENDLN
  337 taskloop_simd_directive: PRAGMA • OMP TASKLOOP SIMD taskloop_simd_clause_multi ENDLN
  361 taskloop_directive: PRAGMA • OMP TASKLOOP taskloop_clause_multi ENDLN
  384 declare_simd_directive: PRAGMA • OMP DECLARE SIMD declare_simd_directive_clause_multi ENDLN
  395 taskgroup_directive: PRAGMA • OMP TASKGROUP ENDLN
  397 target_teams_distribute_parallel_for_simd_directive: PRAGMA • OMP TARGET TEAMS DISTRIBUTE PARALLEL FOR SIMD target_teams_distribute_parallel_for_simd_clause_multi ENDLN
  428 teams_distribute_parallel_for_simd_directive: PRAGMA • OMP TEAMS DISTRIBUTE PARALLEL FOR SIMD teams_distribute_parallel_for_simd_clause_multi ENDLN
  459 target_teams_distribute_parallel_for_directive: PRAGMA • OMP TARGET TEAMS DISTRIBUTE PARALLEL FOR target_teams_distribute_parallel_for_clause_multi ENDLN
  485 teams_distribute_parallel_for_directive: PRAGMA • OMP TEAMS DISTRIBUTE PARALLEL FOR teams_distribute_parallel_for_clause_multi ENDLN
  505 target_teams_distribute_simd_directive: PRAGMA • OMP TARGET TEAMS DISTRIBUTE SIMD target_teams_distribute_simd_clause_multi ENDLN
  531 target_teams_distribute_directive: PRAGMA • OMP TARGET TEAMS DISTRIBUTE target_teams_distribute_clause_multi ENDLN
  553 teams_distribute_simd_directive: PRAGMA • OMP TEAMS DISTRIBUTE SIMD teams_distribute_simd_clause_multi ENDLN
  572 teams_distribute_directive: PRAGMA • OMP TEAMS DISTRIBUTE teams_distribute_clause_multi ENDLN
  587 target_teams_directive: PRAGMA • OMP TARGET TEAMS target_teams_clause_multi ENDLN
  606 distribute_parallel_for_simd_directive: PRAGMA • OMP DISTRIBUTE PARALLEL FOR SIMD distribute_parallel_for_simd_clause_multi ENDLN
  629 distribute_parallel_for_directive: PRAGMA • OMP DISTRIBUTE PARALLEL FOR distribute_parallel_for_clause_multi ENDLN
  648 distribute_simd_directive: PRAGMA • OMP DISTRIBUTE SIMD distribute_simd_clause_multi ENDLN
  663 distribute_directive: PRAGMA • OMP DISTRIBUTE distribute_clause_multi ENDLN
  673 teams_directive: PRAGMA • OMP TEAMS teams_clause_multi ENDLN
  685 target_update_directive: PRAGMA • OMP TARGET UPDATE target_update_clause_seq ENDLN
  695 target_directive: PRAGMA • OMP TARGET target_clause_multi ENDLN
  709 target_data_directive: PRAGMA • OMP TARGET DATA target_data_clause_multi ENDLN
  718 parallel_for_simd_directive: PRAGMA • OMP PARALLEL FOR SIMD parallel_for_simd_clause_multi ENDLN
  740 for_simd_directive: PRAGMA • OMP FOR SIMD for_simd_clause_multi ENDLN
  759 simd_directive: PRAGMA • OMP SIMD simd_clause_multi ENDLN
  772 task_directive: PRAGMA • OMP TASK task_clause_multi ENDLN
  787 ordered_directive: PRAGMA • OMP ORDERED ordered_clause_multi ENDLN
  792 atomic_directive: PRAGMA • OMP ATOMIC atomic_clause seq_cst_clause ENDLN
  794 critical_directive: PRAGMA • OMP CRITICAL ENDLN
  795                   | PRAGMA • OMP CRITICAL region_phrase ENDLN
  797 master_directive: PRAGMA • OMP MASTER ENDLN
  799 parallel_sections_directive: PRAGMA • OMP PARALLEL SECTIONS parallel_sections_clause_multi ENDLN
  814 parallel_for_directive: PRAGMA • OMP PARALLEL FOR parallel_for_clause_multi ENDLN
  832 single_directive: PRAGMA • OMP SINGLE single_clause_multi ENDLN
  841 sections_directive: PRAGMA • OMP SECTIONS sections_clause_multi ENDLN
  851 section_directive: PRAGMA • OMP SECTION ENDLN
  853 for_directive: PRAGMA • OMP FOR for_clause_multi ENDLN
  868 parallel_directive: PRAGMA • OMP PARALLEL parallel_clause_multi ENDLN
  882 omp_declare_reduction: PRAGMA • OMP DECLARE reduction_clause ENDLN
  883 omp_threadprivate: PRAGMA • OMP THREADPRIVATE '(' variable_list ')' ENDLN
  884 omp_barrier: PRAGMA • OMP BARRIER ENDLN
  885 omp_flush: PRAGMA • OMP FLUSH ENDLN
  886          | PRAGMA • OMP FLUSH flush_list ENDLN
  888 omp_taskwait: PRAGMA • OMP TASKWAIT ENDLN
  889 omp_taskyield: PRAGMA • OMP TASKYIELD ENDLN
  890 omp_target_enter_data: PRAGMA • OMP TARGET ENTER DATA omp_target_enter_data_clause_multi ENDLN
  899 omp_target_exit_data: PRAGMA • OMP TARGET EXIT DATA omp_target_exit_data_clause_multi ENDLN
  908 omp_cancel: PRAGMA • OMP CANCEL type_construct_clause ENDLN
  909           | PRAGMA • OMP CANCEL type_construct_clause if_clause ENDLN
  910           | PRAGMA • OMP CANCEL type_construct_clause ',' if_clause ENDLN
  911 omp_cancellation_point: PRAGMA • OMP CANCELLATION POINT type_construct_clause ENDLN

    OMP  shift, and go to state 96


State 2

    0 $accept: program • $end
    2 program: program • omp_statement

    $end    shift, and go to state 97
    PRAGMA  shift, and go to state 1

    omp_statement                                        go to state 98
    omp_construct                                        go to state 4
    omp_directive                                        go to state 5
    target_simd_construct                                go to state 6
    target_simd_directive                                go to state 7
    target_parallel_for_simd_construct                   go to state 8
    target_parallel_for_simd_directive                   go to state 9
    target_parallel_for_construct                        go to state 10
    target_parallel_for_directive                        go to state 11
    target_parallel_construct                            go to state 12
    target_parallel_directive                            go to state 13
    taskloop_simd_construct                              go to state 14
    taskloop_simd_directive                              go to state 15
    taskloop_construct                                   go to state 16
    taskloop_directive                                   go to state 17
    declare_simd_construct                               go to state 18
    declare_simd_directive                               go to state 19
    taskgroup_construct                                  go to state 20
    taskgroup_directive                                  go to state 21
    target_teams_distribute_parallel_for_simd_construct  go to state 22
    target_teams_distribute_parallel_for_simd_directive  go to state 23
    teams_distribute_parallel_for_simd_construct         go to state 24
    teams_distribute_parallel_for_simd_directive         go to state 25
    target_teams_distribute_parallel_for_construct       go to state 26
    target_teams_distribute_parallel_for_directive       go to state 27
    teams_distribute_parallel_for_construct              go to state 28
    teams_distribute_parallel_for_directive              go to state 29
    target_teams_distribute_simd_construct               go to state 30
    target_teams_distribute_simd_directive               go to state 31
    target_teams_distribute_construct                    go to state 32
    target_teams_distribute_directive                    go to state 33
    teams_distribute_simd_construct                      go to state 34
    teams_distribute_simd_directive                      go to state 35
    teams_distribute_construct                           go to state 36
    teams_distribute_directive                           go to state 37
    target_teams_construct                               go to state 38
    target_teams_directive                               go to state 39
    distribute_parallel_for_simd_construct               go to state 40
    distribute_parallel_for_simd_directive               go to state 41
    distribute_parallel_for_construct                    go to state 42
    distribute_parallel_for_directive                    go to state 43
    distribute_simd_construct                            go to state 44
    distribute_simd_directive                            go to state 45
    distribute_construct                                 go to state 46
    distribute_directive                                 go to state 47
    teams_construct                                      go to state 48
    teams_directive                                      go to state 49
    target_update_construct                              go to state 50
    target_update_directive                              go to state 51
    target_construct                                     go to state 52
    target_directive                                     go to state 53
    target_data_construct                                go to state 54
    target_data_directive                                go to state 55
    parallel_for_simd_construct                          go to state 56
    parallel_for_simd_directive                          go to state 57
    for_simd_construct                                   go to state 58
    for_simd_directive                                   go to state 59
    simd_construct                                       go to state 60
    simd_directive                                       go to state 61
    task_construct                                       go to state 62
    task_directive                                       go to state 63
    ordered_construct                                    go to state 64
    ordered_directive                                    go to state 65
    atomic_construct                                     go to state 66
    atomic_directive                                     go to state 67
    critical_construct                                   go to state 68
    critical_directive                                   go to state 69
    master_construct                                     go to state 70
    master_directive                                     go to state 71
    parallel_sections_construct                          go to state 72
    parallel_sections_directive                          go to state 73
    parallel_for_construct                               go to state 74
    parallel_for_directive                               go to state 75
    single_construct                                     go to state 76
    single_directive                                     go to state 77
    sections_construct                                   go to state 78
    sections_directive                                   go to state 79
    section_construct                                    go to state 80
    section_directive                                    go to state 81
    for_construct                                        go to state 82
    for_directive                                        go to state 83
    parallel_construct                                   go to state 84
    parallel_directive                                   go to state 85
    omp_declare_reduction                                go to state 86
    omp_threadprivate                                    go to state 87
    omp_barrier                                          go to state 88
    omp_flush                                            go to state 89
    omp_taskwait                                         go to state 90
    omp_taskyield                                        go to state 91
    omp_target_enter_data                                go to state 92
    omp_target_exit_data                                 go to state 93
    omp_cancel                                           go to state 94
    omp_cancellation_point                               go to state 95


State 3

    1 program: omp_statement •

    $default  reduce using rule 1 (program)


State 4

    3 omp_statement: omp_construct •

    $default  reduce using rule 3 (omp_statement)


State 5

    4 omp_statement: omp_directive •

    $default  reduce using rule 4 (omp_statement)


State 6

  211 omp_construct: target_simd_construct •

    $default  reduce using rule 211 (omp_construct)


State 7

  246 target_simd_construct: target_simd_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 100


State 8

  214 omp_construct: target_parallel_for_simd_construct •

    $default  reduce using rule 214 (omp_construct)


State 9

  267 target_parallel_for_simd_construct: target_parallel_for_simd_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 101


State 10

  213 omp_construct: target_parallel_for_construct •

    $default  reduce using rule 213 (omp_construct)


State 11

  294 target_parallel_for_construct: target_parallel_for_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 102


State 12

  212 omp_construct: target_parallel_construct •

    $default  reduce using rule 212 (omp_construct)


State 13

  317 target_parallel_construct: target_parallel_directive •

    $default  reduce using rule 317 (target_parallel_construct)


State 14

  233 omp_construct: taskloop_simd_construct •

    $default  reduce using rule 233 (omp_construct)


State 15

  336 taskloop_simd_construct: taskloop_simd_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 103


State 16

  232 omp_construct: taskloop_construct •

    $default  reduce using rule 232 (omp_construct)


State 17

  360 taskloop_construct: taskloop_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 104


State 18

  231 omp_construct: declare_simd_construct •

    $default  reduce using rule 231 (omp_construct)


State 19

  383 declare_simd_construct: declare_simd_directive •

    $default  reduce using rule 383 (declare_simd_construct)


State 20

  230 omp_construct: taskgroup_construct •

    $default  reduce using rule 230 (omp_construct)


State 21

  394 taskgroup_construct: taskgroup_directive •

    $default  reduce using rule 394 (taskgroup_construct)


State 22

  229 omp_construct: target_teams_distribute_parallel_for_simd_construct •

    $default  reduce using rule 229 (omp_construct)


State 23

  396 target_teams_distribute_parallel_for_simd_construct: target_teams_distribute_parallel_for_simd_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 105


State 24

  228 omp_construct: teams_distribute_parallel_for_simd_construct •

    $default  reduce using rule 228 (omp_construct)


State 25

  427 teams_distribute_parallel_for_simd_construct: teams_distribute_parallel_for_simd_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 106


State 26

  227 omp_construct: target_teams_distribute_parallel_for_construct •

    $default  reduce using rule 227 (omp_construct)


State 27

  458 target_teams_distribute_parallel_for_construct: target_teams_distribute_parallel_for_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 107


State 28

  226 omp_construct: teams_distribute_parallel_for_construct •

    $default  reduce using rule 226 (omp_construct)


State 29

  484 teams_distribute_parallel_for_construct: teams_distribute_parallel_for_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 108


State 30

  225 omp_construct: target_teams_distribute_simd_construct •

    $default  reduce using rule 225 (omp_construct)


State 31

  504 target_teams_distribute_simd_construct: target_teams_distribute_simd_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 109


State 32

  224 omp_construct: target_teams_distribute_construct •

    $default  reduce using rule 224 (omp_construct)


State 33

  530 target_teams_distribute_construct: target_teams_distribute_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 110


State 34

  223 omp_construct: teams_distribute_simd_construct •

    $default  reduce using rule 223 (omp_construct)


State 35

  552 teams_distribute_simd_construct: teams_distribute_simd_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 111


State 36

  222 omp_construct: teams_distribute_construct •

    $default  reduce using rule 222 (omp_construct)


State 37

  571 teams_distribute_construct: teams_distribute_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 112


State 38

  221 omp_construct: target_teams_construct •

    $default  reduce using rule 221 (omp_construct)


State 39

  586 target_teams_construct: target_teams_directive •

    $default  reduce using rule 586 (target_teams_construct)


State 40

  220 omp_construct: distribute_parallel_for_simd_construct •

    $default  reduce using rule 220 (omp_construct)


State 41

  605 distribute_parallel_for_simd_construct: distribute_parallel_for_simd_directive •

    $default  reduce using rule 605 (distribute_parallel_for_simd_construct)


State 42

  219 omp_construct: distribute_parallel_for_construct •

    $default  reduce using rule 219 (omp_construct)


State 43

  628 distribute_parallel_for_construct: distribute_parallel_for_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 113


State 44

  218 omp_construct: distribute_simd_construct •

    $default  reduce using rule 218 (omp_construct)


State 45

  647 distribute_simd_construct: distribute_simd_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 114


State 46

  217 omp_construct: distribute_construct •

    $default  reduce using rule 217 (omp_construct)


State 47

  662 distribute_construct: distribute_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 115


State 48

  216 omp_construct: teams_construct •

    $default  reduce using rule 216 (omp_construct)


State 49

  672 teams_construct: teams_directive •

    $default  reduce using rule 672 (teams_construct)


State 50

  215 omp_construct: target_update_construct •

    $default  reduce using rule 215 (omp_construct)


State 51

  684 target_update_construct: target_update_directive •

    $default  reduce using rule 684 (target_update_construct)


State 52

  210 omp_construct: target_construct •

    $default  reduce using rule 210 (omp_construct)


State 53

  694 target_construct: target_directive •

    $default  reduce using rule 694 (target_construct)


State 54

  209 omp_construct: target_data_construct •

    $default  reduce using rule 209 (omp_construct)


State 55

  708 target_data_construct: target_data_directive •

    $default  reduce using rule 708 (target_data_construct)


State 56

  208 omp_construct: parallel_for_simd_construct •

    $default  reduce using rule 208 (omp_construct)


State 57

  717 parallel_for_simd_construct: parallel_for_simd_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 116


State 58

  207 omp_construct: for_simd_construct •

    $default  reduce using rule 207 (omp_construct)


State 59

  739 for_simd_construct: for_simd_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 117


State 60

  206 omp_construct: simd_construct •

    $default  reduce using rule 206 (omp_construct)


State 61

  758 simd_construct: simd_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 118


State 62

  205 omp_construct: task_construct •

    $default  reduce using rule 205 (omp_construct)


State 63

  771 task_construct: task_directive •

    $default  reduce using rule 771 (task_construct)


State 64

  204 omp_construct: ordered_construct •

    $default  reduce using rule 204 (omp_construct)


State 65

  786 ordered_construct: ordered_directive •

    $default  reduce using rule 786 (ordered_construct)


State 66

  203 omp_construct: atomic_construct •

    $default  reduce using rule 203 (omp_construct)


State 67

  791 atomic_construct: atomic_directive • expression_statement

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135
    ';'             shift, and go to state 136

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 156
    expression                 go to state 157
    expression_statement       go to state 158


State 68

  202 omp_construct: critical_construct •

    $default  reduce using rule 202 (omp_construct)


State 69

  793 critical_construct: critical_directive •

    $default  reduce using rule 793 (critical_construct)


State 70

  201 omp_construct: master_construct •

    $default  reduce using rule 201 (omp_construct)


State 71

  796 master_construct: master_directive •

    $default  reduce using rule 796 (master_construct)


State 72

  200 omp_construct: parallel_sections_construct •

    $default  reduce using rule 200 (omp_construct)


State 73

  798 parallel_sections_construct: parallel_sections_directive •

    $default  reduce using rule 798 (parallel_sections_construct)


State 74

  199 omp_construct: parallel_for_construct •

    $default  reduce using rule 199 (omp_construct)


State 75

  813 parallel_for_construct: parallel_for_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 159


State 76

  197 omp_construct: single_construct •

    $default  reduce using rule 197 (omp_construct)


State 77

  831 single_construct: single_directive •

    $default  reduce using rule 831 (single_construct)


State 78

  196 omp_construct: sections_construct •

    $default  reduce using rule 196 (omp_construct)


State 79

  840 sections_construct: sections_directive •

    $default  reduce using rule 840 (sections_construct)


State 80

  198 omp_construct: section_construct •

    $default  reduce using rule 198 (omp_construct)


State 81

  850 section_construct: section_directive •

    $default  reduce using rule 850 (section_construct)


State 82

  195 omp_construct: for_construct •

    $default  reduce using rule 195 (omp_construct)


State 83

  852 for_construct: for_directive • iteration_statement_for

    FOR  shift, and go to state 99

    iteration_statement_for  go to state 160


State 84

  194 omp_construct: parallel_construct •

    $default  reduce using rule 194 (omp_construct)


State 85

  867 parallel_construct: parallel_directive •

    $default  reduce using rule 867 (parallel_construct)


State 86

  243 omp_directive: omp_declare_reduction •

    $default  reduce using rule 243 (omp_directive)


State 87

  242 omp_directive: omp_threadprivate •

    $default  reduce using rule 242 (omp_directive)


State 88

  234 omp_directive: omp_barrier •

    $default  reduce using rule 234 (omp_directive)


State 89

  235 omp_directive: omp_flush •

    $default  reduce using rule 235 (omp_directive)


State 90

  236 omp_directive: omp_taskwait •

    $default  reduce using rule 236 (omp_directive)


State 91

  237 omp_directive: omp_taskyield •

    $default  reduce using rule 237 (omp_directive)


State 92

  240 omp_directive: omp_target_enter_data •

    $default  reduce using rule 240 (omp_directive)


State 93

  241 omp_directive: omp_target_exit_data •

    $default  reduce using rule 241 (omp_directive)


State 94

  238 omp_directive: omp_cancel •

    $default  reduce using rule 238 (omp_directive)


State 95

  239 omp_directive: omp_cancellation_point •

    $default  reduce using rule 239 (omp_directive)


State 96

  247 target_simd_directive: PRAGMA OMP • TARGET SIMD target_simd_clause_multi ENDLN
  268 target_parallel_for_simd_directive: PRAGMA OMP • TARGET PARALLEL FOR SIMD target_parallel_for_simd_clause_multi ENDLN
  295 target_parallel_for_directive: PRAGMA OMP • TARGET PARALLEL FOR target_parallel_for_clause_multi ENDLN
  318 target_parallel_directive: PRAGMA OMP • TARGET PARALLEL target_parallel_clause_multi ENDLN
  337 taskloop_simd_directive: PRAGMA OMP • TASKLOOP SIMD taskloop_simd_clause_multi ENDLN
  361 taskloop_directive: PRAGMA OMP • TASKLOOP taskloop_clause_multi ENDLN
  384 declare_simd_directive: PRAGMA OMP • DECLARE SIMD declare_simd_directive_clause_multi ENDLN
  395 taskgroup_directive: PRAGMA OMP • TASKGROUP ENDLN
  397 target_teams_distribute_parallel_for_simd_directive: PRAGMA OMP • TARGET TEAMS DISTRIBUTE PARALLEL FOR SIMD target_teams_distribute_parallel_for_simd_clause_multi ENDLN
  428 teams_distribute_parallel_for_simd_directive: PRAGMA OMP • TEAMS DISTRIBUTE PARALLEL FOR SIMD teams_distribute_parallel_for_simd_clause_multi ENDLN
  459 target_teams_distribute_parallel_for_directive: PRAGMA OMP • TARGET TEAMS DISTRIBUTE PARALLEL FOR target_teams_distribute_parallel_for_clause_multi ENDLN
  485 teams_distribute_parallel_for_directive: PRAGMA OMP • TEAMS DISTRIBUTE PARALLEL FOR teams_distribute_parallel_for_clause_multi ENDLN
  505 target_teams_distribute_simd_directive: PRAGMA OMP • TARGET TEAMS DISTRIBUTE SIMD target_teams_distribute_simd_clause_multi ENDLN
  531 target_teams_distribute_directive: PRAGMA OMP • TARGET TEAMS DISTRIBUTE target_teams_distribute_clause_multi ENDLN
  553 teams_distribute_simd_directive: PRAGMA OMP • TEAMS DISTRIBUTE SIMD teams_distribute_simd_clause_multi ENDLN
  572 teams_distribute_directive: PRAGMA OMP • TEAMS DISTRIBUTE teams_distribute_clause_multi ENDLN
  587 target_teams_directive: PRAGMA OMP • TARGET TEAMS target_teams_clause_multi ENDLN
  606 distribute_parallel_for_simd_directive: PRAGMA OMP • DISTRIBUTE PARALLEL FOR SIMD distribute_parallel_for_simd_clause_multi ENDLN
  629 distribute_parallel_for_directive: PRAGMA OMP • DISTRIBUTE PARALLEL FOR distribute_parallel_for_clause_multi ENDLN
  648 distribute_simd_directive: PRAGMA OMP • DISTRIBUTE SIMD distribute_simd_clause_multi ENDLN
  663 distribute_directive: PRAGMA OMP • DISTRIBUTE distribute_clause_multi ENDLN
  673 teams_directive: PRAGMA OMP • TEAMS teams_clause_multi ENDLN
  685 target_update_directive: PRAGMA OMP • TARGET UPDATE target_update_clause_seq ENDLN
  695 target_directive: PRAGMA OMP • TARGET target_clause_multi ENDLN
  709 target_data_directive: PRAGMA OMP • TARGET DATA target_data_clause_multi ENDLN
  718 parallel_for_simd_directive: PRAGMA OMP • PARALLEL FOR SIMD parallel_for_simd_clause_multi ENDLN
  740 for_simd_directive: PRAGMA OMP • FOR SIMD for_simd_clause_multi ENDLN
  759 simd_directive: PRAGMA OMP • SIMD simd_clause_multi ENDLN
  772 task_directive: PRAGMA OMP • TASK task_clause_multi ENDLN
  787 ordered_directive: PRAGMA OMP • ORDERED ordered_clause_multi ENDLN
  792 atomic_directive: PRAGMA OMP • ATOMIC atomic_clause seq_cst_clause ENDLN
  794 critical_directive: PRAGMA OMP • CRITICAL ENDLN
  795                   | PRAGMA OMP • CRITICAL region_phrase ENDLN
  797 master_directive: PRAGMA OMP • MASTER ENDLN
  799 parallel_sections_directive: PRAGMA OMP • PARALLEL SECTIONS parallel_sections_clause_multi ENDLN
  814 parallel_for_directive: PRAGMA OMP • PARALLEL FOR parallel_for_clause_multi ENDLN
  832 single_directive: PRAGMA OMP • SINGLE single_clause_multi ENDLN
  841 sections_directive: PRAGMA OMP • SECTIONS sections_clause_multi ENDLN
  851 section_directive: PRAGMA OMP • SECTION ENDLN
  853 for_directive: PRAGMA OMP • FOR for_clause_multi ENDLN
  868 parallel_directive: PRAGMA OMP • PARALLEL parallel_clause_multi ENDLN
  882 omp_declare_reduction: PRAGMA OMP • DECLARE reduction_clause ENDLN
  883 omp_threadprivate: PRAGMA OMP • THREADPRIVATE '(' variable_list ')' ENDLN
  884 omp_barrier: PRAGMA OMP • BARRIER ENDLN
  885 omp_flush: PRAGMA OMP • FLUSH ENDLN
  886          | PRAGMA OMP • FLUSH flush_list ENDLN
  888 omp_taskwait: PRAGMA OMP • TASKWAIT ENDLN
  889 omp_taskyield: PRAGMA OMP • TASKYIELD ENDLN
  890 omp_target_enter_data: PRAGMA OMP • TARGET ENTER DATA omp_target_enter_data_clause_multi ENDLN
  899 omp_target_exit_data: PRAGMA OMP • TARGET EXIT DATA omp_target_exit_data_clause_multi ENDLN
  908 omp_cancel: PRAGMA OMP • CANCEL type_construct_clause ENDLN
  909           | PRAGMA OMP • CANCEL type_construct_clause if_clause ENDLN
  910           | PRAGMA OMP • CANCEL type_construct_clause ',' if_clause ENDLN
  911 omp_cancellation_point: PRAGMA OMP • CANCELLATION POINT type_construct_clause ENDLN

    PARALLEL       shift, and go to state 161
    FOR            shift, and go to state 162
    SECTIONS       shift, and go to state 163
    SECTION        shift, and go to state 164
    SIMD           shift, and go to state 165
    TASK           shift, and go to state 166
    SINGLE         shift, and go to state 167
    TARGET         shift, and go to state 168
    ATOMIC         shift, and go to state 169
    MASTER         shift, and go to state 170
    CRITICAL       shift, and go to state 171
    BARRIER        shift, and go to state 172
    ORDERED        shift, and go to state 173
    DECLARE        shift, and go to state 174
    TASKLOOP       shift, and go to state 175
    DISTRIBUTE     shift, and go to state 176
    TASKYIELD      shift, and go to state 177
    TEAMS          shift, and go to state 178
    TASKWAIT       shift, and go to state 179
    TASKGROUP      shift, and go to state 180
    FLUSH          shift, and go to state 181
    CANCEL         shift, and go to state 182
    CANCELLATION   shift, and go to state 183
    THREADPRIVATE  shift, and go to state 184


State 97

    0 $accept: program $end •

    $default  accept


State 98

    2 program: program omp_statement •

    $default  reduce using rule 2 (program)


State 99

  193 iteration_statement_for: FOR •

    $default  reduce using rule 193 (iteration_statement_for)


State 100

  246 target_simd_construct: target_simd_directive iteration_statement_for •

    $default  reduce using rule 246 (target_simd_construct)


State 101

  267 target_parallel_for_simd_construct: target_parallel_for_simd_directive iteration_statement_for •

    $default  reduce using rule 267 (target_parallel_for_simd_construct)


State 102

  294 target_parallel_for_construct: target_parallel_for_directive iteration_statement_for •

    $default  reduce using rule 294 (target_parallel_for_construct)


State 103

  336 taskloop_simd_construct: taskloop_simd_directive iteration_statement_for •

    $default  reduce using rule 336 (taskloop_simd_construct)


State 104

  360 taskloop_construct: taskloop_directive iteration_statement_for •

    $default  reduce using rule 360 (taskloop_construct)


State 105

  396 target_teams_distribute_parallel_for_simd_construct: target_teams_distribute_parallel_for_simd_directive iteration_statement_for •

    $default  reduce using rule 396 (target_teams_distribute_parallel_for_simd_construct)


State 106

  427 teams_distribute_parallel_for_simd_construct: teams_distribute_parallel_for_simd_directive iteration_statement_for •

    $default  reduce using rule 427 (teams_distribute_parallel_for_simd_construct)


State 107

  458 target_teams_distribute_parallel_for_construct: target_teams_distribute_parallel_for_directive iteration_statement_for •

    $default  reduce using rule 458 (target_teams_distribute_parallel_for_construct)


State 108

  484 teams_distribute_parallel_for_construct: teams_distribute_parallel_for_directive iteration_statement_for •

    $default  reduce using rule 484 (teams_distribute_parallel_for_construct)


State 109

  504 target_teams_distribute_simd_construct: target_teams_distribute_simd_directive iteration_statement_for •

    $default  reduce using rule 504 (target_teams_distribute_simd_construct)


State 110

  530 target_teams_distribute_construct: target_teams_distribute_directive iteration_statement_for •

    $default  reduce using rule 530 (target_teams_distribute_construct)


State 111

  552 teams_distribute_simd_construct: teams_distribute_simd_directive iteration_statement_for •

    $default  reduce using rule 552 (teams_distribute_simd_construct)


State 112

  571 teams_distribute_construct: teams_distribute_directive iteration_statement_for •

    $default  reduce using rule 571 (teams_distribute_construct)


State 113

  628 distribute_parallel_for_construct: distribute_parallel_for_directive iteration_statement_for •

    $default  reduce using rule 628 (distribute_parallel_for_construct)


State 114

  647 distribute_simd_construct: distribute_simd_directive iteration_statement_for •

    $default  reduce using rule 647 (distribute_simd_construct)


State 115

  662 distribute_construct: distribute_directive iteration_statement_for •

    $default  reduce using rule 662 (distribute_construct)


State 116

  717 parallel_for_simd_construct: parallel_for_simd_directive iteration_statement_for •

    $default  reduce using rule 717 (parallel_for_simd_construct)


State 117

  739 for_simd_construct: for_simd_directive iteration_statement_for •

    $default  reduce using rule 739 (for_simd_construct)


State 118

  758 simd_construct: simd_directive iteration_statement_for •

    $default  reduce using rule 758 (simd_construct)


State 119

    5 primary_expression: IDENTIFIER •

    $default  reduce using rule 5 (primary_expression)


State 120

   12 string: STRING_LITERAL •

    $default  reduce using rule 12 (string)


State 121

   11 constant: F_CONSTANT •

    $default  reduce using rule 11 (constant)


State 122

   10 constant: I_CONSTANT •

    $default  reduce using rule 10 (constant)


State 123

   37 unary_expression: _ALIGNOF • '(' type_name ')'

    '('  shift, and go to state 185


State 124

   13 string: FUNC_NAME •

    $default  reduce using rule 13 (string)


State 125

   35 unary_expression: SIZEOF • unary_expression
   36                 | SIZEOF • '(' type_name ')'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 186
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression  go to state 137
    constant            go to state 138
    string              go to state 139
    generic_selection   go to state 140
    postfix_expression  go to state 141
    unary_expression    go to state 187
    unary_operator      go to state 143


State 126

   14 generic_selection: _GENERIC • '(' assignment_expression ',' generic_assoc_list ')'

    '('  shift, and go to state 188


State 127

   32 unary_expression: INC_OPERAND • unary_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 189
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression  go to state 137
    constant            go to state 138
    string              go to state 139
    generic_selection   go to state 140
    postfix_expression  go to state 141
    unary_expression    go to state 190
    unary_operator      go to state 143


State 128

   33 unary_expression: DEC_OPERAND • unary_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 189
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression  go to state 137
    constant            go to state 138
    string              go to state 139
    generic_selection   go to state 140
    postfix_expression  go to state 141
    unary_expression    go to state 191
    unary_operator      go to state 143


State 129

    8 primary_expression: '(' • expression ')'
   27 postfix_expression: '(' • type_name ')' '{' initializer_list '}'
   28                   | '(' • type_name ')' '{' initializer_list ',' '}'
   45 cast_expression: '(' • type_name ')' cast_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    _ATOMIC         shift, and go to state 192
    FUNC_NAME       shift, and go to state 124
    CHAR            shift, and go to state 193
    CONST           shift, and go to state 194
    DOUBLE          shift, and go to state 195
    FLOAT           shift, and go to state 196
    INT             shift, and go to state 197
    LONG            shift, and go to state 198
    SHORT           shift, and go to state 199
    BOOL            shift, and go to state 200
    SIGNED          shift, and go to state 201
    SIZEOF          shift, and go to state 125
    STRUCT          shift, and go to state 202
    UNION           shift, and go to state 203
    UNSIGNED        shift, and go to state 204
    _BOOL           shift, and go to state 205
    _COMPLEX        shift, and go to state 206
    _IMAGINARY      shift, and go to state 207
    VOID            shift, and go to state 208
    RESTRICT        shift, and go to state 209
    VOLATILE        shift, and go to state 210
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 156
    expression                 go to state 211
    type_specifier             go to state 212
    struct_or_union_specifier  go to state 213
    struct_or_union            go to state 214
    specifier_qualifier_list   go to state 215
    atomic_type_specifier      go to state 216
    type_qualifier             go to state 217
    type_name                  go to state 218


State 130

   38 unary_operator: '&' •

    $default  reduce using rule 38 (unary_operator)


State 131

   39 unary_operator: '*' •

    $default  reduce using rule 39 (unary_operator)


State 132

   40 unary_operator: '+' •

    $default  reduce using rule 40 (unary_operator)


State 133

   41 unary_operator: '-' •

    $default  reduce using rule 41 (unary_operator)


State 134

   42 unary_operator: '~' •

    $default  reduce using rule 42 (unary_operator)


State 135

   43 unary_operator: '!' •

    $default  reduce using rule 43 (unary_operator)


State 136

  191 expression_statement: ';' •

    $default  reduce using rule 191 (expression_statement)


State 137

   19 postfix_expression: primary_expression •

    $default  reduce using rule 19 (postfix_expression)


State 138

    6 primary_expression: constant •

    $default  reduce using rule 6 (primary_expression)


State 139

    7 primary_expression: string •

    $default  reduce using rule 7 (primary_expression)


State 140

    9 primary_expression: generic_selection •

    $default  reduce using rule 9 (primary_expression)


State 141

   20 postfix_expression: postfix_expression • '[' expression ']'
   21                   | postfix_expression • '(' ')'
   22                   | postfix_expression • '(' argument_expression_list ')'
   23                   | postfix_expression • '.' IDENTIFIER
   24                   | postfix_expression • PTR_OPERAND IDENTIFIER
   25                   | postfix_expression • INC_OPERAND
   26                   | postfix_expression • DEC_OPERAND
   31 unary_expression: postfix_expression •

    INC_OPERAND  shift, and go to state 219
    DEC_OPERAND  shift, and go to state 220
    PTR_OPERAND  shift, and go to state 221
    '('          shift, and go to state 222
    '['          shift, and go to state 223
    '.'          shift, and go to state 224

    $default  reduce using rule 31 (unary_expression)


State 142

   44 cast_expression: unary_expression •
   77 assignment_expression: unary_expression • assignment_operator assignment_expression

    RIGHT_ASSIGN  shift, and go to state 225
    LEFT_ASSIGN   shift, and go to state 226
    ADD_ASSIGN    shift, and go to state 227
    SUB_ASSIGN    shift, and go to state 228
    MUL_ASSIGN    shift, and go to state 229
    DIV_ASSIGN    shift, and go to state 230
    MOD_ASSIGN    shift, and go to state 231
    AND_ASSIGN    shift, and go to state 232
    XOR_ASSIGN    shift, and go to state 233
    OR_ASSIGN     shift, and go to state 234
    '='           shift, and go to state 235

    $default  reduce using rule 44 (cast_expression)

    assignment_operator  go to state 236


State 143

   34 unary_expression: unary_operator • cast_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression  go to state 137
    constant            go to state 138
    string              go to state 139
    generic_selection   go to state 140
    postfix_expression  go to state 141
    unary_expression    go to state 237
    unary_operator      go to state 143
    cast_expression     go to state 238


State 144

   46 multiplicative_expression: cast_expression •

    $default  reduce using rule 46 (multiplicative_expression)


State 145

   47 multiplicative_expression: multiplicative_expression • '*' cast_expression
   48                          | multiplicative_expression • '/' cast_expression
   49                          | multiplicative_expression • '%' cast_expression
   50 additive_expression: multiplicative_expression •

    '*'  shift, and go to state 239
    '/'  shift, and go to state 240
    '%'  shift, and go to state 241

    $default  reduce using rule 50 (additive_expression)


State 146

   51 additive_expression: additive_expression • '+' multiplicative_expression
   52                    | additive_expression • '-' multiplicative_expression
   53 shift_expression: additive_expression •

    '+'  shift, and go to state 242
    '-'  shift, and go to state 243

    $default  reduce using rule 53 (shift_expression)


State 147

   54 shift_expression: shift_expression • LEFT_OPERAND additive_expression
   55                 | shift_expression • RIGHT_OPERAND additive_expression
   56 relational_expression: shift_expression •

    RIGHT_OPERAND  shift, and go to state 244
    LEFT_OPERAND   shift, and go to state 245

    $default  reduce using rule 56 (relational_expression)


State 148

   57 relational_expression: relational_expression • '<' shift_expression
   58                      | relational_expression • '>' shift_expression
   59                      | relational_expression • LE_OPERAND shift_expression
   60                      | relational_expression • GE_OPERAND shift_expression
   61 equality_expression: relational_expression •

    LE_OPERAND  shift, and go to state 246
    GE_OPERAND  shift, and go to state 247
    '<'         shift, and go to state 248
    '>'         shift, and go to state 249

    $default  reduce using rule 61 (equality_expression)


State 149

   62 equality_expression: equality_expression • EQ_OPERAND relational_expression
   63                    | equality_expression • NE_OPERAND relational_expression
   64 and_expression: equality_expression •

    EQ_OPERAND  shift, and go to state 250
    NE_OPERAND  shift, and go to state 251

    $default  reduce using rule 64 (and_expression)


State 150

   65 and_expression: and_expression • '&' equality_expression
   66 exclusive_or_expression: and_expression •

    '&'  shift, and go to state 252

    $default  reduce using rule 66 (exclusive_or_expression)


State 151

   67 exclusive_or_expression: exclusive_or_expression • '^' and_expression
   68 inclusive_or_expression: exclusive_or_expression •

    '^'  shift, and go to state 253

    $default  reduce using rule 68 (inclusive_or_expression)


State 152

   69 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
   70 logical_and_expression: inclusive_or_expression •

    '|'  shift, and go to state 254

    $default  reduce using rule 70 (logical_and_expression)


State 153

   71 logical_and_expression: logical_and_expression • AND_OPERAND inclusive_or_expression
   72 logical_or_expression: logical_and_expression •

    AND_OPERAND  shift, and go to state 255

    $default  reduce using rule 72 (logical_or_expression)


State 154

   73 logical_or_expression: logical_or_expression • OR_OPERAND logical_and_expression
   74 conditional_expression: logical_or_expression •
   75                       | logical_or_expression • '?' expression ':' conditional_expression

    OR_OPERAND  shift, and go to state 256
    '?'         shift, and go to state 257

    $default  reduce using rule 74 (conditional_expression)


State 155

   76 assignment_expression: conditional_expression •

    $default  reduce using rule 76 (assignment_expression)


State 156

   89 expression: assignment_expression •

    $default  reduce using rule 89 (expression)


State 157

   90 expression: expression • ',' assignment_expression
  192 expression_statement: expression • ';'

    ','  shift, and go to state 258
    ';'  shift, and go to state 259


State 158

  791 atomic_construct: atomic_directive expression_statement •

    $default  reduce using rule 791 (atomic_construct)


State 159

  813 parallel_for_construct: parallel_for_directive iteration_statement_for •

    $default  reduce using rule 813 (parallel_for_construct)


State 160

  852 for_construct: for_directive iteration_statement_for •

    $default  reduce using rule 852 (for_construct)


State 161

  718 parallel_for_simd_directive: PRAGMA OMP PARALLEL • FOR SIMD parallel_for_simd_clause_multi ENDLN
  799 parallel_sections_directive: PRAGMA OMP PARALLEL • SECTIONS parallel_sections_clause_multi ENDLN
  814 parallel_for_directive: PRAGMA OMP PARALLEL • FOR parallel_for_clause_multi ENDLN
  868 parallel_directive: PRAGMA OMP PARALLEL • parallel_clause_multi ENDLN

    FOR       shift, and go to state 260
    SECTIONS  shift, and go to state 261

    $default  reduce using rule 871 (parallel_clause_multi)

    parallel_clause_multi  go to state 262


State 162

  740 for_simd_directive: PRAGMA OMP FOR • SIMD for_simd_clause_multi ENDLN
  853 for_directive: PRAGMA OMP FOR • for_clause_multi ENDLN

    SIMD  shift, and go to state 263

    $default  reduce using rule 856 (for_clause_multi)

    for_clause_multi  go to state 264


State 163

  841 sections_directive: PRAGMA OMP SECTIONS • sections_clause_multi ENDLN

    $default  reduce using rule 844 (sections_clause_multi)

    sections_clause_multi  go to state 265


State 164

  851 section_directive: PRAGMA OMP SECTION • ENDLN

    ENDLN  shift, and go to state 266


State 165

  759 simd_directive: PRAGMA OMP SIMD • simd_clause_multi ENDLN

    $default  reduce using rule 762 (simd_clause_multi)

    simd_clause_multi  go to state 267


State 166

  772 task_directive: PRAGMA OMP TASK • task_clause_multi ENDLN

    $default  reduce using rule 775 (task_clause_multi)

    task_clause_multi  go to state 268


State 167

  832 single_directive: PRAGMA OMP SINGLE • single_clause_multi ENDLN

    $default  reduce using rule 835 (single_clause_multi)

    single_clause_multi  go to state 269


State 168

  247 target_simd_directive: PRAGMA OMP TARGET • SIMD target_simd_clause_multi ENDLN
  268 target_parallel_for_simd_directive: PRAGMA OMP TARGET • PARALLEL FOR SIMD target_parallel_for_simd_clause_multi ENDLN
  295 target_parallel_for_directive: PRAGMA OMP TARGET • PARALLEL FOR target_parallel_for_clause_multi ENDLN
  318 target_parallel_directive: PRAGMA OMP TARGET • PARALLEL target_parallel_clause_multi ENDLN
  397 target_teams_distribute_parallel_for_simd_directive: PRAGMA OMP TARGET • TEAMS DISTRIBUTE PARALLEL FOR SIMD target_teams_distribute_parallel_for_simd_clause_multi ENDLN
  459 target_teams_distribute_parallel_for_directive: PRAGMA OMP TARGET • TEAMS DISTRIBUTE PARALLEL FOR target_teams_distribute_parallel_for_clause_multi ENDLN
  505 target_teams_distribute_simd_directive: PRAGMA OMP TARGET • TEAMS DISTRIBUTE SIMD target_teams_distribute_simd_clause_multi ENDLN
  531 target_teams_distribute_directive: PRAGMA OMP TARGET • TEAMS DISTRIBUTE target_teams_distribute_clause_multi ENDLN
  587 target_teams_directive: PRAGMA OMP TARGET • TEAMS target_teams_clause_multi ENDLN
  685 target_update_directive: PRAGMA OMP TARGET • UPDATE target_update_clause_seq ENDLN
  695 target_directive: PRAGMA OMP TARGET • target_clause_multi ENDLN
  709 target_data_directive: PRAGMA OMP TARGET • DATA target_data_clause_multi ENDLN
  890 omp_target_enter_data: PRAGMA OMP TARGET • ENTER DATA omp_target_enter_data_clause_multi ENDLN
  899 omp_target_exit_data: PRAGMA OMP TARGET • EXIT DATA omp_target_exit_data_clause_multi ENDLN

    PARALLEL  shift, and go to state 270
    SIMD      shift, and go to state 271
    UPDATE    shift, and go to state 272
    DATA      shift, and go to state 273
    ENTER     shift, and go to state 274
    EXIT      shift, and go to state 275
    TEAMS     shift, and go to state 276

    $default  reduce using rule 698 (target_clause_multi)

    target_clause_multi  go to state 277


State 169

  792 atomic_directive: PRAGMA OMP ATOMIC • atomic_clause seq_cst_clause ENDLN

    UPDATE   shift, and go to state 278
    READ     shift, and go to state 279
    WRITE    shift, and go to state 280
    CAPTURE  shift, and go to state 281

    $default  reduce using rule 945 (atomic_clause)

    atomic_clause  go to state 282


State 170

  797 master_directive: PRAGMA OMP MASTER • ENDLN

    ENDLN  shift, and go to state 283


State 171

  794 critical_directive: PRAGMA OMP CRITICAL • ENDLN
  795                   | PRAGMA OMP CRITICAL • region_phrase ENDLN

    ENDLN  shift, and go to state 284
    '('    shift, and go to state 285

    region_phrase  go to state 286


State 172

  884 omp_barrier: PRAGMA OMP BARRIER • ENDLN

    ENDLN  shift, and go to state 287


State 173

  787 ordered_directive: PRAGMA OMP ORDERED • ordered_clause_multi ENDLN

    $default  reduce using rule 790 (ordered_clause_multi)

    ordered_clause_multi  go to state 288


State 174

  384 declare_simd_directive: PRAGMA OMP DECLARE • SIMD declare_simd_directive_clause_multi ENDLN
  882 omp_declare_reduction: PRAGMA OMP DECLARE • reduction_clause ENDLN

    SIMD       shift, and go to state 289
    REDUCTION  shift, and go to state 290

    reduction_clause  go to state 291


State 175

  337 taskloop_simd_directive: PRAGMA OMP TASKLOOP • SIMD taskloop_simd_clause_multi ENDLN
  361 taskloop_directive: PRAGMA OMP TASKLOOP • taskloop_clause_multi ENDLN

    SIMD  shift, and go to state 292

    $default  reduce using rule 364 (taskloop_clause_multi)

    taskloop_clause_multi  go to state 293


State 176

  606 distribute_parallel_for_simd_directive: PRAGMA OMP DISTRIBUTE • PARALLEL FOR SIMD distribute_parallel_for_simd_clause_multi ENDLN
  629 distribute_parallel_for_directive: PRAGMA OMP DISTRIBUTE • PARALLEL FOR distribute_parallel_for_clause_multi ENDLN
  648 distribute_simd_directive: PRAGMA OMP DISTRIBUTE • SIMD distribute_simd_clause_multi ENDLN
  663 distribute_directive: PRAGMA OMP DISTRIBUTE • distribute_clause_multi ENDLN

    PARALLEL  shift, and go to state 294
    SIMD      shift, and go to state 295

    $default  reduce using rule 666 (distribute_clause_multi)

    distribute_clause_multi  go to state 296


State 177

  889 omp_taskyield: PRAGMA OMP TASKYIELD • ENDLN

    ENDLN  shift, and go to state 297


State 178

  428 teams_distribute_parallel_for_simd_directive: PRAGMA OMP TEAMS • DISTRIBUTE PARALLEL FOR SIMD teams_distribute_parallel_for_simd_clause_multi ENDLN
  485 teams_distribute_parallel_for_directive: PRAGMA OMP TEAMS • DISTRIBUTE PARALLEL FOR teams_distribute_parallel_for_clause_multi ENDLN
  553 teams_distribute_simd_directive: PRAGMA OMP TEAMS • DISTRIBUTE SIMD teams_distribute_simd_clause_multi ENDLN
  572 teams_distribute_directive: PRAGMA OMP TEAMS • DISTRIBUTE teams_distribute_clause_multi ENDLN
  673 teams_directive: PRAGMA OMP TEAMS • teams_clause_multi ENDLN

    DISTRIBUTE  shift, and go to state 298

    $default  reduce using rule 676 (teams_clause_multi)

    teams_clause_multi  go to state 299


State 179

  888 omp_taskwait: PRAGMA OMP TASKWAIT • ENDLN

    ENDLN  shift, and go to state 300


State 180

  395 taskgroup_directive: PRAGMA OMP TASKGROUP • ENDLN

    ENDLN  shift, and go to state 301


State 181

  885 omp_flush: PRAGMA OMP FLUSH • ENDLN
  886          | PRAGMA OMP FLUSH • flush_list ENDLN

    ENDLN  shift, and go to state 302
    '('    shift, and go to state 303

    flush_list  go to state 304


State 182

  908 omp_cancel: PRAGMA OMP CANCEL • type_construct_clause ENDLN
  909           | PRAGMA OMP CANCEL • type_construct_clause if_clause ENDLN
  910           | PRAGMA OMP CANCEL • type_construct_clause ',' if_clause ENDLN

    PARALLEL   shift, and go to state 305
    FOR        shift, and go to state 306
    SECTIONS   shift, and go to state 307
    TASKGROUP  shift, and go to state 308

    $default  reduce using rule 990 (type_construct_clause)

    type_construct_clause  go to state 309


State 183

  911 omp_cancellation_point: PRAGMA OMP CANCELLATION • POINT type_construct_clause ENDLN

    POINT  shift, and go to state 310


State 184

  883 omp_threadprivate: PRAGMA OMP THREADPRIVATE • '(' variable_list ')' ENDLN

    '('  shift, and go to state 311


State 185

   37 unary_expression: _ALIGNOF '(' • type_name ')'

    _ATOMIC     shift, and go to state 192
    CHAR        shift, and go to state 193
    CONST       shift, and go to state 194
    DOUBLE      shift, and go to state 195
    FLOAT       shift, and go to state 196
    INT         shift, and go to state 197
    LONG        shift, and go to state 198
    SHORT       shift, and go to state 199
    BOOL        shift, and go to state 200
    SIGNED      shift, and go to state 201
    STRUCT      shift, and go to state 202
    UNION       shift, and go to state 203
    UNSIGNED    shift, and go to state 204
    _BOOL       shift, and go to state 205
    _COMPLEX    shift, and go to state 206
    _IMAGINARY  shift, and go to state 207
    VOID        shift, and go to state 208
    RESTRICT    shift, and go to state 209
    VOLATILE    shift, and go to state 210

    type_specifier             go to state 212
    struct_or_union_specifier  go to state 213
    struct_or_union            go to state 214
    specifier_qualifier_list   go to state 215
    atomic_type_specifier      go to state 216
    type_qualifier             go to state 217
    type_name                  go to state 312


State 186

    8 primary_expression: '(' • expression ')'
   27 postfix_expression: '(' • type_name ')' '{' initializer_list '}'
   28                   | '(' • type_name ')' '{' initializer_list ',' '}'
   36 unary_expression: SIZEOF '(' • type_name ')'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    _ATOMIC         shift, and go to state 192
    FUNC_NAME       shift, and go to state 124
    CHAR            shift, and go to state 193
    CONST           shift, and go to state 194
    DOUBLE          shift, and go to state 195
    FLOAT           shift, and go to state 196
    INT             shift, and go to state 197
    LONG            shift, and go to state 198
    SHORT           shift, and go to state 199
    BOOL            shift, and go to state 200
    SIGNED          shift, and go to state 201
    SIZEOF          shift, and go to state 125
    STRUCT          shift, and go to state 202
    UNION           shift, and go to state 203
    UNSIGNED        shift, and go to state 204
    _BOOL           shift, and go to state 205
    _COMPLEX        shift, and go to state 206
    _IMAGINARY      shift, and go to state 207
    VOID            shift, and go to state 208
    RESTRICT        shift, and go to state 209
    VOLATILE        shift, and go to state 210
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 156
    expression                 go to state 211
    type_specifier             go to state 212
    struct_or_union_specifier  go to state 213
    struct_or_union            go to state 214
    specifier_qualifier_list   go to state 215
    atomic_type_specifier      go to state 216
    type_qualifier             go to state 217
    type_name                  go to state 313


State 187

   35 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 35 (unary_expression)


State 188

   14 generic_selection: _GENERIC '(' • assignment_expression ',' generic_assoc_list ')'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 314


State 189

    8 primary_expression: '(' • expression ')'
   27 postfix_expression: '(' • type_name ')' '{' initializer_list '}'
   28                   | '(' • type_name ')' '{' initializer_list ',' '}'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    _ATOMIC         shift, and go to state 192
    FUNC_NAME       shift, and go to state 124
    CHAR            shift, and go to state 193
    CONST           shift, and go to state 194
    DOUBLE          shift, and go to state 195
    FLOAT           shift, and go to state 196
    INT             shift, and go to state 197
    LONG            shift, and go to state 198
    SHORT           shift, and go to state 199
    BOOL            shift, and go to state 200
    SIGNED          shift, and go to state 201
    SIZEOF          shift, and go to state 125
    STRUCT          shift, and go to state 202
    UNION           shift, and go to state 203
    UNSIGNED        shift, and go to state 204
    _BOOL           shift, and go to state 205
    _COMPLEX        shift, and go to state 206
    _IMAGINARY      shift, and go to state 207
    VOID            shift, and go to state 208
    RESTRICT        shift, and go to state 209
    VOLATILE        shift, and go to state 210
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 156
    expression                 go to state 211
    type_specifier             go to state 212
    struct_or_union_specifier  go to state 213
    struct_or_union            go to state 214
    specifier_qualifier_list   go to state 215
    atomic_type_specifier      go to state 216
    type_qualifier             go to state 217
    type_name                  go to state 315


State 190

   32 unary_expression: INC_OPERAND unary_expression •

    $default  reduce using rule 32 (unary_expression)


State 191

   33 unary_expression: DEC_OPERAND unary_expression •

    $default  reduce using rule 33 (unary_expression)


State 192

  126 atomic_type_specifier: _ATOMIC • '(' type_name ')'
  130 type_qualifier: _ATOMIC •

    '('  shift, and go to state 316

    '('       [reduce using rule 130 (type_qualifier)]
    $default  reduce using rule 130 (type_qualifier)


State 193

   93 type_specifier: CHAR •

    $default  reduce using rule 93 (type_specifier)


State 194

  127 type_qualifier: CONST •

    $default  reduce using rule 127 (type_qualifier)


State 195

   98 type_specifier: DOUBLE •

    $default  reduce using rule 98 (type_specifier)


State 196

   97 type_specifier: FLOAT •

    $default  reduce using rule 97 (type_specifier)


State 197

   95 type_specifier: INT •

    $default  reduce using rule 95 (type_specifier)


State 198

   96 type_specifier: LONG •

    $default  reduce using rule 96 (type_specifier)


State 199

   94 type_specifier: SHORT •

    $default  reduce using rule 94 (type_specifier)


State 200

   99 type_specifier: BOOL •

    $default  reduce using rule 99 (type_specifier)


State 201

  100 type_specifier: SIGNED •

    $default  reduce using rule 100 (type_specifier)


State 202

  110 struct_or_union: STRUCT •

    $default  reduce using rule 110 (struct_or_union)


State 203

  111 struct_or_union: UNION •

    $default  reduce using rule 111 (struct_or_union)


State 204

  101 type_specifier: UNSIGNED •

    $default  reduce using rule 101 (type_specifier)


State 205

  102 type_specifier: _BOOL •

    $default  reduce using rule 102 (type_specifier)


State 206

  103 type_specifier: _COMPLEX •

    $default  reduce using rule 103 (type_specifier)


State 207

  104 type_specifier: _IMAGINARY •

    $default  reduce using rule 104 (type_specifier)


State 208

   92 type_specifier: VOID •

    $default  reduce using rule 92 (type_specifier)


State 209

  128 type_qualifier: RESTRICT •

    $default  reduce using rule 128 (type_qualifier)


State 210

  129 type_qualifier: VOLATILE •

    $default  reduce using rule 129 (type_qualifier)


State 211

    8 primary_expression: '(' expression • ')'
   90 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 317
    ','  shift, and go to state 258


State 212

  117 specifier_qualifier_list: type_specifier • specifier_qualifier_list
  118                         | type_specifier •

    _ATOMIC     shift, and go to state 192
    CHAR        shift, and go to state 193
    CONST       shift, and go to state 194
    DOUBLE      shift, and go to state 195
    FLOAT       shift, and go to state 196
    INT         shift, and go to state 197
    LONG        shift, and go to state 198
    SHORT       shift, and go to state 199
    BOOL        shift, and go to state 200
    SIGNED      shift, and go to state 201
    STRUCT      shift, and go to state 202
    UNION       shift, and go to state 203
    UNSIGNED    shift, and go to state 204
    _BOOL       shift, and go to state 205
    _COMPLEX    shift, and go to state 206
    _IMAGINARY  shift, and go to state 207
    VOID        shift, and go to state 208
    RESTRICT    shift, and go to state 209
    VOLATILE    shift, and go to state 210

    $default  reduce using rule 118 (specifier_qualifier_list)

    type_specifier             go to state 212
    struct_or_union_specifier  go to state 213
    struct_or_union            go to state 214
    specifier_qualifier_list   go to state 318
    atomic_type_specifier      go to state 216
    type_qualifier             go to state 217


State 213

  106 type_specifier: struct_or_union_specifier •

    $default  reduce using rule 106 (type_specifier)


State 214

  107 struct_or_union_specifier: struct_or_union • '{' struct_declaration_list '}'
  108                          | struct_or_union • IDENTIFIER '{' struct_declaration_list '}'
  109                          | struct_or_union • IDENTIFIER

    IDENTIFIER  shift, and go to state 319
    '{'         shift, and go to state 320


State 215

  154 type_name: specifier_qualifier_list • abstract_declarator
  155          | specifier_qualifier_list •

    '('  shift, and go to state 321
    '['  shift, and go to state 322
    '*'  shift, and go to state 323

    $default  reduce using rule 155 (type_name)

    pointer                     go to state 324
    abstract_declarator         go to state 325
    direct_abstract_declarator  go to state 326


State 216

  105 type_specifier: atomic_type_specifier •

    $default  reduce using rule 105 (type_specifier)


State 217

  119 specifier_qualifier_list: type_qualifier • specifier_qualifier_list
  120                         | type_qualifier •

    _ATOMIC     shift, and go to state 192
    CHAR        shift, and go to state 193
    CONST       shift, and go to state 194
    DOUBLE      shift, and go to state 195
    FLOAT       shift, and go to state 196
    INT         shift, and go to state 197
    LONG        shift, and go to state 198
    SHORT       shift, and go to state 199
    BOOL        shift, and go to state 200
    SIGNED      shift, and go to state 201
    STRUCT      shift, and go to state 202
    UNION       shift, and go to state 203
    UNSIGNED    shift, and go to state 204
    _BOOL       shift, and go to state 205
    _COMPLEX    shift, and go to state 206
    _IMAGINARY  shift, and go to state 207
    VOID        shift, and go to state 208
    RESTRICT    shift, and go to state 209
    VOLATILE    shift, and go to state 210

    $default  reduce using rule 120 (specifier_qualifier_list)

    type_specifier             go to state 212
    struct_or_union_specifier  go to state 213
    struct_or_union            go to state 214
    specifier_qualifier_list   go to state 327
    atomic_type_specifier      go to state 216
    type_qualifier             go to state 217


State 218

   27 postfix_expression: '(' type_name • ')' '{' initializer_list '}'
   28                   | '(' type_name • ')' '{' initializer_list ',' '}'
   45 cast_expression: '(' type_name • ')' cast_expression

    ')'  shift, and go to state 328


State 219

   25 postfix_expression: postfix_expression INC_OPERAND •

    $default  reduce using rule 25 (postfix_expression)


State 220

   26 postfix_expression: postfix_expression DEC_OPERAND •

    $default  reduce using rule 26 (postfix_expression)


State 221

   24 postfix_expression: postfix_expression PTR_OPERAND • IDENTIFIER

    IDENTIFIER  shift, and go to state 329


State 222

   21 postfix_expression: postfix_expression '(' • ')'
   22                   | postfix_expression '(' • argument_expression_list ')'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    ')'             shift, and go to state 330
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    argument_expression_list   go to state 331
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 332


State 223

   20 postfix_expression: postfix_expression '[' • expression ']'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 156
    expression                 go to state 333


State 224

   23 postfix_expression: postfix_expression '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 334


State 225

   85 assignment_operator: RIGHT_ASSIGN •

    $default  reduce using rule 85 (assignment_operator)


State 226

   84 assignment_operator: LEFT_ASSIGN •

    $default  reduce using rule 84 (assignment_operator)


State 227

   82 assignment_operator: ADD_ASSIGN •

    $default  reduce using rule 82 (assignment_operator)


State 228

   83 assignment_operator: SUB_ASSIGN •

    $default  reduce using rule 83 (assignment_operator)


State 229

   79 assignment_operator: MUL_ASSIGN •

    $default  reduce using rule 79 (assignment_operator)


State 230

   80 assignment_operator: DIV_ASSIGN •

    $default  reduce using rule 80 (assignment_operator)


State 231

   81 assignment_operator: MOD_ASSIGN •

    $default  reduce using rule 81 (assignment_operator)


State 232

   86 assignment_operator: AND_ASSIGN •

    $default  reduce using rule 86 (assignment_operator)


State 233

   87 assignment_operator: XOR_ASSIGN •

    $default  reduce using rule 87 (assignment_operator)


State 234

   88 assignment_operator: OR_ASSIGN •

    $default  reduce using rule 88 (assignment_operator)


State 235

   78 assignment_operator: '=' •

    $default  reduce using rule 78 (assignment_operator)


State 236

   77 assignment_expression: unary_expression assignment_operator • assignment_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 335


State 237

   44 cast_expression: unary_expression •

    $default  reduce using rule 44 (cast_expression)


State 238

   34 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 34 (unary_expression)


State 239

   47 multiplicative_expression: multiplicative_expression '*' • cast_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression  go to state 137
    constant            go to state 138
    string              go to state 139
    generic_selection   go to state 140
    postfix_expression  go to state 141
    unary_expression    go to state 237
    unary_operator      go to state 143
    cast_expression     go to state 336


State 240

   48 multiplicative_expression: multiplicative_expression '/' • cast_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression  go to state 137
    constant            go to state 138
    string              go to state 139
    generic_selection   go to state 140
    postfix_expression  go to state 141
    unary_expression    go to state 237
    unary_operator      go to state 143
    cast_expression     go to state 337


State 241

   49 multiplicative_expression: multiplicative_expression '%' • cast_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression  go to state 137
    constant            go to state 138
    string              go to state 139
    generic_selection   go to state 140
    postfix_expression  go to state 141
    unary_expression    go to state 237
    unary_operator      go to state 143
    cast_expression     go to state 338


State 242

   51 additive_expression: additive_expression '+' • multiplicative_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 339


State 243

   52 additive_expression: additive_expression '-' • multiplicative_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 340


State 244

   55 shift_expression: shift_expression RIGHT_OPERAND • additive_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 341


State 245

   54 shift_expression: shift_expression LEFT_OPERAND • additive_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 342


State 246

   59 relational_expression: relational_expression LE_OPERAND • shift_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 343


State 247

   60 relational_expression: relational_expression GE_OPERAND • shift_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 344


State 248

   57 relational_expression: relational_expression '<' • shift_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 345


State 249

   58 relational_expression: relational_expression '>' • shift_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 346


State 250

   62 equality_expression: equality_expression EQ_OPERAND • relational_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 347


State 251

   63 equality_expression: equality_expression NE_OPERAND • relational_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 348


State 252

   65 and_expression: and_expression '&' • equality_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 349


State 253

   67 exclusive_or_expression: exclusive_or_expression '^' • and_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 350


State 254

   69 inclusive_or_expression: inclusive_or_expression '|' • exclusive_or_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 351


State 255

   71 logical_and_expression: logical_and_expression AND_OPERAND • inclusive_or_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 352


State 256

   73 logical_or_expression: logical_or_expression OR_OPERAND • logical_and_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 353


State 257

   75 conditional_expression: logical_or_expression '?' • expression ':' conditional_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 156
    expression                 go to state 354


State 258

   90 expression: expression ',' • assignment_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 355


State 259

  192 expression_statement: expression ';' •

    $default  reduce using rule 192 (expression_statement)


State 260

  718 parallel_for_simd_directive: PRAGMA OMP PARALLEL FOR • SIMD parallel_for_simd_clause_multi ENDLN
  814 parallel_for_directive: PRAGMA OMP PARALLEL FOR • parallel_for_clause_multi ENDLN

    SIMD  shift, and go to state 356

    $default  reduce using rule 817 (parallel_for_clause_multi)

    parallel_for_clause_multi  go to state 357


State 261

  799 parallel_sections_directive: PRAGMA OMP PARALLEL SECTIONS • parallel_sections_clause_multi ENDLN

    $default  reduce using rule 802 (parallel_sections_clause_multi)

    parallel_sections_clause_multi  go to state 358


State 262

  868 parallel_directive: PRAGMA OMP PARALLEL parallel_clause_multi • ENDLN
  869 parallel_clause_multi: parallel_clause_multi • parallel_clause
  870                      | parallel_clause_multi • ',' parallel_clause

    NUM_THREADS   shift, and go to state 359
    DEFAULT       shift, and go to state 360
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    SHARED        shift, and go to state 363
    COPYIN        shift, and go to state 364
    REDUCTION     shift, and go to state 290
    DEPEND        shift, and go to state 365
    IF            shift, and go to state 366
    PROC_BIND     shift, and go to state 367
    ENDLN         shift, and go to state 368
    ','           shift, and go to state 369

    parallel_clause       go to state 370
    depend_clause         go to state 371
    num_threads_clause    go to state 372
    copyin_clause         go to state 373
    default_clause        go to state 374
    private_clause        go to state 375
    first_private_clause  go to state 376
    shared_clause         go to state 377
    reduction_clause      go to state 378
    if_clause             go to state 379
    procbind_clause       go to state 380


State 263

  740 for_simd_directive: PRAGMA OMP FOR SIMD • for_simd_clause_multi ENDLN

    $default  reduce using rule 743 (for_simd_clause_multi)

    for_simd_clause_multi  go to state 381


State 264

  853 for_directive: PRAGMA OMP FOR for_clause_multi • ENDLN
  854 for_clause_multi: for_clause_multi • for_clause
  855                 | for_clause_multi • ',' for_clause

    NUM_THREADS   shift, and go to state 359
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    REDUCTION     shift, and go to state 290
    NOWAIT        shift, and go to state 382
    DEPEND        shift, and go to state 365
    LASTPRIVATE   shift, and go to state 383
    COLLAPSE      shift, and go to state 384
    SCHEDULE      shift, and go to state 385
    ORDERED       shift, and go to state 386
    ENDLN         shift, and go to state 387
    ','           shift, and go to state 388

    for_clause            go to state 389
    depend_clause         go to state 390
    ordered_clause        go to state 391
    schedule_clause       go to state 392
    num_threads_clause    go to state 393
    private_clause        go to state 394
    first_private_clause  go to state 395
    last_private_clause   go to state 396
    reduction_clause      go to state 397
    collapse_clause       go to state 398


State 265

  841 sections_directive: PRAGMA OMP SECTIONS sections_clause_multi • ENDLN
  842 sections_clause_multi: sections_clause_multi • sections_clause
  843                      | sections_clause_multi • ',' sections_clause

    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    REDUCTION     shift, and go to state 290
    NOWAIT        shift, and go to state 399
    LASTPRIVATE   shift, and go to state 383
    ENDLN         shift, and go to state 400
    ','           shift, and go to state 401

    sections_clause       go to state 402
    private_clause        go to state 403
    first_private_clause  go to state 404
    last_private_clause   go to state 405
    reduction_clause      go to state 406


State 266

  851 section_directive: PRAGMA OMP SECTION ENDLN •

    $default  reduce using rule 851 (section_directive)


State 267

  759 simd_directive: PRAGMA OMP SIMD simd_clause_multi • ENDLN
  760 simd_clause_multi: simd_clause_multi • simd_clause
  761                  | simd_clause_multi • ',' simd_clause

    PRIVATE      shift, and go to state 361
    REDUCTION    shift, and go to state 290
    LASTPRIVATE  shift, and go to state 383
    LINEAR       shift, and go to state 407
    COLLAPSE     shift, and go to state 384
    ALIGNED      shift, and go to state 408
    SAFELEN      shift, and go to state 409
    SIMDLEN      shift, and go to state 410
    ENDLN        shift, and go to state 411
    ','          shift, and go to state 412

    simd_clause          go to state 413
    safe_len_clause      go to state 414
    simd_len_clause      go to state 415
    private_clause       go to state 416
    last_private_clause  go to state 417
    reduction_clause     go to state 418
    linear_clause        go to state 419
    aligned_clause       go to state 420
    collapse_clause      go to state 421


State 268

  772 task_directive: PRAGMA OMP TASK task_clause_multi • ENDLN
  773 task_clause_multi: task_clause_multi • task_clause
  774                  | task_clause_multi • ',' task_clause

    DEFAULT       shift, and go to state 360
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    SHARED        shift, and go to state 363
    DEPEND        shift, and go to state 365
    IF            shift, and go to state 366
    FINAL         shift, and go to state 422
    UNTIED        shift, and go to state 423
    MERGEABLE     shift, and go to state 424
    PRIORITY      shift, and go to state 425
    ENDLN         shift, and go to state 426
    ','           shift, and go to state 427

    task_clause           go to state 428
    final_clause          go to state 429
    untied_clause         go to state 430
    mergeable_clause      go to state 431
    depend_clause         go to state 432
    priority_clause       go to state 433
    default_clause        go to state 434
    private_clause        go to state 435
    first_private_clause  go to state 436
    shared_clause         go to state 437
    if_clause             go to state 438


State 269

  832 single_directive: PRAGMA OMP SINGLE single_clause_multi • ENDLN
  833 single_clause_multi: single_clause_multi • single_clause
  834                    | single_clause_multi • ',' single_clause

    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    NOWAIT        shift, and go to state 439
    COPYPRIVATE   shift, and go to state 440
    ENDLN         shift, and go to state 441
    ','           shift, and go to state 442

    single_clause         go to state 443
    copy_private_clause   go to state 444
    private_clause        go to state 445
    first_private_clause  go to state 446


State 270

  268 target_parallel_for_simd_directive: PRAGMA OMP TARGET PARALLEL • FOR SIMD target_parallel_for_simd_clause_multi ENDLN
  295 target_parallel_for_directive: PRAGMA OMP TARGET PARALLEL • FOR target_parallel_for_clause_multi ENDLN
  318 target_parallel_directive: PRAGMA OMP TARGET PARALLEL • target_parallel_clause_multi ENDLN

    FOR  shift, and go to state 447

    $default  reduce using rule 321 (target_parallel_clause_multi)

    target_parallel_clause_multi  go to state 448


State 271

  247 target_simd_directive: PRAGMA OMP TARGET SIMD • target_simd_clause_multi ENDLN

    $default  reduce using rule 250 (target_simd_clause_multi)

    target_simd_clause_multi  go to state 449


State 272

  685 target_update_directive: PRAGMA OMP TARGET UPDATE • target_update_clause_seq ENDLN

    NOWAIT  shift, and go to state 450
    DEPEND  shift, and go to state 365
    IF      shift, and go to state 366
    DEVICE  shift, and go to state 451
    TO      shift, and go to state 452
    FROM    shift, and go to state 453

    target_update_clause_seq  go to state 454
    target_update_clause      go to state 455
    motion_clause             go to state 456
    device_clause             go to state 457
    depend_clause             go to state 458
    if_clause                 go to state 459


State 273

  709 target_data_directive: PRAGMA OMP TARGET DATA • target_data_clause_multi ENDLN

    $default  reduce using rule 712 (target_data_clause_multi)

    target_data_clause_multi  go to state 460


State 274

  890 omp_target_enter_data: PRAGMA OMP TARGET ENTER • DATA omp_target_enter_data_clause_multi ENDLN

    DATA  shift, and go to state 461


State 275

  899 omp_target_exit_data: PRAGMA OMP TARGET EXIT • DATA omp_target_exit_data_clause_multi ENDLN

    DATA  shift, and go to state 462


State 276

  397 target_teams_distribute_parallel_for_simd_directive: PRAGMA OMP TARGET TEAMS • DISTRIBUTE PARALLEL FOR SIMD target_teams_distribute_parallel_for_simd_clause_multi ENDLN
  459 target_teams_distribute_parallel_for_directive: PRAGMA OMP TARGET TEAMS • DISTRIBUTE PARALLEL FOR target_teams_distribute_parallel_for_clause_multi ENDLN
  505 target_teams_distribute_simd_directive: PRAGMA OMP TARGET TEAMS • DISTRIBUTE SIMD target_teams_distribute_simd_clause_multi ENDLN
  531 target_teams_distribute_directive: PRAGMA OMP TARGET TEAMS • DISTRIBUTE target_teams_distribute_clause_multi ENDLN
  587 target_teams_directive: PRAGMA OMP TARGET TEAMS • target_teams_clause_multi ENDLN

    DISTRIBUTE  shift, and go to state 463

    $default  reduce using rule 590 (target_teams_clause_multi)

    target_teams_clause_multi  go to state 464


State 277

  695 target_directive: PRAGMA OMP TARGET target_clause_multi • ENDLN
  696 target_clause_multi: target_clause_multi • target_clause
  697                    | target_clause_multi • ',' target_clause

    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    NOWAIT         shift, and go to state 465
    DEPEND         shift, and go to state 365
    IF             shift, and go to state 366
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 467
    DEFAULTMAP     shift, and go to state 468
    ENDLN          shift, and go to state 469
    ','            shift, and go to state 470

    target_clause         go to state 471
    device_clause         go to state 472
    map_clause            go to state 473
    depend_clause         go to state 474
    private_clause        go to state 475
    first_private_clause  go to state 476
    if_clause             go to state 477


State 278

  943 atomic_clause: UPDATE •

    $default  reduce using rule 943 (atomic_clause)


State 279

  941 atomic_clause: READ •

    $default  reduce using rule 941 (atomic_clause)


State 280

  942 atomic_clause: WRITE •

    $default  reduce using rule 942 (atomic_clause)


State 281

  944 atomic_clause: CAPTURE •

    $default  reduce using rule 944 (atomic_clause)


State 282

  792 atomic_directive: PRAGMA OMP ATOMIC atomic_clause • seq_cst_clause ENDLN

    SEQ_CST  shift, and go to state 478

    $default  reduce using rule 947 (seq_cst_clause)

    seq_cst_clause  go to state 479


State 283

  797 master_directive: PRAGMA OMP MASTER ENDLN •

    $default  reduce using rule 797 (master_directive)


State 284

  794 critical_directive: PRAGMA OMP CRITICAL ENDLN •

    $default  reduce using rule 794 (critical_directive)


State 285

  948 region_phrase: '(' • IDENTIFIER ')'

    IDENTIFIER  shift, and go to state 480


State 286

  795 critical_directive: PRAGMA OMP CRITICAL region_phrase • ENDLN

    ENDLN  shift, and go to state 481


State 287

  884 omp_barrier: PRAGMA OMP BARRIER ENDLN •

    $default  reduce using rule 884 (omp_barrier)


State 288

  787 ordered_directive: PRAGMA OMP ORDERED ordered_clause_multi • ENDLN
  788 ordered_clause_multi: ordered_clause_multi • ordered_clause_opt
  789                     | ordered_clause_multi • ',' ordered_clause_opt

    SIMD     shift, and go to state 482
    THREADS  shift, and go to state 483
    ENDLN    shift, and go to state 484
    ','      shift, and go to state 485

    ordered_clause_opt  go to state 486


State 289

  384 declare_simd_directive: PRAGMA OMP DECLARE SIMD • declare_simd_directive_clause_multi ENDLN

    $default  reduce using rule 387 (declare_simd_directive_clause_multi)

    declare_simd_directive_clause_multi  go to state 487


State 290

  966 reduction_clause: REDUCTION • '(' reduction_identifier ':' variable_list ')'

    '('  shift, and go to state 488


State 291

  882 omp_declare_reduction: PRAGMA OMP DECLARE reduction_clause • ENDLN

    ENDLN  shift, and go to state 489


State 292

  337 taskloop_simd_directive: PRAGMA OMP TASKLOOP SIMD • taskloop_simd_clause_multi ENDLN

    $default  reduce using rule 340 (taskloop_simd_clause_multi)

    taskloop_simd_clause_multi  go to state 490


State 293

  361 taskloop_directive: PRAGMA OMP TASKLOOP taskloop_clause_multi • ENDLN
  362 taskloop_clause_multi: taskloop_clause_multi • taskloop_clause
  363                      | taskloop_clause_multi • ',' taskloop_clause

    NUM_THREADS   shift, and go to state 359
    DEFAULT       shift, and go to state 360
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    SHARED        shift, and go to state 363
    REDUCTION     shift, and go to state 290
    DEPEND        shift, and go to state 365
    LASTPRIVATE   shift, and go to state 383
    COLLAPSE      shift, and go to state 384
    IF            shift, and go to state 366
    FINAL         shift, and go to state 422
    UNTIED        shift, and go to state 423
    MERGEABLE     shift, and go to state 424
    PRIORITY      shift, and go to state 425
    SCHEDULE      shift, and go to state 385
    GRAINSIZE     shift, and go to state 491
    NUM_TASKS     shift, and go to state 492
    NOGROUP       shift, and go to state 493
    ENDLN         shift, and go to state 494
    ','           shift, and go to state 495

    taskloop_clause       go to state 496
    grainsize_clause      go to state 497
    num_tasks_clause      go to state 498
    final_clause          go to state 499
    untied_clause         go to state 500
    mergeable_clause      go to state 501
    depend_clause         go to state 502
    priority_clause       go to state 503
    schedule_clause       go to state 504
    num_threads_clause    go to state 505
    default_clause        go to state 506
    private_clause        go to state 507
    first_private_clause  go to state 508
    last_private_clause   go to state 509
    shared_clause         go to state 510
    reduction_clause      go to state 511
    collapse_clause       go to state 512
    if_clause             go to state 513


State 294

  606 distribute_parallel_for_simd_directive: PRAGMA OMP DISTRIBUTE PARALLEL • FOR SIMD distribute_parallel_for_simd_clause_multi ENDLN
  629 distribute_parallel_for_directive: PRAGMA OMP DISTRIBUTE PARALLEL • FOR distribute_parallel_for_clause_multi ENDLN

    FOR  shift, and go to state 514


State 295

  648 distribute_simd_directive: PRAGMA OMP DISTRIBUTE SIMD • distribute_simd_clause_multi ENDLN

    $default  reduce using rule 651 (distribute_simd_clause_multi)

    distribute_simd_clause_multi  go to state 515


State 296

  663 distribute_directive: PRAGMA OMP DISTRIBUTE distribute_clause_multi • ENDLN
  664 distribute_clause_multi: distribute_clause_multi • distribute_clause
  665                        | distribute_clause_multi • ',' distribute_clause

    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    LASTPRIVATE    shift, and go to state 383
    COLLAPSE       shift, and go to state 384
    DIST_SCHEDULE  shift, and go to state 516
    ENDLN          shift, and go to state 517
    ','            shift, and go to state 518

    distribute_clause     go to state 519
    dist_schedule_clause  go to state 520
    private_clause        go to state 521
    first_private_clause  go to state 522
    last_private_clause   go to state 523
    collapse_clause       go to state 524


State 297

  889 omp_taskyield: PRAGMA OMP TASKYIELD ENDLN •

    $default  reduce using rule 889 (omp_taskyield)


State 298

  428 teams_distribute_parallel_for_simd_directive: PRAGMA OMP TEAMS DISTRIBUTE • PARALLEL FOR SIMD teams_distribute_parallel_for_simd_clause_multi ENDLN
  485 teams_distribute_parallel_for_directive: PRAGMA OMP TEAMS DISTRIBUTE • PARALLEL FOR teams_distribute_parallel_for_clause_multi ENDLN
  553 teams_distribute_simd_directive: PRAGMA OMP TEAMS DISTRIBUTE • SIMD teams_distribute_simd_clause_multi ENDLN
  572 teams_distribute_directive: PRAGMA OMP TEAMS DISTRIBUTE • teams_distribute_clause_multi ENDLN

    PARALLEL  shift, and go to state 525
    SIMD      shift, and go to state 526

    $default  reduce using rule 575 (teams_distribute_clause_multi)

    teams_distribute_clause_multi  go to state 527


State 299

  673 teams_directive: PRAGMA OMP TEAMS teams_clause_multi • ENDLN
  674 teams_clause_multi: teams_clause_multi • teams_clause
  675                   | teams_clause_multi • ',' teams_clause

    DEFAULT       shift, and go to state 360
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    SHARED        shift, and go to state 363
    REDUCTION     shift, and go to state 290
    NUM_TEAMS     shift, and go to state 528
    THREAD_LIMIT  shift, and go to state 529
    ENDLN         shift, and go to state 530
    ','           shift, and go to state 531

    teams_clause          go to state 532
    num_teams_clause      go to state 533
    thread_limit_clause   go to state 534
    default_clause        go to state 535
    private_clause        go to state 536
    first_private_clause  go to state 537
    shared_clause         go to state 538
    reduction_clause      go to state 539


State 300

  888 omp_taskwait: PRAGMA OMP TASKWAIT ENDLN •

    $default  reduce using rule 888 (omp_taskwait)


State 301

  395 taskgroup_directive: PRAGMA OMP TASKGROUP ENDLN •

    $default  reduce using rule 395 (taskgroup_directive)


State 302

  885 omp_flush: PRAGMA OMP FLUSH ENDLN •

    $default  reduce using rule 885 (omp_flush)


State 303

  887 flush_list: '(' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 542


State 304

  886 omp_flush: PRAGMA OMP FLUSH flush_list • ENDLN

    ENDLN  shift, and go to state 543


State 305

  986 type_construct_clause: PARALLEL •

    $default  reduce using rule 986 (type_construct_clause)


State 306

  988 type_construct_clause: FOR •

    $default  reduce using rule 988 (type_construct_clause)


State 307

  987 type_construct_clause: SECTIONS •

    $default  reduce using rule 987 (type_construct_clause)


State 308

  989 type_construct_clause: TASKGROUP •

    $default  reduce using rule 989 (type_construct_clause)


State 309

  908 omp_cancel: PRAGMA OMP CANCEL type_construct_clause • ENDLN
  909           | PRAGMA OMP CANCEL type_construct_clause • if_clause ENDLN
  910           | PRAGMA OMP CANCEL type_construct_clause • ',' if_clause ENDLN

    IF     shift, and go to state 366
    ENDLN  shift, and go to state 544
    ','    shift, and go to state 545

    if_clause  go to state 546


State 310

  911 omp_cancellation_point: PRAGMA OMP CANCELLATION POINT • type_construct_clause ENDLN

    PARALLEL   shift, and go to state 305
    FOR        shift, and go to state 306
    SECTIONS   shift, and go to state 307
    TASKGROUP  shift, and go to state 308

    $default  reduce using rule 990 (type_construct_clause)

    type_construct_clause  go to state 547


State 311

  883 omp_threadprivate: PRAGMA OMP THREADPRIVATE '(' • variable_list ')' ENDLN

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 548


State 312

   37 unary_expression: _ALIGNOF '(' type_name • ')'

    ')'  shift, and go to state 549


State 313

   27 postfix_expression: '(' type_name • ')' '{' initializer_list '}'
   28                   | '(' type_name • ')' '{' initializer_list ',' '}'
   36 unary_expression: SIZEOF '(' type_name • ')'

    ')'  shift, and go to state 550


State 314

   14 generic_selection: _GENERIC '(' assignment_expression • ',' generic_assoc_list ')'

    ','  shift, and go to state 551


State 315

   27 postfix_expression: '(' type_name • ')' '{' initializer_list '}'
   28                   | '(' type_name • ')' '{' initializer_list ',' '}'

    ')'  shift, and go to state 552


State 316

  126 atomic_type_specifier: _ATOMIC '(' • type_name ')'

    _ATOMIC     shift, and go to state 192
    CHAR        shift, and go to state 193
    CONST       shift, and go to state 194
    DOUBLE      shift, and go to state 195
    FLOAT       shift, and go to state 196
    INT         shift, and go to state 197
    LONG        shift, and go to state 198
    SHORT       shift, and go to state 199
    BOOL        shift, and go to state 200
    SIGNED      shift, and go to state 201
    STRUCT      shift, and go to state 202
    UNION       shift, and go to state 203
    UNSIGNED    shift, and go to state 204
    _BOOL       shift, and go to state 205
    _COMPLEX    shift, and go to state 206
    _IMAGINARY  shift, and go to state 207
    VOID        shift, and go to state 208
    RESTRICT    shift, and go to state 209
    VOLATILE    shift, and go to state 210

    type_specifier             go to state 212
    struct_or_union_specifier  go to state 213
    struct_or_union            go to state 214
    specifier_qualifier_list   go to state 215
    atomic_type_specifier      go to state 216
    type_qualifier             go to state 217
    type_name                  go to state 553


State 317

    8 primary_expression: '(' expression ')' •

    $default  reduce using rule 8 (primary_expression)


State 318

  117 specifier_qualifier_list: type_specifier specifier_qualifier_list •

    $default  reduce using rule 117 (specifier_qualifier_list)


State 319

  108 struct_or_union_specifier: struct_or_union IDENTIFIER • '{' struct_declaration_list '}'
  109                          | struct_or_union IDENTIFIER •

    '{'  shift, and go to state 554

    $default  reduce using rule 109 (struct_or_union_specifier)


State 320

  107 struct_or_union_specifier: struct_or_union '{' • struct_declaration_list '}'

    _ATOMIC         shift, and go to state 192
    _STATIC_ASSERT  shift, and go to state 555
    CHAR            shift, and go to state 193
    CONST           shift, and go to state 194
    DOUBLE          shift, and go to state 195
    FLOAT           shift, and go to state 196
    INT             shift, and go to state 197
    LONG            shift, and go to state 198
    SHORT           shift, and go to state 199
    BOOL            shift, and go to state 200
    SIGNED          shift, and go to state 201
    STRUCT          shift, and go to state 202
    UNION           shift, and go to state 203
    UNSIGNED        shift, and go to state 204
    _BOOL           shift, and go to state 205
    _COMPLEX        shift, and go to state 206
    _IMAGINARY      shift, and go to state 207
    VOID            shift, and go to state 208
    RESTRICT        shift, and go to state 209
    VOLATILE        shift, and go to state 210

    type_specifier             go to state 212
    struct_or_union_specifier  go to state 213
    struct_or_union            go to state 214
    struct_declaration_list    go to state 556
    struct_declaration         go to state 557
    specifier_qualifier_list   go to state 558
    atomic_type_specifier      go to state 216
    type_qualifier             go to state 217
    static_assert_declaration  go to state 559


State 321

  159 direct_abstract_declarator: '(' • abstract_declarator ')'
  176                           | '(' • ')'

    '('  shift, and go to state 321
    ')'  shift, and go to state 560
    '['  shift, and go to state 322
    '*'  shift, and go to state 323

    pointer                     go to state 324
    abstract_declarator         go to state 561
    direct_abstract_declarator  go to state 326


State 322

  160 direct_abstract_declarator: '[' • ']'
  161                           | '[' • '*' ']'
  162                           | '[' • C_STATIC type_qualifier_list assignment_expression ']'
  163                           | '[' • C_STATIC assignment_expression ']'
  164                           | '[' • type_qualifier_list C_STATIC assignment_expression ']'
  165                           | '[' • type_qualifier_list assignment_expression ']'
  166                           | '[' • type_qualifier_list ']'
  167                           | '[' • assignment_expression ']'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    C_STATIC        shift, and go to state 562
    _ALIGNOF        shift, and go to state 123
    _ATOMIC         shift, and go to state 563
    FUNC_NAME       shift, and go to state 124
    CONST           shift, and go to state 194
    SIZEOF          shift, and go to state 125
    RESTRICT        shift, and go to state 209
    VOLATILE        shift, and go to state 210
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    ']'             shift, and go to state 564
    '&'             shift, and go to state 130
    '*'             shift, and go to state 565
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 566
    type_qualifier             go to state 567
    type_qualifier_list        go to state 568


State 323

  146 pointer: '*' • type_qualifier_list pointer
  147        | '*' • type_qualifier_list
  148        | '*' • pointer
  149        | '*' •

    _ATOMIC   shift, and go to state 563
    CONST     shift, and go to state 194
    RESTRICT  shift, and go to state 209
    VOLATILE  shift, and go to state 210
    '*'       shift, and go to state 323

    $default  reduce using rule 149 (pointer)

    type_qualifier       go to state 567
    pointer              go to state 569
    type_qualifier_list  go to state 570


State 324

  156 abstract_declarator: pointer • direct_abstract_declarator
  157                    | pointer •

    '('  shift, and go to state 321
    '['  shift, and go to state 322

    $default  reduce using rule 157 (abstract_declarator)

    direct_abstract_declarator  go to state 571


State 325

  154 type_name: specifier_qualifier_list abstract_declarator •

    $default  reduce using rule 154 (type_name)


State 326

  158 abstract_declarator: direct_abstract_declarator •
  168 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
  169                           | direct_abstract_declarator • '[' '*' ']'
  170                           | direct_abstract_declarator • '[' C_STATIC type_qualifier_list assignment_expression ']'
  171                           | direct_abstract_declarator • '[' C_STATIC assignment_expression ']'
  172                           | direct_abstract_declarator • '[' type_qualifier_list assignment_expression ']'
  173                           | direct_abstract_declarator • '[' type_qualifier_list C_STATIC assignment_expression ']'
  174                           | direct_abstract_declarator • '[' type_qualifier_list ']'
  175                           | direct_abstract_declarator • '[' assignment_expression ']'
  177                           | direct_abstract_declarator • '(' ')'

    '('  shift, and go to state 572
    '['  shift, and go to state 573

    $default  reduce using rule 158 (abstract_declarator)


State 327

  119 specifier_qualifier_list: type_qualifier specifier_qualifier_list •

    $default  reduce using rule 119 (specifier_qualifier_list)


State 328

   27 postfix_expression: '(' type_name ')' • '{' initializer_list '}'
   28                   | '(' type_name ')' • '{' initializer_list ',' '}'
   45 cast_expression: '(' type_name ')' • cast_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '{'             shift, and go to state 574
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression  go to state 137
    constant            go to state 138
    string              go to state 139
    generic_selection   go to state 140
    postfix_expression  go to state 141
    unary_expression    go to state 237
    unary_operator      go to state 143
    cast_expression     go to state 575


State 329

   24 postfix_expression: postfix_expression PTR_OPERAND IDENTIFIER •

    $default  reduce using rule 24 (postfix_expression)


State 330

   21 postfix_expression: postfix_expression '(' ')' •

    $default  reduce using rule 21 (postfix_expression)


State 331

   22 postfix_expression: postfix_expression '(' argument_expression_list • ')'
   30 argument_expression_list: argument_expression_list • ',' assignment_expression

    ')'  shift, and go to state 576
    ','  shift, and go to state 577


State 332

   29 argument_expression_list: assignment_expression •

    $default  reduce using rule 29 (argument_expression_list)


State 333

   20 postfix_expression: postfix_expression '[' expression • ']'
   90 expression: expression • ',' assignment_expression

    ','  shift, and go to state 258
    ']'  shift, and go to state 578


State 334

   23 postfix_expression: postfix_expression '.' IDENTIFIER •

    $default  reduce using rule 23 (postfix_expression)


State 335

   77 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 77 (assignment_expression)


State 336

   47 multiplicative_expression: multiplicative_expression '*' cast_expression •

    $default  reduce using rule 47 (multiplicative_expression)


State 337

   48 multiplicative_expression: multiplicative_expression '/' cast_expression •

    $default  reduce using rule 48 (multiplicative_expression)


State 338

   49 multiplicative_expression: multiplicative_expression '%' cast_expression •

    $default  reduce using rule 49 (multiplicative_expression)


State 339

   47 multiplicative_expression: multiplicative_expression • '*' cast_expression
   48                          | multiplicative_expression • '/' cast_expression
   49                          | multiplicative_expression • '%' cast_expression
   51 additive_expression: additive_expression '+' multiplicative_expression •

    '*'  shift, and go to state 239
    '/'  shift, and go to state 240
    '%'  shift, and go to state 241

    $default  reduce using rule 51 (additive_expression)


State 340

   47 multiplicative_expression: multiplicative_expression • '*' cast_expression
   48                          | multiplicative_expression • '/' cast_expression
   49                          | multiplicative_expression • '%' cast_expression
   52 additive_expression: additive_expression '-' multiplicative_expression •

    '*'  shift, and go to state 239
    '/'  shift, and go to state 240
    '%'  shift, and go to state 241

    $default  reduce using rule 52 (additive_expression)


State 341

   51 additive_expression: additive_expression • '+' multiplicative_expression
   52                    | additive_expression • '-' multiplicative_expression
   55 shift_expression: shift_expression RIGHT_OPERAND additive_expression •

    '+'  shift, and go to state 242
    '-'  shift, and go to state 243

    $default  reduce using rule 55 (shift_expression)


State 342

   51 additive_expression: additive_expression • '+' multiplicative_expression
   52                    | additive_expression • '-' multiplicative_expression
   54 shift_expression: shift_expression LEFT_OPERAND additive_expression •

    '+'  shift, and go to state 242
    '-'  shift, and go to state 243

    $default  reduce using rule 54 (shift_expression)


State 343

   54 shift_expression: shift_expression • LEFT_OPERAND additive_expression
   55                 | shift_expression • RIGHT_OPERAND additive_expression
   59 relational_expression: relational_expression LE_OPERAND shift_expression •

    RIGHT_OPERAND  shift, and go to state 244
    LEFT_OPERAND   shift, and go to state 245

    $default  reduce using rule 59 (relational_expression)


State 344

   54 shift_expression: shift_expression • LEFT_OPERAND additive_expression
   55                 | shift_expression • RIGHT_OPERAND additive_expression
   60 relational_expression: relational_expression GE_OPERAND shift_expression •

    RIGHT_OPERAND  shift, and go to state 244
    LEFT_OPERAND   shift, and go to state 245

    $default  reduce using rule 60 (relational_expression)


State 345

   54 shift_expression: shift_expression • LEFT_OPERAND additive_expression
   55                 | shift_expression • RIGHT_OPERAND additive_expression
   57 relational_expression: relational_expression '<' shift_expression •

    RIGHT_OPERAND  shift, and go to state 244
    LEFT_OPERAND   shift, and go to state 245

    $default  reduce using rule 57 (relational_expression)


State 346

   54 shift_expression: shift_expression • LEFT_OPERAND additive_expression
   55                 | shift_expression • RIGHT_OPERAND additive_expression
   58 relational_expression: relational_expression '>' shift_expression •

    RIGHT_OPERAND  shift, and go to state 244
    LEFT_OPERAND   shift, and go to state 245

    $default  reduce using rule 58 (relational_expression)


State 347

   57 relational_expression: relational_expression • '<' shift_expression
   58                      | relational_expression • '>' shift_expression
   59                      | relational_expression • LE_OPERAND shift_expression
   60                      | relational_expression • GE_OPERAND shift_expression
   62 equality_expression: equality_expression EQ_OPERAND relational_expression •

    LE_OPERAND  shift, and go to state 246
    GE_OPERAND  shift, and go to state 247
    '<'         shift, and go to state 248
    '>'         shift, and go to state 249

    $default  reduce using rule 62 (equality_expression)


State 348

   57 relational_expression: relational_expression • '<' shift_expression
   58                      | relational_expression • '>' shift_expression
   59                      | relational_expression • LE_OPERAND shift_expression
   60                      | relational_expression • GE_OPERAND shift_expression
   63 equality_expression: equality_expression NE_OPERAND relational_expression •

    LE_OPERAND  shift, and go to state 246
    GE_OPERAND  shift, and go to state 247
    '<'         shift, and go to state 248
    '>'         shift, and go to state 249

    $default  reduce using rule 63 (equality_expression)


State 349

   62 equality_expression: equality_expression • EQ_OPERAND relational_expression
   63                    | equality_expression • NE_OPERAND relational_expression
   65 and_expression: and_expression '&' equality_expression •

    EQ_OPERAND  shift, and go to state 250
    NE_OPERAND  shift, and go to state 251

    $default  reduce using rule 65 (and_expression)


State 350

   65 and_expression: and_expression • '&' equality_expression
   67 exclusive_or_expression: exclusive_or_expression '^' and_expression •

    '&'  shift, and go to state 252

    $default  reduce using rule 67 (exclusive_or_expression)


State 351

   67 exclusive_or_expression: exclusive_or_expression • '^' and_expression
   69 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression •

    '^'  shift, and go to state 253

    $default  reduce using rule 69 (inclusive_or_expression)


State 352

   69 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
   71 logical_and_expression: logical_and_expression AND_OPERAND inclusive_or_expression •

    '|'  shift, and go to state 254

    $default  reduce using rule 71 (logical_and_expression)


State 353

   71 logical_and_expression: logical_and_expression • AND_OPERAND inclusive_or_expression
   73 logical_or_expression: logical_or_expression OR_OPERAND logical_and_expression •

    AND_OPERAND  shift, and go to state 255

    $default  reduce using rule 73 (logical_or_expression)


State 354

   75 conditional_expression: logical_or_expression '?' expression • ':' conditional_expression
   90 expression: expression • ',' assignment_expression

    ','  shift, and go to state 258
    ':'  shift, and go to state 579


State 355

   90 expression: expression ',' assignment_expression •

    $default  reduce using rule 90 (expression)


State 356

  718 parallel_for_simd_directive: PRAGMA OMP PARALLEL FOR SIMD • parallel_for_simd_clause_multi ENDLN

    $default  reduce using rule 721 (parallel_for_simd_clause_multi)

    parallel_for_simd_clause_multi  go to state 580


State 357

  814 parallel_for_directive: PRAGMA OMP PARALLEL FOR parallel_for_clause_multi • ENDLN
  815 parallel_for_clause_multi: parallel_for_clause_multi • parallel_for_clause
  816                          | parallel_for_clause_multi • ',' parallel_for_clause

    NUM_THREADS   shift, and go to state 359
    DEFAULT       shift, and go to state 360
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    SHARED        shift, and go to state 363
    COPYIN        shift, and go to state 364
    REDUCTION     shift, and go to state 290
    LASTPRIVATE   shift, and go to state 383
    COLLAPSE      shift, and go to state 384
    IF            shift, and go to state 366
    SCHEDULE      shift, and go to state 385
    ORDERED       shift, and go to state 386
    PROC_BIND     shift, and go to state 367
    ENDLN         shift, and go to state 581
    ','           shift, and go to state 582

    parallel_for_clause   go to state 583
    ordered_clause        go to state 584
    schedule_clause       go to state 585
    num_threads_clause    go to state 586
    copyin_clause         go to state 587
    default_clause        go to state 588
    private_clause        go to state 589
    first_private_clause  go to state 590
    last_private_clause   go to state 591
    shared_clause         go to state 592
    reduction_clause      go to state 593
    collapse_clause       go to state 594
    if_clause             go to state 595
    procbind_clause       go to state 596


State 358

  799 parallel_sections_directive: PRAGMA OMP PARALLEL SECTIONS parallel_sections_clause_multi • ENDLN
  800 parallel_sections_clause_multi: parallel_sections_clause_multi • parallel_sections_clause
  801                               | parallel_sections_clause_multi • ',' parallel_sections_clause

    NUM_THREADS   shift, and go to state 359
    DEFAULT       shift, and go to state 360
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    SHARED        shift, and go to state 363
    COPYIN        shift, and go to state 364
    REDUCTION     shift, and go to state 290
    LASTPRIVATE   shift, and go to state 383
    IF            shift, and go to state 366
    PROC_BIND     shift, and go to state 367
    ENDLN         shift, and go to state 597
    ','           shift, and go to state 598

    parallel_sections_clause  go to state 599
    num_threads_clause        go to state 600
    copyin_clause             go to state 601
    default_clause            go to state 602
    private_clause            go to state 603
    first_private_clause      go to state 604
    last_private_clause       go to state 605
    shared_clause             go to state 606
    reduction_clause          go to state 607
    if_clause                 go to state 608
    procbind_clause           go to state 609


State 359

  958 num_threads_clause: NUM_THREADS • '(' I_CONSTANT ')'

    '('  shift, and go to state 610


State 360

  960 default_clause: DEFAULT • '(' SHARED ')'
  961               | DEFAULT • '(' NONE ')'

    '('  shift, and go to state 611


State 361

  962 private_clause: PRIVATE • '(' variable_list ')'

    '('  shift, and go to state 612


State 362

  963 first_private_clause: FIRSTPRIVATE • '(' variable_list ')'

    '('  shift, and go to state 613


State 363

  965 shared_clause: SHARED • '(' variable_list ')'

    '('  shift, and go to state 614


State 364

  959 copyin_clause: COPYIN • '(' variable_list ')'

    '('  shift, and go to state 615


State 365

  933 depend_clause: DEPEND • '(' dependence_type ':' variable_array_section_list ')'

    '('  shift, and go to state 616


State 366

  991 if_clause: IF • '(' expression ')'

    '('  shift, and go to state 617


State 367

  992 procbind_clause: PROC_BIND • '(' MASTER ')'
  993                | PROC_BIND • '(' CLOSE ')'
  994                | PROC_BIND • '(' SPREAD ')'

    '('  shift, and go to state 618


State 368

  868 parallel_directive: PRAGMA OMP PARALLEL parallel_clause_multi ENDLN •

    $default  reduce using rule 868 (parallel_directive)


State 369

  870 parallel_clause_multi: parallel_clause_multi ',' • parallel_clause

    NUM_THREADS   shift, and go to state 359
    DEFAULT       shift, and go to state 360
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    SHARED        shift, and go to state 363
    COPYIN        shift, and go to state 364
    REDUCTION     shift, and go to state 290
    DEPEND        shift, and go to state 365
    IF            shift, and go to state 366
    PROC_BIND     shift, and go to state 367

    parallel_clause       go to state 619
    depend_clause         go to state 371
    num_threads_clause    go to state 372
    copyin_clause         go to state 373
    default_clause        go to state 374
    private_clause        go to state 375
    first_private_clause  go to state 376
    shared_clause         go to state 377
    reduction_clause      go to state 378
    if_clause             go to state 379
    procbind_clause       go to state 380


State 370

  869 parallel_clause_multi: parallel_clause_multi parallel_clause •

    $default  reduce using rule 869 (parallel_clause_multi)


State 371

  874 parallel_clause: depend_clause •

    $default  reduce using rule 874 (parallel_clause)


State 372

  873 parallel_clause: num_threads_clause •

    $default  reduce using rule 873 (parallel_clause)


State 373

  875 parallel_clause: copyin_clause •

    $default  reduce using rule 875 (parallel_clause)


State 374

  877 parallel_clause: default_clause •

    $default  reduce using rule 877 (parallel_clause)


State 375

  878 parallel_clause: private_clause •

    $default  reduce using rule 878 (parallel_clause)


State 376

  879 parallel_clause: first_private_clause •

    $default  reduce using rule 879 (parallel_clause)


State 377

  880 parallel_clause: shared_clause •

    $default  reduce using rule 880 (parallel_clause)


State 378

  881 parallel_clause: reduction_clause •

    $default  reduce using rule 881 (parallel_clause)


State 379

  872 parallel_clause: if_clause •

    $default  reduce using rule 872 (parallel_clause)


State 380

  876 parallel_clause: procbind_clause •

    $default  reduce using rule 876 (parallel_clause)


State 381

  740 for_simd_directive: PRAGMA OMP FOR SIMD for_simd_clause_multi • ENDLN
  741 for_simd_clause_multi: for_simd_clause_multi • for_simd_clause
  742                      | for_simd_clause_multi • ',' for_simd_clause

    NUM_THREADS   shift, and go to state 359
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    REDUCTION     shift, and go to state 290
    NOWAIT        shift, and go to state 620
    DEPEND        shift, and go to state 365
    LASTPRIVATE   shift, and go to state 383
    LINEAR        shift, and go to state 407
    COLLAPSE      shift, and go to state 384
    SCHEDULE      shift, and go to state 385
    ORDERED       shift, and go to state 386
    ALIGNED       shift, and go to state 408
    SAFELEN       shift, and go to state 409
    SIMDLEN       shift, and go to state 410
    ENDLN         shift, and go to state 621
    ','           shift, and go to state 622

    for_simd_clause       go to state 623
    safe_len_clause       go to state 624
    simd_len_clause       go to state 625
    depend_clause         go to state 626
    ordered_clause        go to state 627
    schedule_clause       go to state 628
    num_threads_clause    go to state 629
    private_clause        go to state 630
    first_private_clause  go to state 631
    last_private_clause   go to state 632
    reduction_clause      go to state 633
    linear_clause         go to state 634
    aligned_clause        go to state 635
    collapse_clause       go to state 636


State 382

  865 for_clause: NOWAIT •

    $default  reduce using rule 865 (for_clause)


State 383

  964 last_private_clause: LASTPRIVATE • '(' variable_list ')'

    '('  shift, and go to state 637


State 384

  982 collapse_clause: COLLAPSE • '(' expression ')'

    '('  shift, and go to state 638


State 385

  952 schedule_clause: SCHEDULE • '(' schedule_kind ')'
  953                | SCHEDULE • '(' schedule_kind ',' I_CONSTANT ')'
  954                | SCHEDULE • '(' schedule_kind ',' IDENTIFIER ')'

    '('  shift, and go to state 639


State 386

  950 ordered_clause: ORDERED •
  951               | ORDERED • '(' expression ')'

    '('  shift, and go to state 640

    $default  reduce using rule 950 (ordered_clause)


State 387

  853 for_directive: PRAGMA OMP FOR for_clause_multi ENDLN •

    $default  reduce using rule 853 (for_directive)


State 388

  855 for_clause_multi: for_clause_multi ',' • for_clause

    NUM_THREADS   shift, and go to state 359
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    REDUCTION     shift, and go to state 290
    NOWAIT        shift, and go to state 382
    DEPEND        shift, and go to state 365
    LASTPRIVATE   shift, and go to state 383
    COLLAPSE      shift, and go to state 384
    SCHEDULE      shift, and go to state 385
    ORDERED       shift, and go to state 386

    for_clause            go to state 641
    depend_clause         go to state 390
    ordered_clause        go to state 391
    schedule_clause       go to state 392
    num_threads_clause    go to state 393
    private_clause        go to state 394
    first_private_clause  go to state 395
    last_private_clause   go to state 396
    reduction_clause      go to state 397
    collapse_clause       go to state 398


State 389

  854 for_clause_multi: for_clause_multi for_clause •

    $default  reduce using rule 854 (for_clause_multi)


State 390

  866 for_clause: depend_clause •

    $default  reduce using rule 866 (for_clause)


State 391

  857 for_clause: ordered_clause •

    $default  reduce using rule 857 (for_clause)


State 392

  859 for_clause: schedule_clause •

    $default  reduce using rule 859 (for_clause)


State 393

  858 for_clause: num_threads_clause •

    $default  reduce using rule 858 (for_clause)


State 394

  861 for_clause: private_clause •

    $default  reduce using rule 861 (for_clause)


State 395

  862 for_clause: first_private_clause •

    $default  reduce using rule 862 (for_clause)


State 396

  863 for_clause: last_private_clause •

    $default  reduce using rule 863 (for_clause)


State 397

  864 for_clause: reduction_clause •

    $default  reduce using rule 864 (for_clause)


State 398

  860 for_clause: collapse_clause •

    $default  reduce using rule 860 (for_clause)


State 399

  849 sections_clause: NOWAIT •

    $default  reduce using rule 849 (sections_clause)


State 400

  841 sections_directive: PRAGMA OMP SECTIONS sections_clause_multi ENDLN •

    $default  reduce using rule 841 (sections_directive)


State 401

  843 sections_clause_multi: sections_clause_multi ',' • sections_clause

    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    REDUCTION     shift, and go to state 290
    NOWAIT        shift, and go to state 399
    LASTPRIVATE   shift, and go to state 383

    sections_clause       go to state 642
    private_clause        go to state 403
    first_private_clause  go to state 404
    last_private_clause   go to state 405
    reduction_clause      go to state 406


State 402

  842 sections_clause_multi: sections_clause_multi sections_clause •

    $default  reduce using rule 842 (sections_clause_multi)


State 403

  845 sections_clause: private_clause •

    $default  reduce using rule 845 (sections_clause)


State 404

  846 sections_clause: first_private_clause •

    $default  reduce using rule 846 (sections_clause)


State 405

  847 sections_clause: last_private_clause •

    $default  reduce using rule 847 (sections_clause)


State 406

  848 sections_clause: reduction_clause •

    $default  reduce using rule 848 (sections_clause)


State 407

  967 linear_clause: LINEAR • '(' variable_list optional_expression ')'

    '('  shift, and go to state 643


State 408

  968 aligned_clause: ALIGNED • '(' variable_list optional_expression ')'

    '('  shift, and go to state 644


State 409

  928 safe_len_clause: SAFELEN • '(' expression ')'

    '('  shift, and go to state 645


State 410

  929 simd_len_clause: SIMDLEN • '(' I_CONSTANT ')'

    '('  shift, and go to state 646


State 411

  759 simd_directive: PRAGMA OMP SIMD simd_clause_multi ENDLN •

    $default  reduce using rule 759 (simd_directive)


State 412

  761 simd_clause_multi: simd_clause_multi ',' • simd_clause

    PRIVATE      shift, and go to state 361
    REDUCTION    shift, and go to state 290
    LASTPRIVATE  shift, and go to state 383
    LINEAR       shift, and go to state 407
    COLLAPSE     shift, and go to state 384
    ALIGNED      shift, and go to state 408
    SAFELEN      shift, and go to state 409
    SIMDLEN      shift, and go to state 410

    simd_clause          go to state 647
    safe_len_clause      go to state 414
    simd_len_clause      go to state 415
    private_clause       go to state 416
    last_private_clause  go to state 417
    reduction_clause     go to state 418
    linear_clause        go to state 419
    aligned_clause       go to state 420
    collapse_clause      go to state 421


State 413

  760 simd_clause_multi: simd_clause_multi simd_clause •

    $default  reduce using rule 760 (simd_clause_multi)


State 414

  763 simd_clause: safe_len_clause •

    $default  reduce using rule 763 (simd_clause)


State 415

  764 simd_clause: simd_len_clause •

    $default  reduce using rule 764 (simd_clause)


State 416

  765 simd_clause: private_clause •

    $default  reduce using rule 765 (simd_clause)


State 417

  768 simd_clause: last_private_clause •

    $default  reduce using rule 768 (simd_clause)


State 418

  769 simd_clause: reduction_clause •

    $default  reduce using rule 769 (simd_clause)


State 419

  766 simd_clause: linear_clause •

    $default  reduce using rule 766 (simd_clause)


State 420

  767 simd_clause: aligned_clause •

    $default  reduce using rule 767 (simd_clause)


State 421

  770 simd_clause: collapse_clause •

    $default  reduce using rule 770 (simd_clause)


State 422

  930 final_clause: FINAL • '(' expression ')'

    '('  shift, and go to state 648


State 423

  931 untied_clause: UNTIED •

    $default  reduce using rule 931 (untied_clause)


State 424

  932 mergeable_clause: MERGEABLE •

    $default  reduce using rule 932 (mergeable_clause)


State 425

  938 priority_clause: PRIORITY • '(' I_CONSTANT ')'

    '('  shift, and go to state 649


State 426

  772 task_directive: PRAGMA OMP TASK task_clause_multi ENDLN •

    $default  reduce using rule 772 (task_directive)


State 427

  774 task_clause_multi: task_clause_multi ',' • task_clause

    DEFAULT       shift, and go to state 360
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    SHARED        shift, and go to state 363
    DEPEND        shift, and go to state 365
    IF            shift, and go to state 366
    FINAL         shift, and go to state 422
    UNTIED        shift, and go to state 423
    MERGEABLE     shift, and go to state 424
    PRIORITY      shift, and go to state 425

    task_clause           go to state 650
    final_clause          go to state 429
    untied_clause         go to state 430
    mergeable_clause      go to state 431
    depend_clause         go to state 432
    priority_clause       go to state 433
    default_clause        go to state 434
    private_clause        go to state 435
    first_private_clause  go to state 436
    shared_clause         go to state 437
    if_clause             go to state 438


State 428

  773 task_clause_multi: task_clause_multi task_clause •

    $default  reduce using rule 773 (task_clause_multi)


State 429

  777 task_clause: final_clause •

    $default  reduce using rule 777 (task_clause)


State 430

  778 task_clause: untied_clause •

    $default  reduce using rule 778 (task_clause)


State 431

  779 task_clause: mergeable_clause •

    $default  reduce using rule 779 (task_clause)


State 432

  780 task_clause: depend_clause •

    $default  reduce using rule 780 (task_clause)


State 433

  781 task_clause: priority_clause •

    $default  reduce using rule 781 (task_clause)


State 434

  782 task_clause: default_clause •

    $default  reduce using rule 782 (task_clause)


State 435

  783 task_clause: private_clause •

    $default  reduce using rule 783 (task_clause)


State 436

  784 task_clause: first_private_clause •

    $default  reduce using rule 784 (task_clause)


State 437

  785 task_clause: shared_clause •

    $default  reduce using rule 785 (task_clause)


State 438

  776 task_clause: if_clause •

    $default  reduce using rule 776 (task_clause)


State 439

  839 single_clause: NOWAIT •

    $default  reduce using rule 839 (single_clause)


State 440

  949 copy_private_clause: COPYPRIVATE • '(' variable_list ')'

    '('  shift, and go to state 651


State 441

  832 single_directive: PRAGMA OMP SINGLE single_clause_multi ENDLN •

    $default  reduce using rule 832 (single_directive)


State 442

  834 single_clause_multi: single_clause_multi ',' • single_clause

    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    NOWAIT        shift, and go to state 439
    COPYPRIVATE   shift, and go to state 440

    single_clause         go to state 652
    copy_private_clause   go to state 444
    private_clause        go to state 445
    first_private_clause  go to state 446


State 443

  833 single_clause_multi: single_clause_multi single_clause •

    $default  reduce using rule 833 (single_clause_multi)


State 444

  836 single_clause: copy_private_clause •

    $default  reduce using rule 836 (single_clause)


State 445

  837 single_clause: private_clause •

    $default  reduce using rule 837 (single_clause)


State 446

  838 single_clause: first_private_clause •

    $default  reduce using rule 838 (single_clause)


State 447

  268 target_parallel_for_simd_directive: PRAGMA OMP TARGET PARALLEL FOR • SIMD target_parallel_for_simd_clause_multi ENDLN
  295 target_parallel_for_directive: PRAGMA OMP TARGET PARALLEL FOR • target_parallel_for_clause_multi ENDLN

    SIMD  shift, and go to state 653

    $default  reduce using rule 298 (target_parallel_for_clause_multi)

    target_parallel_for_clause_multi  go to state 654


State 448

  318 target_parallel_directive: PRAGMA OMP TARGET PARALLEL target_parallel_clause_multi • ENDLN
  319 target_parallel_clause_multi: target_parallel_clause_multi • target_parallel_clause
  320                             | target_parallel_clause_multi • ',' target_parallel_clause

    NUM_THREADS    shift, and go to state 359
    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 655
    DEPEND         shift, and go to state 365
    IF             shift, and go to state 366
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 656
    DEFAULTMAP     shift, and go to state 657
    PROC_BIND      shift, and go to state 367
    ENDLN          shift, and go to state 658
    ','            shift, and go to state 659

    target_parallel_clause  go to state 660
    device_clause           go to state 661
    map_clause              go to state 662
    depend_clause           go to state 663
    num_threads_clause      go to state 664
    default_clause          go to state 665
    private_clause          go to state 666
    first_private_clause    go to state 667
    shared_clause           go to state 668
    reduction_clause        go to state 669
    if_clause               go to state 670
    procbind_clause         go to state 671


State 449

  247 target_simd_directive: PRAGMA OMP TARGET SIMD target_simd_clause_multi • ENDLN
  248 target_simd_clause_multi: target_simd_clause_multi • target_simd_clause
  249                         | target_simd_clause_multi • ',' target_simd_clause

    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 672
    DEPEND         shift, and go to state 365
    LASTPRIVATE    shift, and go to state 383
    LINEAR         shift, and go to state 407
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    ALIGNED        shift, and go to state 408
    SAFELEN        shift, and go to state 409
    SIMDLEN        shift, and go to state 410
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 673
    DEFAULTMAP     shift, and go to state 674
    ENDLN          shift, and go to state 675
    ','            shift, and go to state 676

    target_simd_clause    go to state 677
    device_clause         go to state 678
    map_clause            go to state 679
    safe_len_clause       go to state 680
    simd_len_clause       go to state 681
    depend_clause         go to state 682
    private_clause        go to state 683
    first_private_clause  go to state 684
    last_private_clause   go to state 685
    reduction_clause      go to state 686
    linear_clause         go to state 687
    aligned_clause        go to state 688
    collapse_clause       go to state 689
    if_clause             go to state 690


State 450

  693 target_update_clause: NOWAIT •

    $default  reduce using rule 693 (target_update_clause)


State 451

  921 device_clause: DEVICE • '(' expression ')'

    '('  shift, and go to state 691


State 452

  919 motion_clause: TO • '(' variable_array_section_list ')'

    '('  shift, and go to state 692


State 453

  920 motion_clause: FROM • '(' variable_array_section_list ')'

    '('  shift, and go to state 693


State 454

  685 target_update_directive: PRAGMA OMP TARGET UPDATE target_update_clause_seq • ENDLN
  687 target_update_clause_seq: target_update_clause_seq • target_update_clause
  688                         | target_update_clause_seq • ',' target_update_clause

    NOWAIT  shift, and go to state 450
    DEPEND  shift, and go to state 365
    IF      shift, and go to state 366
    DEVICE  shift, and go to state 451
    TO      shift, and go to state 452
    FROM    shift, and go to state 453
    ENDLN   shift, and go to state 694
    ','     shift, and go to state 695

    target_update_clause  go to state 696
    motion_clause         go to state 456
    device_clause         go to state 457
    depend_clause         go to state 458
    if_clause             go to state 459


State 455

  686 target_update_clause_seq: target_update_clause •

    $default  reduce using rule 686 (target_update_clause_seq)


State 456

  689 target_update_clause: motion_clause •

    $default  reduce using rule 689 (target_update_clause)


State 457

  690 target_update_clause: device_clause •

    $default  reduce using rule 690 (target_update_clause)


State 458

  692 target_update_clause: depend_clause •

    $default  reduce using rule 692 (target_update_clause)


State 459

  691 target_update_clause: if_clause •

    $default  reduce using rule 691 (target_update_clause)


State 460

  709 target_data_directive: PRAGMA OMP TARGET DATA target_data_clause_multi • ENDLN
  710 target_data_clause_multi: target_data_clause_multi • target_data_clause
  711                         | target_data_clause_multi • ',' target_data_clause

    IF              shift, and go to state 366
    DEVICE          shift, and go to state 451
    MAP             shift, and go to state 466
    USE_DEVICE_PTR  shift, and go to state 697
    ENDLN           shift, and go to state 698
    ','             shift, and go to state 699

    target_data_clause  go to state 700
    device_clause       go to state 701
    map_clause          go to state 702
    if_clause           go to state 703


State 461

  890 omp_target_enter_data: PRAGMA OMP TARGET ENTER DATA • omp_target_enter_data_clause_multi ENDLN

    $default  reduce using rule 893 (omp_target_enter_data_clause_multi)

    omp_target_enter_data_clause_multi  go to state 704


State 462

  899 omp_target_exit_data: PRAGMA OMP TARGET EXIT DATA • omp_target_exit_data_clause_multi ENDLN

    $default  reduce using rule 902 (omp_target_exit_data_clause_multi)

    omp_target_exit_data_clause_multi  go to state 705


State 463

  397 target_teams_distribute_parallel_for_simd_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE • PARALLEL FOR SIMD target_teams_distribute_parallel_for_simd_clause_multi ENDLN
  459 target_teams_distribute_parallel_for_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE • PARALLEL FOR target_teams_distribute_parallel_for_clause_multi ENDLN
  505 target_teams_distribute_simd_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE • SIMD target_teams_distribute_simd_clause_multi ENDLN
  531 target_teams_distribute_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE • target_teams_distribute_clause_multi ENDLN

    PARALLEL  shift, and go to state 706
    SIMD      shift, and go to state 707

    $default  reduce using rule 534 (target_teams_distribute_clause_multi)

    target_teams_distribute_clause_multi  go to state 708


State 464

  587 target_teams_directive: PRAGMA OMP TARGET TEAMS target_teams_clause_multi • ENDLN
  588 target_teams_clause_multi: target_teams_clause_multi • target_teams_clause
  589                          | target_teams_clause_multi • ',' target_teams_clause

    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 709
    DEPEND         shift, and go to state 365
    IF             shift, and go to state 366
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 710
    DEFAULTMAP     shift, and go to state 711
    NUM_TEAMS      shift, and go to state 528
    THREAD_LIMIT   shift, and go to state 529
    ENDLN          shift, and go to state 712
    ','            shift, and go to state 713

    target_teams_clause   go to state 714
    num_teams_clause      go to state 715
    thread_limit_clause   go to state 716
    device_clause         go to state 717
    map_clause            go to state 718
    depend_clause         go to state 719
    default_clause        go to state 720
    private_clause        go to state 721
    first_private_clause  go to state 722
    shared_clause         go to state 723
    reduction_clause      go to state 724
    if_clause             go to state 725


State 465

  707 target_clause: NOWAIT •

    $default  reduce using rule 707 (target_clause)


State 466

  922 map_clause: MAP • '(' map_type ':' variable_array_section_list ')'
  923           | MAP • '(' variable_array_section_list ')'

    '('  shift, and go to state 726


State 467

  704 target_clause: IS_DEVICE_PTR • '(' variable_list ')'

    '('  shift, and go to state 727


State 468

  705 target_clause: DEFAULTMAP • '(' TOFROM ':' SCALAR ')'

    '('  shift, and go to state 728


State 469

  695 target_directive: PRAGMA OMP TARGET target_clause_multi ENDLN •

    $default  reduce using rule 695 (target_directive)


State 470

  697 target_clause_multi: target_clause_multi ',' • target_clause

    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    NOWAIT         shift, and go to state 465
    DEPEND         shift, and go to state 365
    IF             shift, and go to state 366
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 467
    DEFAULTMAP     shift, and go to state 468

    target_clause         go to state 729
    device_clause         go to state 472
    map_clause            go to state 473
    depend_clause         go to state 474
    private_clause        go to state 475
    first_private_clause  go to state 476
    if_clause             go to state 477


State 471

  696 target_clause_multi: target_clause_multi target_clause •

    $default  reduce using rule 696 (target_clause_multi)


State 472

  699 target_clause: device_clause •

    $default  reduce using rule 699 (target_clause)


State 473

  700 target_clause: map_clause •

    $default  reduce using rule 700 (target_clause)


State 474

  706 target_clause: depend_clause •

    $default  reduce using rule 706 (target_clause)


State 475

  702 target_clause: private_clause •

    $default  reduce using rule 702 (target_clause)


State 476

  703 target_clause: first_private_clause •

    $default  reduce using rule 703 (target_clause)


State 477

  701 target_clause: if_clause •

    $default  reduce using rule 701 (target_clause)


State 478

  946 seq_cst_clause: SEQ_CST •

    $default  reduce using rule 946 (seq_cst_clause)


State 479

  792 atomic_directive: PRAGMA OMP ATOMIC atomic_clause seq_cst_clause • ENDLN

    ENDLN  shift, and go to state 730


State 480

  948 region_phrase: '(' IDENTIFIER • ')'

    ')'  shift, and go to state 731


State 481

  795 critical_directive: PRAGMA OMP CRITICAL region_phrase ENDLN •

    $default  reduce using rule 795 (critical_directive)


State 482

  940 ordered_clause_opt: SIMD •

    $default  reduce using rule 940 (ordered_clause_opt)


State 483

  939 ordered_clause_opt: THREADS •

    $default  reduce using rule 939 (ordered_clause_opt)


State 484

  787 ordered_directive: PRAGMA OMP ORDERED ordered_clause_multi ENDLN •

    $default  reduce using rule 787 (ordered_directive)


State 485

  789 ordered_clause_multi: ordered_clause_multi ',' • ordered_clause_opt

    SIMD     shift, and go to state 482
    THREADS  shift, and go to state 483

    ordered_clause_opt  go to state 732


State 486

  788 ordered_clause_multi: ordered_clause_multi ordered_clause_opt •

    $default  reduce using rule 788 (ordered_clause_multi)


State 487

  384 declare_simd_directive: PRAGMA OMP DECLARE SIMD declare_simd_directive_clause_multi • ENDLN
  385 declare_simd_directive_clause_multi: declare_simd_directive_clause_multi • declare_simd_directive_clause
  386                                    | declare_simd_directive_clause_multi • ',' declare_simd_directive_clause

    LINEAR       shift, and go to state 407
    ALIGNED      shift, and go to state 408
    SIMDLEN      shift, and go to state 410
    UNIFORM      shift, and go to state 733
    INBRANCH     shift, and go to state 734
    NOTINBRANCH  shift, and go to state 735
    ENDLN        shift, and go to state 736
    ','          shift, and go to state 737

    declare_simd_directive_clause  go to state 738
    uniform_clause                 go to state 739
    simd_len_clause                go to state 740
    linear_clause                  go to state 741
    aligned_clause                 go to state 742


State 488

  966 reduction_clause: REDUCTION '(' • reduction_identifier ':' variable_list ')'

    IDENTIFIER   shift, and go to state 743
    AND_OPERAND  shift, and go to state 744
    OR_OPERAND   shift, and go to state 745
    MAX          shift, and go to state 746
    MIN          shift, and go to state 747
    '&'          shift, and go to state 748
    '*'          shift, and go to state 749
    '+'          shift, and go to state 750
    '-'          shift, and go to state 751
    '^'          shift, and go to state 752
    '|'          shift, and go to state 753

    reduction_identifier  go to state 754


State 489

  882 omp_declare_reduction: PRAGMA OMP DECLARE reduction_clause ENDLN •

    $default  reduce using rule 882 (omp_declare_reduction)


State 490

  337 taskloop_simd_directive: PRAGMA OMP TASKLOOP SIMD taskloop_simd_clause_multi • ENDLN
  338 taskloop_simd_clause_multi: taskloop_simd_clause_multi • taskloop_simd_clause
  339                           | taskloop_simd_clause_multi • ',' taskloop_simd_clause

    DEFAULT       shift, and go to state 360
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    SHARED        shift, and go to state 363
    REDUCTION     shift, and go to state 290
    LASTPRIVATE   shift, and go to state 383
    LINEAR        shift, and go to state 407
    COLLAPSE      shift, and go to state 384
    IF            shift, and go to state 366
    FINAL         shift, and go to state 422
    UNTIED        shift, and go to state 423
    MERGEABLE     shift, and go to state 424
    PRIORITY      shift, and go to state 425
    GRAINSIZE     shift, and go to state 491
    NUM_TASKS     shift, and go to state 492
    NOGROUP       shift, and go to state 755
    ALIGNED       shift, and go to state 408
    SAFELEN       shift, and go to state 409
    SIMDLEN       shift, and go to state 410
    ENDLN         shift, and go to state 756
    ','           shift, and go to state 757

    taskloop_simd_clause  go to state 758
    grainsize_clause      go to state 759
    num_tasks_clause      go to state 760
    safe_len_clause       go to state 761
    simd_len_clause       go to state 762
    final_clause          go to state 763
    untied_clause         go to state 764
    mergeable_clause      go to state 765
    priority_clause       go to state 766
    default_clause        go to state 767
    private_clause        go to state 768
    first_private_clause  go to state 769
    last_private_clause   go to state 770
    shared_clause         go to state 771
    reduction_clause      go to state 772
    linear_clause         go to state 773
    aligned_clause        go to state 774
    collapse_clause       go to state 775
    if_clause             go to state 776


State 491

  912 grainsize_clause: GRAINSIZE • '(' I_CONSTANT ')'

    '('  shift, and go to state 777


State 492

  913 num_tasks_clause: NUM_TASKS • '(' I_CONSTANT ')'

    '('  shift, and go to state 778


State 493

  378 taskloop_clause: NOGROUP •

    $default  reduce using rule 378 (taskloop_clause)


State 494

  361 taskloop_directive: PRAGMA OMP TASKLOOP taskloop_clause_multi ENDLN •

    $default  reduce using rule 361 (taskloop_directive)


State 495

  363 taskloop_clause_multi: taskloop_clause_multi ',' • taskloop_clause

    NUM_THREADS   shift, and go to state 359
    DEFAULT       shift, and go to state 360
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    SHARED        shift, and go to state 363
    REDUCTION     shift, and go to state 290
    DEPEND        shift, and go to state 365
    LASTPRIVATE   shift, and go to state 383
    COLLAPSE      shift, and go to state 384
    IF            shift, and go to state 366
    FINAL         shift, and go to state 422
    UNTIED        shift, and go to state 423
    MERGEABLE     shift, and go to state 424
    PRIORITY      shift, and go to state 425
    SCHEDULE      shift, and go to state 385
    GRAINSIZE     shift, and go to state 491
    NUM_TASKS     shift, and go to state 492
    NOGROUP       shift, and go to state 493

    taskloop_clause       go to state 779
    grainsize_clause      go to state 497
    num_tasks_clause      go to state 498
    final_clause          go to state 499
    untied_clause         go to state 500
    mergeable_clause      go to state 501
    depend_clause         go to state 502
    priority_clause       go to state 503
    schedule_clause       go to state 504
    num_threads_clause    go to state 505
    default_clause        go to state 506
    private_clause        go to state 507
    first_private_clause  go to state 508
    last_private_clause   go to state 509
    shared_clause         go to state 510
    reduction_clause      go to state 511
    collapse_clause       go to state 512
    if_clause             go to state 513


State 496

  362 taskloop_clause_multi: taskloop_clause_multi taskloop_clause •

    $default  reduce using rule 362 (taskloop_clause_multi)


State 497

  371 taskloop_clause: grainsize_clause •

    $default  reduce using rule 371 (taskloop_clause)


State 498

  372 taskloop_clause: num_tasks_clause •

    $default  reduce using rule 372 (taskloop_clause)


State 499

  374 taskloop_clause: final_clause •

    $default  reduce using rule 374 (taskloop_clause)


State 500

  376 taskloop_clause: untied_clause •

    $default  reduce using rule 376 (taskloop_clause)


State 501

  377 taskloop_clause: mergeable_clause •

    $default  reduce using rule 377 (taskloop_clause)


State 502

  382 taskloop_clause: depend_clause •

    $default  reduce using rule 382 (taskloop_clause)


State 503

  375 taskloop_clause: priority_clause •

    $default  reduce using rule 375 (taskloop_clause)


State 504

  380 taskloop_clause: schedule_clause •

    $default  reduce using rule 380 (taskloop_clause)


State 505

  379 taskloop_clause: num_threads_clause •

    $default  reduce using rule 379 (taskloop_clause)


State 506

  370 taskloop_clause: default_clause •

    $default  reduce using rule 370 (taskloop_clause)


State 507

  367 taskloop_clause: private_clause •

    $default  reduce using rule 367 (taskloop_clause)


State 508

  368 taskloop_clause: first_private_clause •

    $default  reduce using rule 368 (taskloop_clause)


State 509

  369 taskloop_clause: last_private_clause •

    $default  reduce using rule 369 (taskloop_clause)


State 510

  366 taskloop_clause: shared_clause •

    $default  reduce using rule 366 (taskloop_clause)


State 511

  381 taskloop_clause: reduction_clause •

    $default  reduce using rule 381 (taskloop_clause)


State 512

  373 taskloop_clause: collapse_clause •

    $default  reduce using rule 373 (taskloop_clause)


State 513

  365 taskloop_clause: if_clause •

    $default  reduce using rule 365 (taskloop_clause)


State 514

  606 distribute_parallel_for_simd_directive: PRAGMA OMP DISTRIBUTE PARALLEL FOR • SIMD distribute_parallel_for_simd_clause_multi ENDLN
  629 distribute_parallel_for_directive: PRAGMA OMP DISTRIBUTE PARALLEL FOR • distribute_parallel_for_clause_multi ENDLN

    SIMD  shift, and go to state 780

    $default  reduce using rule 632 (distribute_parallel_for_clause_multi)

    distribute_parallel_for_clause_multi  go to state 781


State 515

  648 distribute_simd_directive: PRAGMA OMP DISTRIBUTE SIMD distribute_simd_clause_multi • ENDLN
  649 distribute_simd_clause_multi: distribute_simd_clause_multi • distribute_simd_clause
  650                             | distribute_simd_clause_multi • ',' distribute_simd_clause

    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    REDUCTION      shift, and go to state 290
    LASTPRIVATE    shift, and go to state 383
    LINEAR         shift, and go to state 407
    COLLAPSE       shift, and go to state 384
    ALIGNED        shift, and go to state 408
    SAFELEN        shift, and go to state 409
    SIMDLEN        shift, and go to state 410
    DIST_SCHEDULE  shift, and go to state 516
    ENDLN          shift, and go to state 782
    ','            shift, and go to state 783

    distribute_simd_clause  go to state 784
    dist_schedule_clause    go to state 785
    safe_len_clause         go to state 786
    simd_len_clause         go to state 787
    private_clause          go to state 788
    first_private_clause    go to state 789
    last_private_clause     go to state 790
    reduction_clause        go to state 791
    linear_clause           go to state 792
    aligned_clause          go to state 793
    collapse_clause         go to state 794


State 516

  915 dist_schedule_clause: DIST_SCHEDULE • '(' STATIC ')'
  916                     | DIST_SCHEDULE • '(' STATIC ',' expression ')'

    '('  shift, and go to state 795


State 517

  663 distribute_directive: PRAGMA OMP DISTRIBUTE distribute_clause_multi ENDLN •

    $default  reduce using rule 663 (distribute_directive)


State 518

  665 distribute_clause_multi: distribute_clause_multi ',' • distribute_clause

    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    LASTPRIVATE    shift, and go to state 383
    COLLAPSE       shift, and go to state 384
    DIST_SCHEDULE  shift, and go to state 516

    distribute_clause     go to state 796
    dist_schedule_clause  go to state 520
    private_clause        go to state 521
    first_private_clause  go to state 522
    last_private_clause   go to state 523
    collapse_clause       go to state 524


State 519

  664 distribute_clause_multi: distribute_clause_multi distribute_clause •

    $default  reduce using rule 664 (distribute_clause_multi)


State 520

  667 distribute_clause: dist_schedule_clause •

    $default  reduce using rule 667 (distribute_clause)


State 521

  668 distribute_clause: private_clause •

    $default  reduce using rule 668 (distribute_clause)


State 522

  669 distribute_clause: first_private_clause •

    $default  reduce using rule 669 (distribute_clause)


State 523

  670 distribute_clause: last_private_clause •

    $default  reduce using rule 670 (distribute_clause)


State 524

  671 distribute_clause: collapse_clause •

    $default  reduce using rule 671 (distribute_clause)


State 525

  428 teams_distribute_parallel_for_simd_directive: PRAGMA OMP TEAMS DISTRIBUTE PARALLEL • FOR SIMD teams_distribute_parallel_for_simd_clause_multi ENDLN
  485 teams_distribute_parallel_for_directive: PRAGMA OMP TEAMS DISTRIBUTE PARALLEL • FOR teams_distribute_parallel_for_clause_multi ENDLN

    FOR  shift, and go to state 797


State 526

  553 teams_distribute_simd_directive: PRAGMA OMP TEAMS DISTRIBUTE SIMD • teams_distribute_simd_clause_multi ENDLN

    $default  reduce using rule 556 (teams_distribute_simd_clause_multi)

    teams_distribute_simd_clause_multi  go to state 798


State 527

  572 teams_distribute_directive: PRAGMA OMP TEAMS DISTRIBUTE teams_distribute_clause_multi • ENDLN
  573 teams_distribute_clause_multi: teams_distribute_clause_multi • teams_distribute_clause
  574                              | teams_distribute_clause_multi • ',' teams_distribute_clause

    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    REDUCTION      shift, and go to state 290
    LASTPRIVATE    shift, and go to state 383
    COLLAPSE       shift, and go to state 384
    NUM_TEAMS      shift, and go to state 528
    THREAD_LIMIT   shift, and go to state 529
    DIST_SCHEDULE  shift, and go to state 516
    ENDLN          shift, and go to state 799
    ','            shift, and go to state 800

    teams_distribute_clause  go to state 801
    dist_schedule_clause     go to state 802
    num_teams_clause         go to state 803
    thread_limit_clause      go to state 804
    default_clause           go to state 805
    private_clause           go to state 806
    first_private_clause     go to state 807
    last_private_clause      go to state 808
    shared_clause            go to state 809
    reduction_clause         go to state 810
    collapse_clause          go to state 811


State 528

  917 num_teams_clause: NUM_TEAMS • '(' expression ')'

    '('  shift, and go to state 812


State 529

  918 thread_limit_clause: THREAD_LIMIT • '(' expression ')'

    '('  shift, and go to state 813


State 530

  673 teams_directive: PRAGMA OMP TEAMS teams_clause_multi ENDLN •

    $default  reduce using rule 673 (teams_directive)


State 531

  675 teams_clause_multi: teams_clause_multi ',' • teams_clause

    DEFAULT       shift, and go to state 360
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    SHARED        shift, and go to state 363
    REDUCTION     shift, and go to state 290
    NUM_TEAMS     shift, and go to state 528
    THREAD_LIMIT  shift, and go to state 529

    teams_clause          go to state 814
    num_teams_clause      go to state 533
    thread_limit_clause   go to state 534
    default_clause        go to state 535
    private_clause        go to state 536
    first_private_clause  go to state 537
    shared_clause         go to state 538
    reduction_clause      go to state 539


State 532

  674 teams_clause_multi: teams_clause_multi teams_clause •

    $default  reduce using rule 674 (teams_clause_multi)


State 533

  677 teams_clause: num_teams_clause •

    $default  reduce using rule 677 (teams_clause)


State 534

  678 teams_clause: thread_limit_clause •

    $default  reduce using rule 678 (teams_clause)


State 535

  679 teams_clause: default_clause •

    $default  reduce using rule 679 (teams_clause)


State 536

  680 teams_clause: private_clause •

    $default  reduce using rule 680 (teams_clause)


State 537

  681 teams_clause: first_private_clause •

    $default  reduce using rule 681 (teams_clause)


State 538

  682 teams_clause: shared_clause •

    $default  reduce using rule 682 (teams_clause)


State 539

  683 teams_clause: reduction_clause •

    $default  reduce using rule 683 (teams_clause)


State 540

  984 variable_list: IDENTIFIER •

    $default  reduce using rule 984 (variable_list)


State 541

  985 variable_list: I_CONSTANT •

    $default  reduce using rule 985 (variable_list)


State 542

  887 flush_list: '(' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 815
    ','  shift, and go to state 816


State 543

  886 omp_flush: PRAGMA OMP FLUSH flush_list ENDLN •

    $default  reduce using rule 886 (omp_flush)


State 544

  908 omp_cancel: PRAGMA OMP CANCEL type_construct_clause ENDLN •

    $default  reduce using rule 908 (omp_cancel)


State 545

  910 omp_cancel: PRAGMA OMP CANCEL type_construct_clause ',' • if_clause ENDLN

    IF  shift, and go to state 366

    if_clause  go to state 817


State 546

  909 omp_cancel: PRAGMA OMP CANCEL type_construct_clause if_clause • ENDLN

    ENDLN  shift, and go to state 818


State 547

  911 omp_cancellation_point: PRAGMA OMP CANCELLATION POINT type_construct_clause • ENDLN

    ENDLN  shift, and go to state 819


State 548

  883 omp_threadprivate: PRAGMA OMP THREADPRIVATE '(' variable_list • ')' ENDLN
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 820
    ','  shift, and go to state 816


State 549

   37 unary_expression: _ALIGNOF '(' type_name ')' •

    $default  reduce using rule 37 (unary_expression)


State 550

   27 postfix_expression: '(' type_name ')' • '{' initializer_list '}'
   28                   | '(' type_name ')' • '{' initializer_list ',' '}'
   36 unary_expression: SIZEOF '(' type_name ')' •

    '{'  shift, and go to state 574

    $default  reduce using rule 36 (unary_expression)


State 551

   14 generic_selection: _GENERIC '(' assignment_expression ',' • generic_assoc_list ')'

    C_DEFAULT   shift, and go to state 821
    _ATOMIC     shift, and go to state 192
    CHAR        shift, and go to state 193
    CONST       shift, and go to state 194
    DOUBLE      shift, and go to state 195
    FLOAT       shift, and go to state 196
    INT         shift, and go to state 197
    LONG        shift, and go to state 198
    SHORT       shift, and go to state 199
    BOOL        shift, and go to state 200
    SIGNED      shift, and go to state 201
    STRUCT      shift, and go to state 202
    UNION       shift, and go to state 203
    UNSIGNED    shift, and go to state 204
    _BOOL       shift, and go to state 205
    _COMPLEX    shift, and go to state 206
    _IMAGINARY  shift, and go to state 207
    VOID        shift, and go to state 208
    RESTRICT    shift, and go to state 209
    VOLATILE    shift, and go to state 210

    generic_assoc_list         go to state 822
    generic_association        go to state 823
    type_specifier             go to state 212
    struct_or_union_specifier  go to state 213
    struct_or_union            go to state 214
    specifier_qualifier_list   go to state 215
    atomic_type_specifier      go to state 216
    type_qualifier             go to state 217
    type_name                  go to state 824


State 552

   27 postfix_expression: '(' type_name ')' • '{' initializer_list '}'
   28                   | '(' type_name ')' • '{' initializer_list ',' '}'

    '{'  shift, and go to state 574


State 553

  126 atomic_type_specifier: _ATOMIC '(' type_name • ')'

    ')'  shift, and go to state 825


State 554

  108 struct_or_union_specifier: struct_or_union IDENTIFIER '{' • struct_declaration_list '}'

    _ATOMIC         shift, and go to state 192
    _STATIC_ASSERT  shift, and go to state 555
    CHAR            shift, and go to state 193
    CONST           shift, and go to state 194
    DOUBLE          shift, and go to state 195
    FLOAT           shift, and go to state 196
    INT             shift, and go to state 197
    LONG            shift, and go to state 198
    SHORT           shift, and go to state 199
    BOOL            shift, and go to state 200
    SIGNED          shift, and go to state 201
    STRUCT          shift, and go to state 202
    UNION           shift, and go to state 203
    UNSIGNED        shift, and go to state 204
    _BOOL           shift, and go to state 205
    _COMPLEX        shift, and go to state 206
    _IMAGINARY      shift, and go to state 207
    VOID            shift, and go to state 208
    RESTRICT        shift, and go to state 209
    VOLATILE        shift, and go to state 210

    type_specifier             go to state 212
    struct_or_union_specifier  go to state 213
    struct_or_union            go to state 214
    struct_declaration_list    go to state 826
    struct_declaration         go to state 557
    specifier_qualifier_list   go to state 558
    atomic_type_specifier      go to state 216
    type_qualifier             go to state 217
    static_assert_declaration  go to state 559


State 555

  190 static_assert_declaration: _STATIC_ASSERT • '(' constant_expression ',' STRING_LITERAL ')' ';'

    '('  shift, and go to state 827


State 556

  107 struct_or_union_specifier: struct_or_union '{' struct_declaration_list • '}'
  113 struct_declaration_list: struct_declaration_list • struct_declaration

    _ATOMIC         shift, and go to state 192
    _STATIC_ASSERT  shift, and go to state 555
    CHAR            shift, and go to state 193
    CONST           shift, and go to state 194
    DOUBLE          shift, and go to state 195
    FLOAT           shift, and go to state 196
    INT             shift, and go to state 197
    LONG            shift, and go to state 198
    SHORT           shift, and go to state 199
    BOOL            shift, and go to state 200
    SIGNED          shift, and go to state 201
    STRUCT          shift, and go to state 202
    UNION           shift, and go to state 203
    UNSIGNED        shift, and go to state 204
    _BOOL           shift, and go to state 205
    _COMPLEX        shift, and go to state 206
    _IMAGINARY      shift, and go to state 207
    VOID            shift, and go to state 208
    RESTRICT        shift, and go to state 209
    VOLATILE        shift, and go to state 210
    '}'             shift, and go to state 828

    type_specifier             go to state 212
    struct_or_union_specifier  go to state 213
    struct_or_union            go to state 214
    struct_declaration         go to state 829
    specifier_qualifier_list   go to state 558
    atomic_type_specifier      go to state 216
    type_qualifier             go to state 217
    static_assert_declaration  go to state 559


State 557

  112 struct_declaration_list: struct_declaration •

    $default  reduce using rule 112 (struct_declaration_list)


State 558

  114 struct_declaration: specifier_qualifier_list • ';'
  115                   | specifier_qualifier_list • struct_declarator_list ';'

    IDENTIFIER  shift, and go to state 830
    '('         shift, and go to state 831
    ':'         shift, and go to state 832
    '*'         shift, and go to state 323
    ';'         shift, and go to state 833

    struct_declarator_list  go to state 834
    struct_declarator       go to state 835
    declarator              go to state 836
    direct_declarator       go to state 837
    pointer                 go to state 838


State 559

  116 struct_declaration: static_assert_declaration •

    $default  reduce using rule 116 (struct_declaration)


State 560

  176 direct_abstract_declarator: '(' ')' •

    $default  reduce using rule 176 (direct_abstract_declarator)


State 561

  159 direct_abstract_declarator: '(' abstract_declarator • ')'

    ')'  shift, and go to state 839


State 562

  162 direct_abstract_declarator: '[' C_STATIC • type_qualifier_list assignment_expression ']'
  163                           | '[' C_STATIC • assignment_expression ']'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    _ATOMIC         shift, and go to state 563
    FUNC_NAME       shift, and go to state 124
    CONST           shift, and go to state 194
    SIZEOF          shift, and go to state 125
    RESTRICT        shift, and go to state 209
    VOLATILE        shift, and go to state 210
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 840
    type_qualifier             go to state 567
    type_qualifier_list        go to state 841


State 563

  130 type_qualifier: _ATOMIC •

    $default  reduce using rule 130 (type_qualifier)


State 564

  160 direct_abstract_declarator: '[' ']' •

    $default  reduce using rule 160 (direct_abstract_declarator)


State 565

   39 unary_operator: '*' •
  161 direct_abstract_declarator: '[' '*' • ']'

    ']'  shift, and go to state 842

    $default  reduce using rule 39 (unary_operator)


State 566

  167 direct_abstract_declarator: '[' assignment_expression • ']'

    ']'  shift, and go to state 843


State 567

  150 type_qualifier_list: type_qualifier •

    $default  reduce using rule 150 (type_qualifier_list)


State 568

  151 type_qualifier_list: type_qualifier_list • type_qualifier
  164 direct_abstract_declarator: '[' type_qualifier_list • C_STATIC assignment_expression ']'
  165                           | '[' type_qualifier_list • assignment_expression ']'
  166                           | '[' type_qualifier_list • ']'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    C_STATIC        shift, and go to state 844
    _ALIGNOF        shift, and go to state 123
    _ATOMIC         shift, and go to state 563
    FUNC_NAME       shift, and go to state 124
    CONST           shift, and go to state 194
    SIZEOF          shift, and go to state 125
    RESTRICT        shift, and go to state 209
    VOLATILE        shift, and go to state 210
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    ']'             shift, and go to state 845
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 846
    type_qualifier             go to state 847


State 569

  148 pointer: '*' pointer •

    $default  reduce using rule 148 (pointer)


State 570

  146 pointer: '*' type_qualifier_list • pointer
  147        | '*' type_qualifier_list •
  151 type_qualifier_list: type_qualifier_list • type_qualifier

    _ATOMIC   shift, and go to state 563
    CONST     shift, and go to state 194
    RESTRICT  shift, and go to state 209
    VOLATILE  shift, and go to state 210
    '*'       shift, and go to state 323

    $default  reduce using rule 147 (pointer)

    type_qualifier  go to state 847
    pointer         go to state 848


State 571

  156 abstract_declarator: pointer direct_abstract_declarator •
  168 direct_abstract_declarator: direct_abstract_declarator • '[' ']'
  169                           | direct_abstract_declarator • '[' '*' ']'
  170                           | direct_abstract_declarator • '[' C_STATIC type_qualifier_list assignment_expression ']'
  171                           | direct_abstract_declarator • '[' C_STATIC assignment_expression ']'
  172                           | direct_abstract_declarator • '[' type_qualifier_list assignment_expression ']'
  173                           | direct_abstract_declarator • '[' type_qualifier_list C_STATIC assignment_expression ']'
  174                           | direct_abstract_declarator • '[' type_qualifier_list ']'
  175                           | direct_abstract_declarator • '[' assignment_expression ']'
  177                           | direct_abstract_declarator • '(' ')'

    '('  shift, and go to state 572
    '['  shift, and go to state 573

    $default  reduce using rule 156 (abstract_declarator)


State 572

  177 direct_abstract_declarator: direct_abstract_declarator '(' • ')'

    ')'  shift, and go to state 849


State 573

  168 direct_abstract_declarator: direct_abstract_declarator '[' • ']'
  169                           | direct_abstract_declarator '[' • '*' ']'
  170                           | direct_abstract_declarator '[' • C_STATIC type_qualifier_list assignment_expression ']'
  171                           | direct_abstract_declarator '[' • C_STATIC assignment_expression ']'
  172                           | direct_abstract_declarator '[' • type_qualifier_list assignment_expression ']'
  173                           | direct_abstract_declarator '[' • type_qualifier_list C_STATIC assignment_expression ']'
  174                           | direct_abstract_declarator '[' • type_qualifier_list ']'
  175                           | direct_abstract_declarator '[' • assignment_expression ']'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    C_STATIC        shift, and go to state 850
    _ALIGNOF        shift, and go to state 123
    _ATOMIC         shift, and go to state 563
    FUNC_NAME       shift, and go to state 124
    CONST           shift, and go to state 194
    SIZEOF          shift, and go to state 125
    RESTRICT        shift, and go to state 209
    VOLATILE        shift, and go to state 210
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    ']'             shift, and go to state 851
    '&'             shift, and go to state 130
    '*'             shift, and go to state 852
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 853
    type_qualifier             go to state 567
    type_qualifier_list        go to state 854


State 574

   27 postfix_expression: '(' type_name ')' '{' • initializer_list '}'
   28                   | '(' type_name ')' '{' • initializer_list ',' '}'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '['             shift, and go to state 855
    '.'             shift, and go to state 856
    '{'             shift, and go to state 857
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 858
    initializer                go to state 859
    initializer_list           go to state 860
    designation                go to state 861
    designator_list            go to state 862
    designator                 go to state 863


State 575

   45 cast_expression: '(' type_name ')' cast_expression •

    $default  reduce using rule 45 (cast_expression)


State 576

   22 postfix_expression: postfix_expression '(' argument_expression_list ')' •

    $default  reduce using rule 22 (postfix_expression)


State 577

   30 argument_expression_list: argument_expression_list ',' • assignment_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 864


State 578

   20 postfix_expression: postfix_expression '[' expression ']' •

    $default  reduce using rule 20 (postfix_expression)


State 579

   75 conditional_expression: logical_or_expression '?' expression ':' • conditional_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 865


State 580

  718 parallel_for_simd_directive: PRAGMA OMP PARALLEL FOR SIMD parallel_for_simd_clause_multi • ENDLN
  719 parallel_for_simd_clause_multi: parallel_for_simd_clause_multi • parallel_for_simd_clause
  720                               | parallel_for_simd_clause_multi • ',' parallel_for_simd_clause

    NUM_THREADS   shift, and go to state 359
    DEFAULT       shift, and go to state 360
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    SHARED        shift, and go to state 363
    COPYIN        shift, and go to state 364
    REDUCTION     shift, and go to state 290
    LASTPRIVATE   shift, and go to state 383
    LINEAR        shift, and go to state 407
    COLLAPSE      shift, and go to state 384
    IF            shift, and go to state 366
    SCHEDULE      shift, and go to state 385
    ORDERED       shift, and go to state 386
    ALIGNED       shift, and go to state 408
    SAFELEN       shift, and go to state 409
    SIMDLEN       shift, and go to state 410
    PROC_BIND     shift, and go to state 367
    ENDLN         shift, and go to state 866
    ','           shift, and go to state 867

    parallel_for_simd_clause  go to state 868
    safe_len_clause           go to state 869
    simd_len_clause           go to state 870
    ordered_clause            go to state 871
    schedule_clause           go to state 872
    num_threads_clause        go to state 873
    copyin_clause             go to state 874
    default_clause            go to state 875
    private_clause            go to state 876
    first_private_clause      go to state 877
    last_private_clause       go to state 878
    shared_clause             go to state 879
    reduction_clause          go to state 880
    linear_clause             go to state 881
    aligned_clause            go to state 882
    collapse_clause           go to state 883
    if_clause                 go to state 884
    procbind_clause           go to state 885


State 581

  814 parallel_for_directive: PRAGMA OMP PARALLEL FOR parallel_for_clause_multi ENDLN •

    $default  reduce using rule 814 (parallel_for_directive)


State 582

  816 parallel_for_clause_multi: parallel_for_clause_multi ',' • parallel_for_clause

    NUM_THREADS   shift, and go to state 359
    DEFAULT       shift, and go to state 360
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    SHARED        shift, and go to state 363
    COPYIN        shift, and go to state 364
    REDUCTION     shift, and go to state 290
    LASTPRIVATE   shift, and go to state 383
    COLLAPSE      shift, and go to state 384
    IF            shift, and go to state 366
    SCHEDULE      shift, and go to state 385
    ORDERED       shift, and go to state 386
    PROC_BIND     shift, and go to state 367

    parallel_for_clause   go to state 886
    ordered_clause        go to state 584
    schedule_clause       go to state 585
    num_threads_clause    go to state 586
    copyin_clause         go to state 587
    default_clause        go to state 588
    private_clause        go to state 589
    first_private_clause  go to state 590
    last_private_clause   go to state 591
    shared_clause         go to state 592
    reduction_clause      go to state 593
    collapse_clause       go to state 594
    if_clause             go to state 595
    procbind_clause       go to state 596


State 583

  815 parallel_for_clause_multi: parallel_for_clause_multi parallel_for_clause •

    $default  reduce using rule 815 (parallel_for_clause_multi)


State 584

  827 parallel_for_clause: ordered_clause •

    $default  reduce using rule 827 (parallel_for_clause)


State 585

  828 parallel_for_clause: schedule_clause •

    $default  reduce using rule 828 (parallel_for_clause)


State 586

  819 parallel_for_clause: num_threads_clause •

    $default  reduce using rule 819 (parallel_for_clause)


State 587

  820 parallel_for_clause: copyin_clause •

    $default  reduce using rule 820 (parallel_for_clause)


State 588

  822 parallel_for_clause: default_clause •

    $default  reduce using rule 822 (parallel_for_clause)


State 589

  823 parallel_for_clause: private_clause •

    $default  reduce using rule 823 (parallel_for_clause)


State 590

  824 parallel_for_clause: first_private_clause •

    $default  reduce using rule 824 (parallel_for_clause)


State 591

  830 parallel_for_clause: last_private_clause •

    $default  reduce using rule 830 (parallel_for_clause)


State 592

  825 parallel_for_clause: shared_clause •

    $default  reduce using rule 825 (parallel_for_clause)


State 593

  826 parallel_for_clause: reduction_clause •

    $default  reduce using rule 826 (parallel_for_clause)


State 594

  829 parallel_for_clause: collapse_clause •

    $default  reduce using rule 829 (parallel_for_clause)


State 595

  818 parallel_for_clause: if_clause •

    $default  reduce using rule 818 (parallel_for_clause)


State 596

  821 parallel_for_clause: procbind_clause •

    $default  reduce using rule 821 (parallel_for_clause)


State 597

  799 parallel_sections_directive: PRAGMA OMP PARALLEL SECTIONS parallel_sections_clause_multi ENDLN •

    $default  reduce using rule 799 (parallel_sections_directive)


State 598

  801 parallel_sections_clause_multi: parallel_sections_clause_multi ',' • parallel_sections_clause

    NUM_THREADS   shift, and go to state 359
    DEFAULT       shift, and go to state 360
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    SHARED        shift, and go to state 363
    COPYIN        shift, and go to state 364
    REDUCTION     shift, and go to state 290
    LASTPRIVATE   shift, and go to state 383
    IF            shift, and go to state 366
    PROC_BIND     shift, and go to state 367

    parallel_sections_clause  go to state 887
    num_threads_clause        go to state 600
    copyin_clause             go to state 601
    default_clause            go to state 602
    private_clause            go to state 603
    first_private_clause      go to state 604
    last_private_clause       go to state 605
    shared_clause             go to state 606
    reduction_clause          go to state 607
    if_clause                 go to state 608
    procbind_clause           go to state 609


State 599

  800 parallel_sections_clause_multi: parallel_sections_clause_multi parallel_sections_clause •

    $default  reduce using rule 800 (parallel_sections_clause_multi)


State 600

  804 parallel_sections_clause: num_threads_clause •

    $default  reduce using rule 804 (parallel_sections_clause)


State 601

  805 parallel_sections_clause: copyin_clause •

    $default  reduce using rule 805 (parallel_sections_clause)


State 602

  807 parallel_sections_clause: default_clause •

    $default  reduce using rule 807 (parallel_sections_clause)


State 603

  808 parallel_sections_clause: private_clause •

    $default  reduce using rule 808 (parallel_sections_clause)


State 604

  809 parallel_sections_clause: first_private_clause •

    $default  reduce using rule 809 (parallel_sections_clause)


State 605

  810 parallel_sections_clause: last_private_clause •

    $default  reduce using rule 810 (parallel_sections_clause)


State 606

  811 parallel_sections_clause: shared_clause •

    $default  reduce using rule 811 (parallel_sections_clause)


State 607

  812 parallel_sections_clause: reduction_clause •

    $default  reduce using rule 812 (parallel_sections_clause)


State 608

  803 parallel_sections_clause: if_clause •

    $default  reduce using rule 803 (parallel_sections_clause)


State 609

  806 parallel_sections_clause: procbind_clause •

    $default  reduce using rule 806 (parallel_sections_clause)


State 610

  958 num_threads_clause: NUM_THREADS '(' • I_CONSTANT ')'

    I_CONSTANT  shift, and go to state 888


State 611

  960 default_clause: DEFAULT '(' • SHARED ')'
  961               | DEFAULT '(' • NONE ')'

    SHARED  shift, and go to state 889
    NONE    shift, and go to state 890


State 612

  962 private_clause: PRIVATE '(' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 891


State 613

  963 first_private_clause: FIRSTPRIVATE '(' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 892


State 614

  965 shared_clause: SHARED '(' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 893


State 615

  959 copyin_clause: COPYIN '(' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 894


State 616

  933 depend_clause: DEPEND '(' • dependence_type ':' variable_array_section_list ')'

    IN     shift, and go to state 895
    OUT    shift, and go to state 896
    INOUT  shift, and go to state 897

    $default  reduce using rule 937 (dependence_type)

    dependence_type  go to state 898


State 617

  991 if_clause: IF '(' • expression ')'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 156
    expression                 go to state 899


State 618

  992 procbind_clause: PROC_BIND '(' • MASTER ')'
  993                | PROC_BIND '(' • CLOSE ')'
  994                | PROC_BIND '(' • SPREAD ')'

    MASTER  shift, and go to state 900
    CLOSE   shift, and go to state 901
    SPREAD  shift, and go to state 902


State 619

  870 parallel_clause_multi: parallel_clause_multi ',' parallel_clause •

    $default  reduce using rule 870 (parallel_clause_multi)


State 620

  756 for_simd_clause: NOWAIT •

    $default  reduce using rule 756 (for_simd_clause)


State 621

  740 for_simd_directive: PRAGMA OMP FOR SIMD for_simd_clause_multi ENDLN •

    $default  reduce using rule 740 (for_simd_directive)


State 622

  742 for_simd_clause_multi: for_simd_clause_multi ',' • for_simd_clause

    NUM_THREADS   shift, and go to state 359
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    REDUCTION     shift, and go to state 290
    NOWAIT        shift, and go to state 620
    DEPEND        shift, and go to state 365
    LASTPRIVATE   shift, and go to state 383
    LINEAR        shift, and go to state 407
    COLLAPSE      shift, and go to state 384
    SCHEDULE      shift, and go to state 385
    ORDERED       shift, and go to state 386
    ALIGNED       shift, and go to state 408
    SAFELEN       shift, and go to state 409
    SIMDLEN       shift, and go to state 410

    for_simd_clause       go to state 903
    safe_len_clause       go to state 624
    simd_len_clause       go to state 625
    depend_clause         go to state 626
    ordered_clause        go to state 627
    schedule_clause       go to state 628
    num_threads_clause    go to state 629
    private_clause        go to state 630
    first_private_clause  go to state 631
    last_private_clause   go to state 632
    reduction_clause      go to state 633
    linear_clause         go to state 634
    aligned_clause        go to state 635
    collapse_clause       go to state 636


State 623

  741 for_simd_clause_multi: for_simd_clause_multi for_simd_clause •

    $default  reduce using rule 741 (for_simd_clause_multi)


State 624

  746 for_simd_clause: safe_len_clause •

    $default  reduce using rule 746 (for_simd_clause)


State 625

  747 for_simd_clause: simd_len_clause •

    $default  reduce using rule 747 (for_simd_clause)


State 626

  757 for_simd_clause: depend_clause •

    $default  reduce using rule 757 (for_simd_clause)


State 627

  744 for_simd_clause: ordered_clause •

    $default  reduce using rule 744 (for_simd_clause)


State 628

  750 for_simd_clause: schedule_clause •

    $default  reduce using rule 750 (for_simd_clause)


State 629

  745 for_simd_clause: num_threads_clause •

    $default  reduce using rule 745 (for_simd_clause)


State 630

  752 for_simd_clause: private_clause •

    $default  reduce using rule 752 (for_simd_clause)


State 631

  753 for_simd_clause: first_private_clause •

    $default  reduce using rule 753 (for_simd_clause)


State 632

  754 for_simd_clause: last_private_clause •

    $default  reduce using rule 754 (for_simd_clause)


State 633

  755 for_simd_clause: reduction_clause •

    $default  reduce using rule 755 (for_simd_clause)


State 634

  748 for_simd_clause: linear_clause •

    $default  reduce using rule 748 (for_simd_clause)


State 635

  749 for_simd_clause: aligned_clause •

    $default  reduce using rule 749 (for_simd_clause)


State 636

  751 for_simd_clause: collapse_clause •

    $default  reduce using rule 751 (for_simd_clause)


State 637

  964 last_private_clause: LASTPRIVATE '(' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 904


State 638

  982 collapse_clause: COLLAPSE '(' • expression ')'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 156
    expression                 go to state 905


State 639

  952 schedule_clause: SCHEDULE '(' • schedule_kind ')'
  953                | SCHEDULE '(' • schedule_kind ',' I_CONSTANT ')'
  954                | SCHEDULE '(' • schedule_kind ',' IDENTIFIER ')'

    STATIC  shift, and go to state 906
    CROSS   shift, and go to state 907

    $default  reduce using rule 957 (schedule_kind)

    schedule_kind  go to state 908


State 640

  951 ordered_clause: ORDERED '(' • expression ')'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 156
    expression                 go to state 909


State 641

  855 for_clause_multi: for_clause_multi ',' for_clause •

    $default  reduce using rule 855 (for_clause_multi)


State 642

  843 sections_clause_multi: sections_clause_multi ',' sections_clause •

    $default  reduce using rule 843 (sections_clause_multi)


State 643

  967 linear_clause: LINEAR '(' • variable_list optional_expression ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 910


State 644

  968 aligned_clause: ALIGNED '(' • variable_list optional_expression ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 911


State 645

  928 safe_len_clause: SAFELEN '(' • expression ')'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 156
    expression                 go to state 912


State 646

  929 simd_len_clause: SIMDLEN '(' • I_CONSTANT ')'

    I_CONSTANT  shift, and go to state 913


State 647

  761 simd_clause_multi: simd_clause_multi ',' simd_clause •

    $default  reduce using rule 761 (simd_clause_multi)


State 648

  930 final_clause: FINAL '(' • expression ')'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 156
    expression                 go to state 914


State 649

  938 priority_clause: PRIORITY '(' • I_CONSTANT ')'

    I_CONSTANT  shift, and go to state 915


State 650

  774 task_clause_multi: task_clause_multi ',' task_clause •

    $default  reduce using rule 774 (task_clause_multi)


State 651

  949 copy_private_clause: COPYPRIVATE '(' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 916


State 652

  834 single_clause_multi: single_clause_multi ',' single_clause •

    $default  reduce using rule 834 (single_clause_multi)


State 653

  268 target_parallel_for_simd_directive: PRAGMA OMP TARGET PARALLEL FOR SIMD • target_parallel_for_simd_clause_multi ENDLN

    $default  reduce using rule 271 (target_parallel_for_simd_clause_multi)

    target_parallel_for_simd_clause_multi  go to state 917


State 654

  295 target_parallel_for_directive: PRAGMA OMP TARGET PARALLEL FOR target_parallel_for_clause_multi • ENDLN
  296 target_parallel_for_clause_multi: target_parallel_for_clause_multi • target_parallel_for_clause
  297                                 | target_parallel_for_clause_multi • ',' target_parallel_for_clause

    NUM_THREADS    shift, and go to state 359
    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 918
    DEPEND         shift, and go to state 365
    LASTPRIVATE    shift, and go to state 383
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    SCHEDULE       shift, and go to state 385
    ORDERED        shift, and go to state 386
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 919
    DEFAULTMAP     shift, and go to state 920
    PROC_BIND      shift, and go to state 367
    ENDLN          shift, and go to state 921
    ','            shift, and go to state 922

    target_parallel_for_clause  go to state 923
    device_clause               go to state 924
    map_clause                  go to state 925
    depend_clause               go to state 926
    ordered_clause              go to state 927
    schedule_clause             go to state 928
    num_threads_clause          go to state 929
    default_clause              go to state 930
    private_clause              go to state 931
    first_private_clause        go to state 932
    last_private_clause         go to state 933
    shared_clause               go to state 934
    reduction_clause            go to state 935
    collapse_clause             go to state 936
    if_clause                   go to state 937
    procbind_clause             go to state 938


State 655

  335 target_parallel_clause: NOWAIT •

    $default  reduce using rule 335 (target_parallel_clause)


State 656

  327 target_parallel_clause: IS_DEVICE_PTR • '(' variable_list ')'

    '('  shift, and go to state 939


State 657

  328 target_parallel_clause: DEFAULTMAP • '(' TOFROM ':' SCALAR ')'

    '('  shift, and go to state 940


State 658

  318 target_parallel_directive: PRAGMA OMP TARGET PARALLEL target_parallel_clause_multi ENDLN •

    $default  reduce using rule 318 (target_parallel_directive)


State 659

  320 target_parallel_clause_multi: target_parallel_clause_multi ',' • target_parallel_clause

    NUM_THREADS    shift, and go to state 359
    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 655
    DEPEND         shift, and go to state 365
    IF             shift, and go to state 366
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 656
    DEFAULTMAP     shift, and go to state 657
    PROC_BIND      shift, and go to state 367

    target_parallel_clause  go to state 941
    device_clause           go to state 661
    map_clause              go to state 662
    depend_clause           go to state 663
    num_threads_clause      go to state 664
    default_clause          go to state 665
    private_clause          go to state 666
    first_private_clause    go to state 667
    shared_clause           go to state 668
    reduction_clause        go to state 669
    if_clause               go to state 670
    procbind_clause         go to state 671


State 660

  319 target_parallel_clause_multi: target_parallel_clause_multi target_parallel_clause •

    $default  reduce using rule 319 (target_parallel_clause_multi)


State 661

  322 target_parallel_clause: device_clause •

    $default  reduce using rule 322 (target_parallel_clause)


State 662

  323 target_parallel_clause: map_clause •

    $default  reduce using rule 323 (target_parallel_clause)


State 663

  329 target_parallel_clause: depend_clause •

    $default  reduce using rule 329 (target_parallel_clause)


State 664

  330 target_parallel_clause: num_threads_clause •

    $default  reduce using rule 330 (target_parallel_clause)


State 665

  332 target_parallel_clause: default_clause •

    $default  reduce using rule 332 (target_parallel_clause)


State 666

  325 target_parallel_clause: private_clause •

    $default  reduce using rule 325 (target_parallel_clause)


State 667

  326 target_parallel_clause: first_private_clause •

    $default  reduce using rule 326 (target_parallel_clause)


State 668

  333 target_parallel_clause: shared_clause •

    $default  reduce using rule 333 (target_parallel_clause)


State 669

  334 target_parallel_clause: reduction_clause •

    $default  reduce using rule 334 (target_parallel_clause)


State 670

  324 target_parallel_clause: if_clause •

    $default  reduce using rule 324 (target_parallel_clause)


State 671

  331 target_parallel_clause: procbind_clause •

    $default  reduce using rule 331 (target_parallel_clause)


State 672

  266 target_simd_clause: NOWAIT •

    $default  reduce using rule 266 (target_simd_clause)


State 673

  256 target_simd_clause: IS_DEVICE_PTR • '(' variable_list ')'

    '('  shift, and go to state 942


State 674

  257 target_simd_clause: DEFAULTMAP • '(' TOFROM ':' SCALAR ')'

    '('  shift, and go to state 943


State 675

  247 target_simd_directive: PRAGMA OMP TARGET SIMD target_simd_clause_multi ENDLN •

    $default  reduce using rule 247 (target_simd_directive)


State 676

  249 target_simd_clause_multi: target_simd_clause_multi ',' • target_simd_clause

    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 672
    DEPEND         shift, and go to state 365
    LASTPRIVATE    shift, and go to state 383
    LINEAR         shift, and go to state 407
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    ALIGNED        shift, and go to state 408
    SAFELEN        shift, and go to state 409
    SIMDLEN        shift, and go to state 410
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 673
    DEFAULTMAP     shift, and go to state 674

    target_simd_clause    go to state 944
    device_clause         go to state 678
    map_clause            go to state 679
    safe_len_clause       go to state 680
    simd_len_clause       go to state 681
    depend_clause         go to state 682
    private_clause        go to state 683
    first_private_clause  go to state 684
    last_private_clause   go to state 685
    reduction_clause      go to state 686
    linear_clause         go to state 687
    aligned_clause        go to state 688
    collapse_clause       go to state 689
    if_clause             go to state 690


State 677

  248 target_simd_clause_multi: target_simd_clause_multi target_simd_clause •

    $default  reduce using rule 248 (target_simd_clause_multi)


State 678

  251 target_simd_clause: device_clause •

    $default  reduce using rule 251 (target_simd_clause)


State 679

  252 target_simd_clause: map_clause •

    $default  reduce using rule 252 (target_simd_clause)


State 680

  259 target_simd_clause: safe_len_clause •

    $default  reduce using rule 259 (target_simd_clause)


State 681

  260 target_simd_clause: simd_len_clause •

    $default  reduce using rule 260 (target_simd_clause)


State 682

  258 target_simd_clause: depend_clause •

    $default  reduce using rule 258 (target_simd_clause)


State 683

  254 target_simd_clause: private_clause •

    $default  reduce using rule 254 (target_simd_clause)


State 684

  255 target_simd_clause: first_private_clause •

    $default  reduce using rule 255 (target_simd_clause)


State 685

  263 target_simd_clause: last_private_clause •

    $default  reduce using rule 263 (target_simd_clause)


State 686

  264 target_simd_clause: reduction_clause •

    $default  reduce using rule 264 (target_simd_clause)


State 687

  261 target_simd_clause: linear_clause •

    $default  reduce using rule 261 (target_simd_clause)


State 688

  262 target_simd_clause: aligned_clause •

    $default  reduce using rule 262 (target_simd_clause)


State 689

  265 target_simd_clause: collapse_clause •

    $default  reduce using rule 265 (target_simd_clause)


State 690

  253 target_simd_clause: if_clause •

    $default  reduce using rule 253 (target_simd_clause)


State 691

  921 device_clause: DEVICE '(' • expression ')'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 156
    expression                 go to state 945


State 692

  919 motion_clause: TO '(' • variable_array_section_list ')'

    IDENTIFIER  shift, and go to state 946

    variable_array_section_list  go to state 947
    array_section                go to state 948


State 693

  920 motion_clause: FROM '(' • variable_array_section_list ')'

    IDENTIFIER  shift, and go to state 946

    variable_array_section_list  go to state 949
    array_section                go to state 948


State 694

  685 target_update_directive: PRAGMA OMP TARGET UPDATE target_update_clause_seq ENDLN •

    $default  reduce using rule 685 (target_update_directive)


State 695

  688 target_update_clause_seq: target_update_clause_seq ',' • target_update_clause

    NOWAIT  shift, and go to state 450
    DEPEND  shift, and go to state 365
    IF      shift, and go to state 366
    DEVICE  shift, and go to state 451
    TO      shift, and go to state 452
    FROM    shift, and go to state 453

    target_update_clause  go to state 950
    motion_clause         go to state 456
    device_clause         go to state 457
    depend_clause         go to state 458
    if_clause             go to state 459


State 696

  687 target_update_clause_seq: target_update_clause_seq target_update_clause •

    $default  reduce using rule 687 (target_update_clause_seq)


State 697

  716 target_data_clause: USE_DEVICE_PTR • '(' variable_list ')'

    '('  shift, and go to state 951


State 698

  709 target_data_directive: PRAGMA OMP TARGET DATA target_data_clause_multi ENDLN •

    $default  reduce using rule 709 (target_data_directive)


State 699

  711 target_data_clause_multi: target_data_clause_multi ',' • target_data_clause

    IF              shift, and go to state 366
    DEVICE          shift, and go to state 451
    MAP             shift, and go to state 466
    USE_DEVICE_PTR  shift, and go to state 697

    target_data_clause  go to state 952
    device_clause       go to state 701
    map_clause          go to state 702
    if_clause           go to state 703


State 700

  710 target_data_clause_multi: target_data_clause_multi target_data_clause •

    $default  reduce using rule 710 (target_data_clause_multi)


State 701

  713 target_data_clause: device_clause •

    $default  reduce using rule 713 (target_data_clause)


State 702

  714 target_data_clause: map_clause •

    $default  reduce using rule 714 (target_data_clause)


State 703

  715 target_data_clause: if_clause •

    $default  reduce using rule 715 (target_data_clause)


State 704

  890 omp_target_enter_data: PRAGMA OMP TARGET ENTER DATA omp_target_enter_data_clause_multi • ENDLN
  891 omp_target_enter_data_clause_multi: omp_target_enter_data_clause_multi • omp_target_enter_data_clause
  892                                   | omp_target_enter_data_clause_multi • ',' omp_target_enter_data_clause

    NOWAIT  shift, and go to state 953
    DEPEND  shift, and go to state 365
    IF      shift, and go to state 366
    DEVICE  shift, and go to state 451
    MAP     shift, and go to state 466
    ENDLN   shift, and go to state 954
    ','     shift, and go to state 955

    omp_target_enter_data_clause  go to state 956
    device_clause                 go to state 957
    map_clause                    go to state 958
    depend_clause                 go to state 959
    if_clause                     go to state 960


State 705

  899 omp_target_exit_data: PRAGMA OMP TARGET EXIT DATA omp_target_exit_data_clause_multi • ENDLN
  900 omp_target_exit_data_clause_multi: omp_target_exit_data_clause_multi • omp_target_exit_data_clause
  901                                  | omp_target_exit_data_clause_multi • ',' omp_target_exit_data_clause

    NOWAIT  shift, and go to state 961
    DEPEND  shift, and go to state 365
    IF      shift, and go to state 366
    DEVICE  shift, and go to state 451
    MAP     shift, and go to state 466
    ENDLN   shift, and go to state 962
    ','     shift, and go to state 963

    omp_target_exit_data_clause  go to state 964
    device_clause                go to state 965
    map_clause                   go to state 966
    depend_clause                go to state 967
    if_clause                    go to state 968


State 706

  397 target_teams_distribute_parallel_for_simd_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE PARALLEL • FOR SIMD target_teams_distribute_parallel_for_simd_clause_multi ENDLN
  459 target_teams_distribute_parallel_for_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE PARALLEL • FOR target_teams_distribute_parallel_for_clause_multi ENDLN

    FOR  shift, and go to state 969


State 707

  505 target_teams_distribute_simd_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE SIMD • target_teams_distribute_simd_clause_multi ENDLN

    $default  reduce using rule 508 (target_teams_distribute_simd_clause_multi)

    target_teams_distribute_simd_clause_multi  go to state 970


State 708

  531 target_teams_distribute_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE target_teams_distribute_clause_multi • ENDLN
  532 target_teams_distribute_clause_multi: target_teams_distribute_clause_multi • target_teams_distribute_clause
  533                                     | target_teams_distribute_clause_multi • ',' target_teams_distribute_clause

    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 971
    DEPEND         shift, and go to state 365
    LASTPRIVATE    shift, and go to state 383
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 972
    DEFAULTMAP     shift, and go to state 973
    NUM_TEAMS      shift, and go to state 528
    THREAD_LIMIT   shift, and go to state 529
    DIST_SCHEDULE  shift, and go to state 516
    ENDLN          shift, and go to state 974
    ','            shift, and go to state 975

    target_teams_distribute_clause  go to state 976
    dist_schedule_clause            go to state 977
    num_teams_clause                go to state 978
    thread_limit_clause             go to state 979
    device_clause                   go to state 980
    map_clause                      go to state 981
    depend_clause                   go to state 982
    default_clause                  go to state 983
    private_clause                  go to state 984
    first_private_clause            go to state 985
    last_private_clause             go to state 986
    shared_clause                   go to state 987
    reduction_clause                go to state 988
    collapse_clause                 go to state 989
    if_clause                       go to state 990


State 709

  604 target_teams_clause: NOWAIT •

    $default  reduce using rule 604 (target_teams_clause)


State 710

  596 target_teams_clause: IS_DEVICE_PTR • '(' variable_list ')'

    '('  shift, and go to state 991


State 711

  597 target_teams_clause: DEFAULTMAP • '(' TOFROM ':' SCALAR ')'

    '('  shift, and go to state 992


State 712

  587 target_teams_directive: PRAGMA OMP TARGET TEAMS target_teams_clause_multi ENDLN •

    $default  reduce using rule 587 (target_teams_directive)


State 713

  589 target_teams_clause_multi: target_teams_clause_multi ',' • target_teams_clause

    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 709
    DEPEND         shift, and go to state 365
    IF             shift, and go to state 366
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 710
    DEFAULTMAP     shift, and go to state 711
    NUM_TEAMS      shift, and go to state 528
    THREAD_LIMIT   shift, and go to state 529

    target_teams_clause   go to state 993
    num_teams_clause      go to state 715
    thread_limit_clause   go to state 716
    device_clause         go to state 717
    map_clause            go to state 718
    depend_clause         go to state 719
    default_clause        go to state 720
    private_clause        go to state 721
    first_private_clause  go to state 722
    shared_clause         go to state 723
    reduction_clause      go to state 724
    if_clause             go to state 725


State 714

  588 target_teams_clause_multi: target_teams_clause_multi target_teams_clause •

    $default  reduce using rule 588 (target_teams_clause_multi)


State 715

  599 target_teams_clause: num_teams_clause •

    $default  reduce using rule 599 (target_teams_clause)


State 716

  600 target_teams_clause: thread_limit_clause •

    $default  reduce using rule 600 (target_teams_clause)


State 717

  591 target_teams_clause: device_clause •

    $default  reduce using rule 591 (target_teams_clause)


State 718

  592 target_teams_clause: map_clause •

    $default  reduce using rule 592 (target_teams_clause)


State 719

  598 target_teams_clause: depend_clause •

    $default  reduce using rule 598 (target_teams_clause)


State 720

  601 target_teams_clause: default_clause •

    $default  reduce using rule 601 (target_teams_clause)


State 721

  594 target_teams_clause: private_clause •

    $default  reduce using rule 594 (target_teams_clause)


State 722

  595 target_teams_clause: first_private_clause •

    $default  reduce using rule 595 (target_teams_clause)


State 723

  602 target_teams_clause: shared_clause •

    $default  reduce using rule 602 (target_teams_clause)


State 724

  603 target_teams_clause: reduction_clause •

    $default  reduce using rule 603 (target_teams_clause)


State 725

  593 target_teams_clause: if_clause •

    $default  reduce using rule 593 (target_teams_clause)


State 726

  922 map_clause: MAP '(' • map_type ':' variable_array_section_list ')'
  923           | MAP '(' • variable_array_section_list ')'

    IDENTIFIER  shift, and go to state 946
    TO          shift, and go to state 994
    FROM        shift, and go to state 995
    ALLOC       shift, and go to state 996
    TOFROM      shift, and go to state 997

    map_type                     go to state 998
    variable_array_section_list  go to state 999
    array_section                go to state 948


State 727

  704 target_clause: IS_DEVICE_PTR '(' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 1000


State 728

  705 target_clause: DEFAULTMAP '(' • TOFROM ':' SCALAR ')'

    TOFROM  shift, and go to state 1001


State 729

  697 target_clause_multi: target_clause_multi ',' target_clause •

    $default  reduce using rule 697 (target_clause_multi)


State 730

  792 atomic_directive: PRAGMA OMP ATOMIC atomic_clause seq_cst_clause ENDLN •

    $default  reduce using rule 792 (atomic_directive)


State 731

  948 region_phrase: '(' IDENTIFIER ')' •

    $default  reduce using rule 948 (region_phrase)


State 732

  789 ordered_clause_multi: ordered_clause_multi ',' ordered_clause_opt •

    $default  reduce using rule 789 (ordered_clause_multi)


State 733

  914 uniform_clause: UNIFORM • '(' argument_expression_list ')'

    '('  shift, and go to state 1002


State 734

  392 declare_simd_directive_clause: INBRANCH •

    $default  reduce using rule 392 (declare_simd_directive_clause)


State 735

  393 declare_simd_directive_clause: NOTINBRANCH •

    $default  reduce using rule 393 (declare_simd_directive_clause)


State 736

  384 declare_simd_directive: PRAGMA OMP DECLARE SIMD declare_simd_directive_clause_multi ENDLN •

    $default  reduce using rule 384 (declare_simd_directive)


State 737

  386 declare_simd_directive_clause_multi: declare_simd_directive_clause_multi ',' • declare_simd_directive_clause

    LINEAR       shift, and go to state 407
    ALIGNED      shift, and go to state 408
    SIMDLEN      shift, and go to state 410
    UNIFORM      shift, and go to state 733
    INBRANCH     shift, and go to state 734
    NOTINBRANCH  shift, and go to state 735

    declare_simd_directive_clause  go to state 1003
    uniform_clause                 go to state 739
    simd_len_clause                go to state 740
    linear_clause                  go to state 741
    aligned_clause                 go to state 742


State 738

  385 declare_simd_directive_clause_multi: declare_simd_directive_clause_multi declare_simd_directive_clause •

    $default  reduce using rule 385 (declare_simd_directive_clause_multi)


State 739

  391 declare_simd_directive_clause: uniform_clause •

    $default  reduce using rule 391 (declare_simd_directive_clause)


State 740

  388 declare_simd_directive_clause: simd_len_clause •

    $default  reduce using rule 388 (declare_simd_directive_clause)


State 741

  389 declare_simd_directive_clause: linear_clause •

    $default  reduce using rule 389 (declare_simd_directive_clause)


State 742

  390 declare_simd_directive_clause: aligned_clause •

    $default  reduce using rule 390 (declare_simd_directive_clause)


State 743

  995 reduction_identifier: IDENTIFIER •

    $default  reduce using rule 995 (reduction_identifier)


State 744

  1002 reduction_identifier: AND_OPERAND •

    $default  reduce using rule 1002 (reduction_identifier)


State 745

  1003 reduction_identifier: OR_OPERAND •

    $default  reduce using rule 1003 (reduction_identifier)


State 746

  1005 reduction_identifier: MAX •

    $default  reduce using rule 1005 (reduction_identifier)


State 747

  1004 reduction_identifier: MIN •

    $default  reduce using rule 1004 (reduction_identifier)


State 748

  999 reduction_identifier: '&' •

    $default  reduce using rule 999 (reduction_identifier)


State 749

  997 reduction_identifier: '*' •

    $default  reduce using rule 997 (reduction_identifier)


State 750

  996 reduction_identifier: '+' •

    $default  reduce using rule 996 (reduction_identifier)


State 751

  998 reduction_identifier: '-' •

    $default  reduce using rule 998 (reduction_identifier)


State 752

  1000 reduction_identifier: '^' •

    $default  reduce using rule 1000 (reduction_identifier)


State 753

  1001 reduction_identifier: '|' •

    $default  reduce using rule 1001 (reduction_identifier)


State 754

  966 reduction_clause: REDUCTION '(' reduction_identifier • ':' variable_list ')'

    ':'  shift, and go to state 1004


State 755

  354 taskloop_simd_clause: NOGROUP •

    $default  reduce using rule 354 (taskloop_simd_clause)


State 756

  337 taskloop_simd_directive: PRAGMA OMP TASKLOOP SIMD taskloop_simd_clause_multi ENDLN •

    $default  reduce using rule 337 (taskloop_simd_directive)


State 757

  339 taskloop_simd_clause_multi: taskloop_simd_clause_multi ',' • taskloop_simd_clause

    DEFAULT       shift, and go to state 360
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    SHARED        shift, and go to state 363
    REDUCTION     shift, and go to state 290
    LASTPRIVATE   shift, and go to state 383
    LINEAR        shift, and go to state 407
    COLLAPSE      shift, and go to state 384
    IF            shift, and go to state 366
    FINAL         shift, and go to state 422
    UNTIED        shift, and go to state 423
    MERGEABLE     shift, and go to state 424
    PRIORITY      shift, and go to state 425
    GRAINSIZE     shift, and go to state 491
    NUM_TASKS     shift, and go to state 492
    NOGROUP       shift, and go to state 755
    ALIGNED       shift, and go to state 408
    SAFELEN       shift, and go to state 409
    SIMDLEN       shift, and go to state 410

    taskloop_simd_clause  go to state 1005
    grainsize_clause      go to state 759
    num_tasks_clause      go to state 760
    safe_len_clause       go to state 761
    simd_len_clause       go to state 762
    final_clause          go to state 763
    untied_clause         go to state 764
    mergeable_clause      go to state 765
    priority_clause       go to state 766
    default_clause        go to state 767
    private_clause        go to state 768
    first_private_clause  go to state 769
    last_private_clause   go to state 770
    shared_clause         go to state 771
    reduction_clause      go to state 772
    linear_clause         go to state 773
    aligned_clause        go to state 774
    collapse_clause       go to state 775
    if_clause             go to state 776


State 758

  338 taskloop_simd_clause_multi: taskloop_simd_clause_multi taskloop_simd_clause •

    $default  reduce using rule 338 (taskloop_simd_clause_multi)


State 759

  347 taskloop_simd_clause: grainsize_clause •

    $default  reduce using rule 347 (taskloop_simd_clause)


State 760

  348 taskloop_simd_clause: num_tasks_clause •

    $default  reduce using rule 348 (taskloop_simd_clause)


State 761

  355 taskloop_simd_clause: safe_len_clause •

    $default  reduce using rule 355 (taskloop_simd_clause)


State 762

  356 taskloop_simd_clause: simd_len_clause •

    $default  reduce using rule 356 (taskloop_simd_clause)


State 763

  350 taskloop_simd_clause: final_clause •

    $default  reduce using rule 350 (taskloop_simd_clause)


State 764

  352 taskloop_simd_clause: untied_clause •

    $default  reduce using rule 352 (taskloop_simd_clause)


State 765

  353 taskloop_simd_clause: mergeable_clause •

    $default  reduce using rule 353 (taskloop_simd_clause)


State 766

  351 taskloop_simd_clause: priority_clause •

    $default  reduce using rule 351 (taskloop_simd_clause)


State 767

  346 taskloop_simd_clause: default_clause •

    $default  reduce using rule 346 (taskloop_simd_clause)


State 768

  343 taskloop_simd_clause: private_clause •

    $default  reduce using rule 343 (taskloop_simd_clause)


State 769

  344 taskloop_simd_clause: first_private_clause •

    $default  reduce using rule 344 (taskloop_simd_clause)


State 770

  345 taskloop_simd_clause: last_private_clause •

    $default  reduce using rule 345 (taskloop_simd_clause)


State 771

  342 taskloop_simd_clause: shared_clause •

    $default  reduce using rule 342 (taskloop_simd_clause)


State 772

  359 taskloop_simd_clause: reduction_clause •

    $default  reduce using rule 359 (taskloop_simd_clause)


State 773

  357 taskloop_simd_clause: linear_clause •

    $default  reduce using rule 357 (taskloop_simd_clause)


State 774

  358 taskloop_simd_clause: aligned_clause •

    $default  reduce using rule 358 (taskloop_simd_clause)


State 775

  349 taskloop_simd_clause: collapse_clause •

    $default  reduce using rule 349 (taskloop_simd_clause)


State 776

  341 taskloop_simd_clause: if_clause •

    $default  reduce using rule 341 (taskloop_simd_clause)


State 777

  912 grainsize_clause: GRAINSIZE '(' • I_CONSTANT ')'

    I_CONSTANT  shift, and go to state 1006


State 778

  913 num_tasks_clause: NUM_TASKS '(' • I_CONSTANT ')'

    I_CONSTANT  shift, and go to state 1007


State 779

  363 taskloop_clause_multi: taskloop_clause_multi ',' taskloop_clause •

    $default  reduce using rule 363 (taskloop_clause_multi)


State 780

  606 distribute_parallel_for_simd_directive: PRAGMA OMP DISTRIBUTE PARALLEL FOR SIMD • distribute_parallel_for_simd_clause_multi ENDLN

    $default  reduce using rule 609 (distribute_parallel_for_simd_clause_multi)

    distribute_parallel_for_simd_clause_multi  go to state 1008


State 781

  629 distribute_parallel_for_directive: PRAGMA OMP DISTRIBUTE PARALLEL FOR distribute_parallel_for_clause_multi • ENDLN
  630 distribute_parallel_for_clause_multi: distribute_parallel_for_clause_multi • distribute_parallel_for_clause
  631                                     | distribute_parallel_for_clause_multi • ',' distribute_parallel_for_clause

    NUM_THREADS    shift, and go to state 359
    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    COPYIN         shift, and go to state 364
    REDUCTION      shift, and go to state 290
    LASTPRIVATE    shift, and go to state 383
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    SCHEDULE       shift, and go to state 385
    ORDERED        shift, and go to state 386
    DIST_SCHEDULE  shift, and go to state 516
    PROC_BIND      shift, and go to state 367
    ENDLN          shift, and go to state 1009
    ','            shift, and go to state 1010

    distribute_parallel_for_clause  go to state 1011
    dist_schedule_clause            go to state 1012
    ordered_clause                  go to state 1013
    schedule_clause                 go to state 1014
    num_threads_clause              go to state 1015
    copyin_clause                   go to state 1016
    default_clause                  go to state 1017
    private_clause                  go to state 1018
    first_private_clause            go to state 1019
    last_private_clause             go to state 1020
    shared_clause                   go to state 1021
    reduction_clause                go to state 1022
    collapse_clause                 go to state 1023
    if_clause                       go to state 1024
    procbind_clause                 go to state 1025


State 782

  648 distribute_simd_directive: PRAGMA OMP DISTRIBUTE SIMD distribute_simd_clause_multi ENDLN •

    $default  reduce using rule 648 (distribute_simd_directive)


State 783

  650 distribute_simd_clause_multi: distribute_simd_clause_multi ',' • distribute_simd_clause

    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    REDUCTION      shift, and go to state 290
    LASTPRIVATE    shift, and go to state 383
    LINEAR         shift, and go to state 407
    COLLAPSE       shift, and go to state 384
    ALIGNED        shift, and go to state 408
    SAFELEN        shift, and go to state 409
    SIMDLEN        shift, and go to state 410
    DIST_SCHEDULE  shift, and go to state 516

    distribute_simd_clause  go to state 1026
    dist_schedule_clause    go to state 785
    safe_len_clause         go to state 786
    simd_len_clause         go to state 787
    private_clause          go to state 788
    first_private_clause    go to state 789
    last_private_clause     go to state 790
    reduction_clause        go to state 791
    linear_clause           go to state 792
    aligned_clause          go to state 793
    collapse_clause         go to state 794


State 784

  649 distribute_simd_clause_multi: distribute_simd_clause_multi distribute_simd_clause •

    $default  reduce using rule 649 (distribute_simd_clause_multi)


State 785

  652 distribute_simd_clause: dist_schedule_clause •

    $default  reduce using rule 652 (distribute_simd_clause)


State 786

  657 distribute_simd_clause: safe_len_clause •

    $default  reduce using rule 657 (distribute_simd_clause)


State 787

  658 distribute_simd_clause: simd_len_clause •

    $default  reduce using rule 658 (distribute_simd_clause)


State 788

  653 distribute_simd_clause: private_clause •

    $default  reduce using rule 653 (distribute_simd_clause)


State 789

  654 distribute_simd_clause: first_private_clause •

    $default  reduce using rule 654 (distribute_simd_clause)


State 790

  655 distribute_simd_clause: last_private_clause •

    $default  reduce using rule 655 (distribute_simd_clause)


State 791

  661 distribute_simd_clause: reduction_clause •

    $default  reduce using rule 661 (distribute_simd_clause)


State 792

  659 distribute_simd_clause: linear_clause •

    $default  reduce using rule 659 (distribute_simd_clause)


State 793

  660 distribute_simd_clause: aligned_clause •

    $default  reduce using rule 660 (distribute_simd_clause)


State 794

  656 distribute_simd_clause: collapse_clause •

    $default  reduce using rule 656 (distribute_simd_clause)


State 795

  915 dist_schedule_clause: DIST_SCHEDULE '(' • STATIC ')'
  916                     | DIST_SCHEDULE '(' • STATIC ',' expression ')'

    STATIC  shift, and go to state 1027


State 796

  665 distribute_clause_multi: distribute_clause_multi ',' distribute_clause •

    $default  reduce using rule 665 (distribute_clause_multi)


State 797

  428 teams_distribute_parallel_for_simd_directive: PRAGMA OMP TEAMS DISTRIBUTE PARALLEL FOR • SIMD teams_distribute_parallel_for_simd_clause_multi ENDLN
  485 teams_distribute_parallel_for_directive: PRAGMA OMP TEAMS DISTRIBUTE PARALLEL FOR • teams_distribute_parallel_for_clause_multi ENDLN

    SIMD  shift, and go to state 1028

    $default  reduce using rule 488 (teams_distribute_parallel_for_clause_multi)

    teams_distribute_parallel_for_clause_multi  go to state 1029


State 798

  553 teams_distribute_simd_directive: PRAGMA OMP TEAMS DISTRIBUTE SIMD teams_distribute_simd_clause_multi • ENDLN
  554 teams_distribute_simd_clause_multi: teams_distribute_simd_clause_multi • teams_distribute_simd_clause
  555                                   | teams_distribute_simd_clause_multi • ',' teams_distribute_simd_clause

    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    REDUCTION      shift, and go to state 290
    LASTPRIVATE    shift, and go to state 383
    LINEAR         shift, and go to state 407
    COLLAPSE       shift, and go to state 384
    ALIGNED        shift, and go to state 408
    SAFELEN        shift, and go to state 409
    SIMDLEN        shift, and go to state 410
    NUM_TEAMS      shift, and go to state 528
    THREAD_LIMIT   shift, and go to state 529
    DIST_SCHEDULE  shift, and go to state 516
    ENDLN          shift, and go to state 1030
    ','            shift, and go to state 1031

    teams_distribute_simd_clause  go to state 1032
    dist_schedule_clause          go to state 1033
    num_teams_clause              go to state 1034
    thread_limit_clause           go to state 1035
    safe_len_clause               go to state 1036
    simd_len_clause               go to state 1037
    default_clause                go to state 1038
    private_clause                go to state 1039
    first_private_clause          go to state 1040
    last_private_clause           go to state 1041
    shared_clause                 go to state 1042
    reduction_clause              go to state 1043
    linear_clause                 go to state 1044
    aligned_clause                go to state 1045
    collapse_clause               go to state 1046


State 799

  572 teams_distribute_directive: PRAGMA OMP TEAMS DISTRIBUTE teams_distribute_clause_multi ENDLN •

    $default  reduce using rule 572 (teams_distribute_directive)


State 800

  574 teams_distribute_clause_multi: teams_distribute_clause_multi ',' • teams_distribute_clause

    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    REDUCTION      shift, and go to state 290
    LASTPRIVATE    shift, and go to state 383
    COLLAPSE       shift, and go to state 384
    NUM_TEAMS      shift, and go to state 528
    THREAD_LIMIT   shift, and go to state 529
    DIST_SCHEDULE  shift, and go to state 516

    teams_distribute_clause  go to state 1047
    dist_schedule_clause     go to state 802
    num_teams_clause         go to state 803
    thread_limit_clause      go to state 804
    default_clause           go to state 805
    private_clause           go to state 806
    first_private_clause     go to state 807
    last_private_clause      go to state 808
    shared_clause            go to state 809
    reduction_clause         go to state 810
    collapse_clause          go to state 811


State 801

  573 teams_distribute_clause_multi: teams_distribute_clause_multi teams_distribute_clause •

    $default  reduce using rule 573 (teams_distribute_clause_multi)


State 802

  583 teams_distribute_clause: dist_schedule_clause •

    $default  reduce using rule 583 (teams_distribute_clause)


State 803

  576 teams_distribute_clause: num_teams_clause •

    $default  reduce using rule 576 (teams_distribute_clause)


State 804

  577 teams_distribute_clause: thread_limit_clause •

    $default  reduce using rule 577 (teams_distribute_clause)


State 805

  578 teams_distribute_clause: default_clause •

    $default  reduce using rule 578 (teams_distribute_clause)


State 806

  579 teams_distribute_clause: private_clause •

    $default  reduce using rule 579 (teams_distribute_clause)


State 807

  580 teams_distribute_clause: first_private_clause •

    $default  reduce using rule 580 (teams_distribute_clause)


State 808

  584 teams_distribute_clause: last_private_clause •

    $default  reduce using rule 584 (teams_distribute_clause)


State 809

  581 teams_distribute_clause: shared_clause •

    $default  reduce using rule 581 (teams_distribute_clause)


State 810

  582 teams_distribute_clause: reduction_clause •

    $default  reduce using rule 582 (teams_distribute_clause)


State 811

  585 teams_distribute_clause: collapse_clause •

    $default  reduce using rule 585 (teams_distribute_clause)


State 812

  917 num_teams_clause: NUM_TEAMS '(' • expression ')'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 156
    expression                 go to state 1048


State 813

  918 thread_limit_clause: THREAD_LIMIT '(' • expression ')'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 156
    expression                 go to state 1049


State 814

  675 teams_clause_multi: teams_clause_multi ',' teams_clause •

    $default  reduce using rule 675 (teams_clause_multi)


State 815

  887 flush_list: '(' variable_list ')' •

    $default  reduce using rule 887 (flush_list)


State 816

  983 variable_list: variable_list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 1050


State 817

  910 omp_cancel: PRAGMA OMP CANCEL type_construct_clause ',' if_clause • ENDLN

    ENDLN  shift, and go to state 1051


State 818

  909 omp_cancel: PRAGMA OMP CANCEL type_construct_clause if_clause ENDLN •

    $default  reduce using rule 909 (omp_cancel)


State 819

  911 omp_cancellation_point: PRAGMA OMP CANCELLATION POINT type_construct_clause ENDLN •

    $default  reduce using rule 911 (omp_cancellation_point)


State 820

  883 omp_threadprivate: PRAGMA OMP THREADPRIVATE '(' variable_list ')' • ENDLN

    ENDLN  shift, and go to state 1052


State 821

   18 generic_association: C_DEFAULT • ':' assignment_expression

    ':'  shift, and go to state 1053


State 822

   14 generic_selection: _GENERIC '(' assignment_expression ',' generic_assoc_list • ')'
   16 generic_assoc_list: generic_assoc_list • ',' generic_association

    ')'  shift, and go to state 1054
    ','  shift, and go to state 1055


State 823

   15 generic_assoc_list: generic_association •

    $default  reduce using rule 15 (generic_assoc_list)


State 824

   17 generic_association: type_name • ':' assignment_expression

    ':'  shift, and go to state 1056


State 825

  126 atomic_type_specifier: _ATOMIC '(' type_name ')' •

    $default  reduce using rule 126 (atomic_type_specifier)


State 826

  108 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list • '}'
  113 struct_declaration_list: struct_declaration_list • struct_declaration

    _ATOMIC         shift, and go to state 192
    _STATIC_ASSERT  shift, and go to state 555
    CHAR            shift, and go to state 193
    CONST           shift, and go to state 194
    DOUBLE          shift, and go to state 195
    FLOAT           shift, and go to state 196
    INT             shift, and go to state 197
    LONG            shift, and go to state 198
    SHORT           shift, and go to state 199
    BOOL            shift, and go to state 200
    SIGNED          shift, and go to state 201
    STRUCT          shift, and go to state 202
    UNION           shift, and go to state 203
    UNSIGNED        shift, and go to state 204
    _BOOL           shift, and go to state 205
    _COMPLEX        shift, and go to state 206
    _IMAGINARY      shift, and go to state 207
    VOID            shift, and go to state 208
    RESTRICT        shift, and go to state 209
    VOLATILE        shift, and go to state 210
    '}'             shift, and go to state 1057

    type_specifier             go to state 212
    struct_or_union_specifier  go to state 213
    struct_or_union            go to state 214
    struct_declaration         go to state 829
    specifier_qualifier_list   go to state 558
    atomic_type_specifier      go to state 216
    type_qualifier             go to state 217
    static_assert_declaration  go to state 559


State 827

  190 static_assert_declaration: _STATIC_ASSERT '(' • constant_expression ',' STRING_LITERAL ')' ';'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 1058
    constant_expression        go to state 1059


State 828

  107 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}' •

    $default  reduce using rule 107 (struct_or_union_specifier)


State 829

  113 struct_declaration_list: struct_declaration_list struct_declaration •

    $default  reduce using rule 113 (struct_declaration_list)


State 830

  133 direct_declarator: IDENTIFIER •

    $default  reduce using rule 133 (direct_declarator)


State 831

  134 direct_declarator: '(' • declarator ')'

    IDENTIFIER  shift, and go to state 830
    '('         shift, and go to state 831
    '*'         shift, and go to state 323

    declarator         go to state 1060
    direct_declarator  go to state 837
    pointer            go to state 838


State 832

  123 struct_declarator: ':' • constant_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 1058
    constant_expression        go to state 1061


State 833

  114 struct_declaration: specifier_qualifier_list ';' •

    $default  reduce using rule 114 (struct_declaration)


State 834

  115 struct_declaration: specifier_qualifier_list struct_declarator_list • ';'
  122 struct_declarator_list: struct_declarator_list • ',' struct_declarator

    ','  shift, and go to state 1062
    ';'  shift, and go to state 1063


State 835

  121 struct_declarator_list: struct_declarator •

    $default  reduce using rule 121 (struct_declarator_list)


State 836

  124 struct_declarator: declarator • ':' constant_expression
  125                  | declarator •

    ':'  shift, and go to state 1064

    $default  reduce using rule 125 (struct_declarator)


State 837

  132 declarator: direct_declarator •
  135 direct_declarator: direct_declarator • '[' ']'
  136                  | direct_declarator • '[' '*' ']'
  137                  | direct_declarator • '[' C_STATIC type_qualifier_list assignment_expression ']'
  138                  | direct_declarator • '[' C_STATIC assignment_expression ']'
  139                  | direct_declarator • '[' type_qualifier_list '*' ']'
  140                  | direct_declarator • '[' type_qualifier_list C_STATIC assignment_expression ']'
  141                  | direct_declarator • '[' type_qualifier_list assignment_expression ']'
  142                  | direct_declarator • '[' type_qualifier_list ']'
  143                  | direct_declarator • '[' assignment_expression ']'
  144                  | direct_declarator • '(' ')'
  145                  | direct_declarator • '(' identifier_list ')'

    '('  shift, and go to state 1065
    '['  shift, and go to state 1066

    $default  reduce using rule 132 (declarator)


State 838

  131 declarator: pointer • direct_declarator

    IDENTIFIER  shift, and go to state 830
    '('         shift, and go to state 831

    direct_declarator  go to state 1067


State 839

  159 direct_abstract_declarator: '(' abstract_declarator ')' •

    $default  reduce using rule 159 (direct_abstract_declarator)


State 840

  163 direct_abstract_declarator: '[' C_STATIC assignment_expression • ']'

    ']'  shift, and go to state 1068


State 841

  151 type_qualifier_list: type_qualifier_list • type_qualifier
  162 direct_abstract_declarator: '[' C_STATIC type_qualifier_list • assignment_expression ']'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    _ATOMIC         shift, and go to state 563
    FUNC_NAME       shift, and go to state 124
    CONST           shift, and go to state 194
    SIZEOF          shift, and go to state 125
    RESTRICT        shift, and go to state 209
    VOLATILE        shift, and go to state 210
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 1069
    type_qualifier             go to state 847


State 842

  161 direct_abstract_declarator: '[' '*' ']' •

    $default  reduce using rule 161 (direct_abstract_declarator)


State 843

  167 direct_abstract_declarator: '[' assignment_expression ']' •

    $default  reduce using rule 167 (direct_abstract_declarator)


State 844

  164 direct_abstract_declarator: '[' type_qualifier_list C_STATIC • assignment_expression ']'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 1070


State 845

  166 direct_abstract_declarator: '[' type_qualifier_list ']' •

    $default  reduce using rule 166 (direct_abstract_declarator)


State 846

  165 direct_abstract_declarator: '[' type_qualifier_list assignment_expression • ']'

    ']'  shift, and go to state 1071


State 847

  151 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 151 (type_qualifier_list)


State 848

  146 pointer: '*' type_qualifier_list pointer •

    $default  reduce using rule 146 (pointer)


State 849

  177 direct_abstract_declarator: direct_abstract_declarator '(' ')' •

    $default  reduce using rule 177 (direct_abstract_declarator)


State 850

  170 direct_abstract_declarator: direct_abstract_declarator '[' C_STATIC • type_qualifier_list assignment_expression ']'
  171                           | direct_abstract_declarator '[' C_STATIC • assignment_expression ']'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    _ATOMIC         shift, and go to state 563
    FUNC_NAME       shift, and go to state 124
    CONST           shift, and go to state 194
    SIZEOF          shift, and go to state 125
    RESTRICT        shift, and go to state 209
    VOLATILE        shift, and go to state 210
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 1072
    type_qualifier             go to state 567
    type_qualifier_list        go to state 1073


State 851

  168 direct_abstract_declarator: direct_abstract_declarator '[' ']' •

    $default  reduce using rule 168 (direct_abstract_declarator)


State 852

   39 unary_operator: '*' •
  169 direct_abstract_declarator: direct_abstract_declarator '[' '*' • ']'

    ']'  shift, and go to state 1074

    $default  reduce using rule 39 (unary_operator)


State 853

  175 direct_abstract_declarator: direct_abstract_declarator '[' assignment_expression • ']'

    ']'  shift, and go to state 1075


State 854

  151 type_qualifier_list: type_qualifier_list • type_qualifier
  172 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list • assignment_expression ']'
  173                           | direct_abstract_declarator '[' type_qualifier_list • C_STATIC assignment_expression ']'
  174                           | direct_abstract_declarator '[' type_qualifier_list • ']'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    C_STATIC        shift, and go to state 1076
    _ALIGNOF        shift, and go to state 123
    _ATOMIC         shift, and go to state 563
    FUNC_NAME       shift, and go to state 124
    CONST           shift, and go to state 194
    SIZEOF          shift, and go to state 125
    RESTRICT        shift, and go to state 209
    VOLATILE        shift, and go to state 210
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    ']'             shift, and go to state 1077
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 1078
    type_qualifier             go to state 847


State 855

  188 designator: '[' • constant_expression ']'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 1058
    constant_expression        go to state 1079


State 856

  189 designator: '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 1080


State 857

  178 initializer: '{' • initializer_list '}'
  179            | '{' • initializer_list ',' '}'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '['             shift, and go to state 855
    '.'             shift, and go to state 856
    '{'             shift, and go to state 857
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 858
    initializer                go to state 859
    initializer_list           go to state 1081
    designation                go to state 861
    designator_list            go to state 862
    designator                 go to state 863


State 858

  180 initializer: assignment_expression •

    $default  reduce using rule 180 (initializer)


State 859

  182 initializer_list: initializer •

    $default  reduce using rule 182 (initializer_list)


State 860

   27 postfix_expression: '(' type_name ')' '{' initializer_list • '}'
   28                   | '(' type_name ')' '{' initializer_list • ',' '}'
  183 initializer_list: initializer_list • ',' designation initializer
  184                 | initializer_list • ',' initializer

    ','  shift, and go to state 1082
    '}'  shift, and go to state 1083


State 861

  181 initializer_list: designation • initializer

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '{'             shift, and go to state 857
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 858
    initializer                go to state 1084


State 862

  185 designation: designator_list • '='
  187 designator_list: designator_list • designator

    '['  shift, and go to state 855
    '.'  shift, and go to state 856
    '='  shift, and go to state 1085

    designator  go to state 1086


State 863

  186 designator_list: designator •

    $default  reduce using rule 186 (designator_list)


State 864

   30 argument_expression_list: argument_expression_list ',' assignment_expression •

    $default  reduce using rule 30 (argument_expression_list)


State 865

   75 conditional_expression: logical_or_expression '?' expression ':' conditional_expression •

    $default  reduce using rule 75 (conditional_expression)


State 866

  718 parallel_for_simd_directive: PRAGMA OMP PARALLEL FOR SIMD parallel_for_simd_clause_multi ENDLN •

    $default  reduce using rule 718 (parallel_for_simd_directive)


State 867

  720 parallel_for_simd_clause_multi: parallel_for_simd_clause_multi ',' • parallel_for_simd_clause

    NUM_THREADS   shift, and go to state 359
    DEFAULT       shift, and go to state 360
    PRIVATE       shift, and go to state 361
    FIRSTPRIVATE  shift, and go to state 362
    SHARED        shift, and go to state 363
    COPYIN        shift, and go to state 364
    REDUCTION     shift, and go to state 290
    LASTPRIVATE   shift, and go to state 383
    LINEAR        shift, and go to state 407
    COLLAPSE      shift, and go to state 384
    IF            shift, and go to state 366
    SCHEDULE      shift, and go to state 385
    ORDERED       shift, and go to state 386
    ALIGNED       shift, and go to state 408
    SAFELEN       shift, and go to state 409
    SIMDLEN       shift, and go to state 410
    PROC_BIND     shift, and go to state 367

    parallel_for_simd_clause  go to state 1087
    safe_len_clause           go to state 869
    simd_len_clause           go to state 870
    ordered_clause            go to state 871
    schedule_clause           go to state 872
    num_threads_clause        go to state 873
    copyin_clause             go to state 874
    default_clause            go to state 875
    private_clause            go to state 876
    first_private_clause      go to state 877
    last_private_clause       go to state 878
    shared_clause             go to state 879
    reduction_clause          go to state 880
    linear_clause             go to state 881
    aligned_clause            go to state 882
    collapse_clause           go to state 883
    if_clause                 go to state 884
    procbind_clause           go to state 885


State 868

  719 parallel_for_simd_clause_multi: parallel_for_simd_clause_multi parallel_for_simd_clause •

    $default  reduce using rule 719 (parallel_for_simd_clause_multi)


State 869

  732 parallel_for_simd_clause: safe_len_clause •

    $default  reduce using rule 732 (parallel_for_simd_clause)


State 870

  733 parallel_for_simd_clause: simd_len_clause •

    $default  reduce using rule 733 (parallel_for_simd_clause)


State 871

  731 parallel_for_simd_clause: ordered_clause •

    $default  reduce using rule 731 (parallel_for_simd_clause)


State 872

  736 parallel_for_simd_clause: schedule_clause •

    $default  reduce using rule 736 (parallel_for_simd_clause)


State 873

  723 parallel_for_simd_clause: num_threads_clause •

    $default  reduce using rule 723 (parallel_for_simd_clause)


State 874

  724 parallel_for_simd_clause: copyin_clause •

    $default  reduce using rule 724 (parallel_for_simd_clause)


State 875

  726 parallel_for_simd_clause: default_clause •

    $default  reduce using rule 726 (parallel_for_simd_clause)


State 876

  727 parallel_for_simd_clause: private_clause •

    $default  reduce using rule 727 (parallel_for_simd_clause)


State 877

  728 parallel_for_simd_clause: first_private_clause •

    $default  reduce using rule 728 (parallel_for_simd_clause)


State 878

  738 parallel_for_simd_clause: last_private_clause •

    $default  reduce using rule 738 (parallel_for_simd_clause)


State 879

  729 parallel_for_simd_clause: shared_clause •

    $default  reduce using rule 729 (parallel_for_simd_clause)


State 880

  730 parallel_for_simd_clause: reduction_clause •

    $default  reduce using rule 730 (parallel_for_simd_clause)


State 881

  734 parallel_for_simd_clause: linear_clause •

    $default  reduce using rule 734 (parallel_for_simd_clause)


State 882

  735 parallel_for_simd_clause: aligned_clause •

    $default  reduce using rule 735 (parallel_for_simd_clause)


State 883

  737 parallel_for_simd_clause: collapse_clause •

    $default  reduce using rule 737 (parallel_for_simd_clause)


State 884

  722 parallel_for_simd_clause: if_clause •

    $default  reduce using rule 722 (parallel_for_simd_clause)


State 885

  725 parallel_for_simd_clause: procbind_clause •

    $default  reduce using rule 725 (parallel_for_simd_clause)


State 886

  816 parallel_for_clause_multi: parallel_for_clause_multi ',' parallel_for_clause •

    $default  reduce using rule 816 (parallel_for_clause_multi)


State 887

  801 parallel_sections_clause_multi: parallel_sections_clause_multi ',' parallel_sections_clause •

    $default  reduce using rule 801 (parallel_sections_clause_multi)


State 888

  958 num_threads_clause: NUM_THREADS '(' I_CONSTANT • ')'

    ')'  shift, and go to state 1088


State 889

  960 default_clause: DEFAULT '(' SHARED • ')'

    ')'  shift, and go to state 1089


State 890

  961 default_clause: DEFAULT '(' NONE • ')'

    ')'  shift, and go to state 1090


State 891

  962 private_clause: PRIVATE '(' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 1091
    ','  shift, and go to state 816


State 892

  963 first_private_clause: FIRSTPRIVATE '(' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 1092
    ','  shift, and go to state 816


State 893

  965 shared_clause: SHARED '(' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 1093
    ','  shift, and go to state 816


State 894

  959 copyin_clause: COPYIN '(' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 1094
    ','  shift, and go to state 816


State 895

  934 dependence_type: IN •

    $default  reduce using rule 934 (dependence_type)


State 896

  935 dependence_type: OUT •

    $default  reduce using rule 935 (dependence_type)


State 897

  936 dependence_type: INOUT •

    $default  reduce using rule 936 (dependence_type)


State 898

  933 depend_clause: DEPEND '(' dependence_type • ':' variable_array_section_list ')'

    ':'  shift, and go to state 1095


State 899

   90 expression: expression • ',' assignment_expression
  991 if_clause: IF '(' expression • ')'

    ')'  shift, and go to state 1096
    ','  shift, and go to state 258


State 900

  992 procbind_clause: PROC_BIND '(' MASTER • ')'

    ')'  shift, and go to state 1097


State 901

  993 procbind_clause: PROC_BIND '(' CLOSE • ')'

    ')'  shift, and go to state 1098


State 902

  994 procbind_clause: PROC_BIND '(' SPREAD • ')'

    ')'  shift, and go to state 1099


State 903

  742 for_simd_clause_multi: for_simd_clause_multi ',' for_simd_clause •

    $default  reduce using rule 742 (for_simd_clause_multi)


State 904

  964 last_private_clause: LASTPRIVATE '(' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 1100
    ','  shift, and go to state 816


State 905

   90 expression: expression • ',' assignment_expression
  982 collapse_clause: COLLAPSE '(' expression • ')'

    ')'  shift, and go to state 1101
    ','  shift, and go to state 258


State 906

  955 schedule_kind: STATIC •

    $default  reduce using rule 955 (schedule_kind)


State 907

  956 schedule_kind: CROSS •

    $default  reduce using rule 956 (schedule_kind)


State 908

  952 schedule_clause: SCHEDULE '(' schedule_kind • ')'
  953                | SCHEDULE '(' schedule_kind • ',' I_CONSTANT ')'
  954                | SCHEDULE '(' schedule_kind • ',' IDENTIFIER ')'

    ')'  shift, and go to state 1102
    ','  shift, and go to state 1103


State 909

   90 expression: expression • ',' assignment_expression
  951 ordered_clause: ORDERED '(' expression • ')'

    ')'  shift, and go to state 1104
    ','  shift, and go to state 258


State 910

  967 linear_clause: LINEAR '(' variable_list • optional_expression ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ','  shift, and go to state 816
    ':'  shift, and go to state 1105

    $default  reduce using rule 245 (optional_expression)

    optional_expression  go to state 1106


State 911

  968 aligned_clause: ALIGNED '(' variable_list • optional_expression ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ','  shift, and go to state 816
    ':'  shift, and go to state 1105

    $default  reduce using rule 245 (optional_expression)

    optional_expression  go to state 1107


State 912

   90 expression: expression • ',' assignment_expression
  928 safe_len_clause: SAFELEN '(' expression • ')'

    ')'  shift, and go to state 1108
    ','  shift, and go to state 258


State 913

  929 simd_len_clause: SIMDLEN '(' I_CONSTANT • ')'

    ')'  shift, and go to state 1109


State 914

   90 expression: expression • ',' assignment_expression
  930 final_clause: FINAL '(' expression • ')'

    ')'  shift, and go to state 1110
    ','  shift, and go to state 258


State 915

  938 priority_clause: PRIORITY '(' I_CONSTANT • ')'

    ')'  shift, and go to state 1111


State 916

  949 copy_private_clause: COPYPRIVATE '(' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 1112
    ','  shift, and go to state 816


State 917

  268 target_parallel_for_simd_directive: PRAGMA OMP TARGET PARALLEL FOR SIMD target_parallel_for_simd_clause_multi • ENDLN
  269 target_parallel_for_simd_clause_multi: target_parallel_for_simd_clause_multi • target_parallel_for_simd_clause
  270                                      | target_parallel_for_simd_clause_multi • ',' target_parallel_for_simd_clause

    NUM_THREADS    shift, and go to state 359
    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 1113
    DEPEND         shift, and go to state 365
    LASTPRIVATE    shift, and go to state 383
    LINEAR         shift, and go to state 407
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    SCHEDULE       shift, and go to state 385
    ORDERED        shift, and go to state 386
    ALIGNED        shift, and go to state 408
    SAFELEN        shift, and go to state 409
    SIMDLEN        shift, and go to state 410
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 1114
    DEFAULTMAP     shift, and go to state 1115
    PROC_BIND      shift, and go to state 367
    ENDLN          shift, and go to state 1116
    ','            shift, and go to state 1117

    target_parallel_for_simd_clause  go to state 1118
    device_clause                    go to state 1119
    map_clause                       go to state 1120
    safe_len_clause                  go to state 1121
    simd_len_clause                  go to state 1122
    depend_clause                    go to state 1123
    ordered_clause                   go to state 1124
    schedule_clause                  go to state 1125
    num_threads_clause               go to state 1126
    default_clause                   go to state 1127
    private_clause                   go to state 1128
    first_private_clause             go to state 1129
    last_private_clause              go to state 1130
    shared_clause                    go to state 1131
    reduction_clause                 go to state 1132
    linear_clause                    go to state 1133
    aligned_clause                   go to state 1134
    collapse_clause                  go to state 1135
    if_clause                        go to state 1136
    procbind_clause                  go to state 1137


State 918

  316 target_parallel_for_clause: NOWAIT •

    $default  reduce using rule 316 (target_parallel_for_clause)


State 919

  304 target_parallel_for_clause: IS_DEVICE_PTR • '(' variable_list ')'

    '('  shift, and go to state 1138


State 920

  305 target_parallel_for_clause: DEFAULTMAP • '(' TOFROM ':' SCALAR ')'

    '('  shift, and go to state 1139


State 921

  295 target_parallel_for_directive: PRAGMA OMP TARGET PARALLEL FOR target_parallel_for_clause_multi ENDLN •

    $default  reduce using rule 295 (target_parallel_for_directive)


State 922

  297 target_parallel_for_clause_multi: target_parallel_for_clause_multi ',' • target_parallel_for_clause

    NUM_THREADS    shift, and go to state 359
    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 918
    DEPEND         shift, and go to state 365
    LASTPRIVATE    shift, and go to state 383
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    SCHEDULE       shift, and go to state 385
    ORDERED        shift, and go to state 386
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 919
    DEFAULTMAP     shift, and go to state 920
    PROC_BIND      shift, and go to state 367

    target_parallel_for_clause  go to state 1140
    device_clause               go to state 924
    map_clause                  go to state 925
    depend_clause               go to state 926
    ordered_clause              go to state 927
    schedule_clause             go to state 928
    num_threads_clause          go to state 929
    default_clause              go to state 930
    private_clause              go to state 931
    first_private_clause        go to state 932
    last_private_clause         go to state 933
    shared_clause               go to state 934
    reduction_clause            go to state 935
    collapse_clause             go to state 936
    if_clause                   go to state 937
    procbind_clause             go to state 938


State 923

  296 target_parallel_for_clause_multi: target_parallel_for_clause_multi target_parallel_for_clause •

    $default  reduce using rule 296 (target_parallel_for_clause_multi)


State 924

  299 target_parallel_for_clause: device_clause •

    $default  reduce using rule 299 (target_parallel_for_clause)


State 925

  300 target_parallel_for_clause: map_clause •

    $default  reduce using rule 300 (target_parallel_for_clause)


State 926

  306 target_parallel_for_clause: depend_clause •

    $default  reduce using rule 306 (target_parallel_for_clause)


State 927

  312 target_parallel_for_clause: ordered_clause •

    $default  reduce using rule 312 (target_parallel_for_clause)


State 928

  313 target_parallel_for_clause: schedule_clause •

    $default  reduce using rule 313 (target_parallel_for_clause)


State 929

  307 target_parallel_for_clause: num_threads_clause •

    $default  reduce using rule 307 (target_parallel_for_clause)


State 930

  309 target_parallel_for_clause: default_clause •

    $default  reduce using rule 309 (target_parallel_for_clause)


State 931

  302 target_parallel_for_clause: private_clause •

    $default  reduce using rule 302 (target_parallel_for_clause)


State 932

  303 target_parallel_for_clause: first_private_clause •

    $default  reduce using rule 303 (target_parallel_for_clause)


State 933

  315 target_parallel_for_clause: last_private_clause •

    $default  reduce using rule 315 (target_parallel_for_clause)


State 934

  310 target_parallel_for_clause: shared_clause •

    $default  reduce using rule 310 (target_parallel_for_clause)


State 935

  311 target_parallel_for_clause: reduction_clause •

    $default  reduce using rule 311 (target_parallel_for_clause)


State 936

  314 target_parallel_for_clause: collapse_clause •

    $default  reduce using rule 314 (target_parallel_for_clause)


State 937

  301 target_parallel_for_clause: if_clause •

    $default  reduce using rule 301 (target_parallel_for_clause)


State 938

  308 target_parallel_for_clause: procbind_clause •

    $default  reduce using rule 308 (target_parallel_for_clause)


State 939

  327 target_parallel_clause: IS_DEVICE_PTR '(' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 1141


State 940

  328 target_parallel_clause: DEFAULTMAP '(' • TOFROM ':' SCALAR ')'

    TOFROM  shift, and go to state 1142


State 941

  320 target_parallel_clause_multi: target_parallel_clause_multi ',' target_parallel_clause •

    $default  reduce using rule 320 (target_parallel_clause_multi)


State 942

  256 target_simd_clause: IS_DEVICE_PTR '(' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 1143


State 943

  257 target_simd_clause: DEFAULTMAP '(' • TOFROM ':' SCALAR ')'

    TOFROM  shift, and go to state 1144


State 944

  249 target_simd_clause_multi: target_simd_clause_multi ',' target_simd_clause •

    $default  reduce using rule 249 (target_simd_clause_multi)


State 945

   90 expression: expression • ',' assignment_expression
  921 device_clause: DEVICE '(' expression • ')'

    ')'  shift, and go to state 1145
    ','  shift, and go to state 258


State 946

  969 variable_array_section_list: IDENTIFIER •
  973 array_section: IDENTIFIER • array_section_subscript

    '['  shift, and go to state 1146

    $default  reduce using rule 969 (variable_array_section_list)

    array_section_subscript  go to state 1147


State 947

  919 motion_clause: TO '(' variable_array_section_list • ')'
  971 variable_array_section_list: variable_array_section_list • ',' IDENTIFIER
  972                            | variable_array_section_list • ',' array_section

    ')'  shift, and go to state 1148
    ','  shift, and go to state 1149


State 948

  970 variable_array_section_list: array_section •

    $default  reduce using rule 970 (variable_array_section_list)


State 949

  920 motion_clause: FROM '(' variable_array_section_list • ')'
  971 variable_array_section_list: variable_array_section_list • ',' IDENTIFIER
  972                            | variable_array_section_list • ',' array_section

    ')'  shift, and go to state 1150
    ','  shift, and go to state 1149


State 950

  688 target_update_clause_seq: target_update_clause_seq ',' target_update_clause •

    $default  reduce using rule 688 (target_update_clause_seq)


State 951

  716 target_data_clause: USE_DEVICE_PTR '(' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 1151


State 952

  711 target_data_clause_multi: target_data_clause_multi ',' target_data_clause •

    $default  reduce using rule 711 (target_data_clause_multi)


State 953

  898 omp_target_enter_data_clause: NOWAIT •

    $default  reduce using rule 898 (omp_target_enter_data_clause)


State 954

  890 omp_target_enter_data: PRAGMA OMP TARGET ENTER DATA omp_target_enter_data_clause_multi ENDLN •

    $default  reduce using rule 890 (omp_target_enter_data)


State 955

  892 omp_target_enter_data_clause_multi: omp_target_enter_data_clause_multi ',' • omp_target_enter_data_clause

    NOWAIT  shift, and go to state 953
    DEPEND  shift, and go to state 365
    IF      shift, and go to state 366
    DEVICE  shift, and go to state 451
    MAP     shift, and go to state 466

    omp_target_enter_data_clause  go to state 1152
    device_clause                 go to state 957
    map_clause                    go to state 958
    depend_clause                 go to state 959
    if_clause                     go to state 960


State 956

  891 omp_target_enter_data_clause_multi: omp_target_enter_data_clause_multi omp_target_enter_data_clause •

    $default  reduce using rule 891 (omp_target_enter_data_clause_multi)


State 957

  895 omp_target_enter_data_clause: device_clause •

    $default  reduce using rule 895 (omp_target_enter_data_clause)


State 958

  896 omp_target_enter_data_clause: map_clause •

    $default  reduce using rule 896 (omp_target_enter_data_clause)


State 959

  897 omp_target_enter_data_clause: depend_clause •

    $default  reduce using rule 897 (omp_target_enter_data_clause)


State 960

  894 omp_target_enter_data_clause: if_clause •

    $default  reduce using rule 894 (omp_target_enter_data_clause)


State 961

  907 omp_target_exit_data_clause: NOWAIT •

    $default  reduce using rule 907 (omp_target_exit_data_clause)


State 962

  899 omp_target_exit_data: PRAGMA OMP TARGET EXIT DATA omp_target_exit_data_clause_multi ENDLN •

    $default  reduce using rule 899 (omp_target_exit_data)


State 963

  901 omp_target_exit_data_clause_multi: omp_target_exit_data_clause_multi ',' • omp_target_exit_data_clause

    NOWAIT  shift, and go to state 961
    DEPEND  shift, and go to state 365
    IF      shift, and go to state 366
    DEVICE  shift, and go to state 451
    MAP     shift, and go to state 466

    omp_target_exit_data_clause  go to state 1153
    device_clause                go to state 965
    map_clause                   go to state 966
    depend_clause                go to state 967
    if_clause                    go to state 968


State 964

  900 omp_target_exit_data_clause_multi: omp_target_exit_data_clause_multi omp_target_exit_data_clause •

    $default  reduce using rule 900 (omp_target_exit_data_clause_multi)


State 965

  904 omp_target_exit_data_clause: device_clause •

    $default  reduce using rule 904 (omp_target_exit_data_clause)


State 966

  905 omp_target_exit_data_clause: map_clause •

    $default  reduce using rule 905 (omp_target_exit_data_clause)


State 967

  906 omp_target_exit_data_clause: depend_clause •

    $default  reduce using rule 906 (omp_target_exit_data_clause)


State 968

  903 omp_target_exit_data_clause: if_clause •

    $default  reduce using rule 903 (omp_target_exit_data_clause)


State 969

  397 target_teams_distribute_parallel_for_simd_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE PARALLEL FOR • SIMD target_teams_distribute_parallel_for_simd_clause_multi ENDLN
  459 target_teams_distribute_parallel_for_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE PARALLEL FOR • target_teams_distribute_parallel_for_clause_multi ENDLN

    SIMD  shift, and go to state 1154

    $default  reduce using rule 462 (target_teams_distribute_parallel_for_clause_multi)

    target_teams_distribute_parallel_for_clause_multi  go to state 1155


State 970

  505 target_teams_distribute_simd_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE SIMD target_teams_distribute_simd_clause_multi • ENDLN
  506 target_teams_distribute_simd_clause_multi: target_teams_distribute_simd_clause_multi • target_teams_distribute_simd_clause
  507                                          | target_teams_distribute_simd_clause_multi • ',' target_teams_distribute_simd_clause

    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 1156
    DEPEND         shift, and go to state 365
    LASTPRIVATE    shift, and go to state 383
    LINEAR         shift, and go to state 407
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    ALIGNED        shift, and go to state 408
    SAFELEN        shift, and go to state 409
    SIMDLEN        shift, and go to state 410
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 1157
    DEFAULTMAP     shift, and go to state 1158
    NUM_TEAMS      shift, and go to state 528
    THREAD_LIMIT   shift, and go to state 529
    DIST_SCHEDULE  shift, and go to state 516
    ENDLN          shift, and go to state 1159
    ','            shift, and go to state 1160

    target_teams_distribute_simd_clause  go to state 1161
    dist_schedule_clause                 go to state 1162
    num_teams_clause                     go to state 1163
    thread_limit_clause                  go to state 1164
    device_clause                        go to state 1165
    map_clause                           go to state 1166
    safe_len_clause                      go to state 1167
    simd_len_clause                      go to state 1168
    depend_clause                        go to state 1169
    default_clause                       go to state 1170
    private_clause                       go to state 1171
    first_private_clause                 go to state 1172
    last_private_clause                  go to state 1173
    shared_clause                        go to state 1174
    reduction_clause                     go to state 1175
    linear_clause                        go to state 1176
    aligned_clause                       go to state 1177
    collapse_clause                      go to state 1178
    if_clause                            go to state 1179


State 971

  551 target_teams_distribute_clause: NOWAIT •

    $default  reduce using rule 551 (target_teams_distribute_clause)


State 972

  540 target_teams_distribute_clause: IS_DEVICE_PTR • '(' variable_list ')'

    '('  shift, and go to state 1180


State 973

  541 target_teams_distribute_clause: DEFAULTMAP • '(' TOFROM ':' SCALAR ')'

    '('  shift, and go to state 1181


State 974

  531 target_teams_distribute_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE target_teams_distribute_clause_multi ENDLN •

    $default  reduce using rule 531 (target_teams_distribute_directive)


State 975

  533 target_teams_distribute_clause_multi: target_teams_distribute_clause_multi ',' • target_teams_distribute_clause

    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 971
    DEPEND         shift, and go to state 365
    LASTPRIVATE    shift, and go to state 383
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 972
    DEFAULTMAP     shift, and go to state 973
    NUM_TEAMS      shift, and go to state 528
    THREAD_LIMIT   shift, and go to state 529
    DIST_SCHEDULE  shift, and go to state 516

    target_teams_distribute_clause  go to state 1182
    dist_schedule_clause            go to state 977
    num_teams_clause                go to state 978
    thread_limit_clause             go to state 979
    device_clause                   go to state 980
    map_clause                      go to state 981
    depend_clause                   go to state 982
    default_clause                  go to state 983
    private_clause                  go to state 984
    first_private_clause            go to state 985
    last_private_clause             go to state 986
    shared_clause                   go to state 987
    reduction_clause                go to state 988
    collapse_clause                 go to state 989
    if_clause                       go to state 990


State 976

  532 target_teams_distribute_clause_multi: target_teams_distribute_clause_multi target_teams_distribute_clause •

    $default  reduce using rule 532 (target_teams_distribute_clause_multi)


State 977

  548 target_teams_distribute_clause: dist_schedule_clause •

    $default  reduce using rule 548 (target_teams_distribute_clause)


State 978

  543 target_teams_distribute_clause: num_teams_clause •

    $default  reduce using rule 543 (target_teams_distribute_clause)


State 979

  544 target_teams_distribute_clause: thread_limit_clause •

    $default  reduce using rule 544 (target_teams_distribute_clause)


State 980

  535 target_teams_distribute_clause: device_clause •

    $default  reduce using rule 535 (target_teams_distribute_clause)


State 981

  536 target_teams_distribute_clause: map_clause •

    $default  reduce using rule 536 (target_teams_distribute_clause)


State 982

  542 target_teams_distribute_clause: depend_clause •

    $default  reduce using rule 542 (target_teams_distribute_clause)


State 983

  545 target_teams_distribute_clause: default_clause •

    $default  reduce using rule 545 (target_teams_distribute_clause)


State 984

  538 target_teams_distribute_clause: private_clause •

    $default  reduce using rule 538 (target_teams_distribute_clause)


State 985

  539 target_teams_distribute_clause: first_private_clause •

    $default  reduce using rule 539 (target_teams_distribute_clause)


State 986

  549 target_teams_distribute_clause: last_private_clause •

    $default  reduce using rule 549 (target_teams_distribute_clause)


State 987

  546 target_teams_distribute_clause: shared_clause •

    $default  reduce using rule 546 (target_teams_distribute_clause)


State 988

  547 target_teams_distribute_clause: reduction_clause •

    $default  reduce using rule 547 (target_teams_distribute_clause)


State 989

  550 target_teams_distribute_clause: collapse_clause •

    $default  reduce using rule 550 (target_teams_distribute_clause)


State 990

  537 target_teams_distribute_clause: if_clause •

    $default  reduce using rule 537 (target_teams_distribute_clause)


State 991

  596 target_teams_clause: IS_DEVICE_PTR '(' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 1183


State 992

  597 target_teams_clause: DEFAULTMAP '(' • TOFROM ':' SCALAR ')'

    TOFROM  shift, and go to state 1184


State 993

  589 target_teams_clause_multi: target_teams_clause_multi ',' target_teams_clause •

    $default  reduce using rule 589 (target_teams_clause_multi)


State 994

  925 map_type: TO •

    $default  reduce using rule 925 (map_type)


State 995

  926 map_type: FROM •

    $default  reduce using rule 926 (map_type)


State 996

  924 map_type: ALLOC •

    $default  reduce using rule 924 (map_type)


State 997

  927 map_type: TOFROM •

    $default  reduce using rule 927 (map_type)


State 998

  922 map_clause: MAP '(' map_type • ':' variable_array_section_list ')'

    ':'  shift, and go to state 1185


State 999

  923 map_clause: MAP '(' variable_array_section_list • ')'
  971 variable_array_section_list: variable_array_section_list • ',' IDENTIFIER
  972                            | variable_array_section_list • ',' array_section

    ')'  shift, and go to state 1186
    ','  shift, and go to state 1149


State 1000

  704 target_clause: IS_DEVICE_PTR '(' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 1187
    ','  shift, and go to state 816


State 1001

  705 target_clause: DEFAULTMAP '(' TOFROM • ':' SCALAR ')'

    ':'  shift, and go to state 1188


State 1002

  914 uniform_clause: UNIFORM '(' • argument_expression_list ')'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    argument_expression_list   go to state 1189
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 332


State 1003

  386 declare_simd_directive_clause_multi: declare_simd_directive_clause_multi ',' declare_simd_directive_clause •

    $default  reduce using rule 386 (declare_simd_directive_clause_multi)


State 1004

  966 reduction_clause: REDUCTION '(' reduction_identifier ':' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 1190


State 1005

  339 taskloop_simd_clause_multi: taskloop_simd_clause_multi ',' taskloop_simd_clause •

    $default  reduce using rule 339 (taskloop_simd_clause_multi)


State 1006

  912 grainsize_clause: GRAINSIZE '(' I_CONSTANT • ')'

    ')'  shift, and go to state 1191


State 1007

  913 num_tasks_clause: NUM_TASKS '(' I_CONSTANT • ')'

    ')'  shift, and go to state 1192


State 1008

  606 distribute_parallel_for_simd_directive: PRAGMA OMP DISTRIBUTE PARALLEL FOR SIMD distribute_parallel_for_simd_clause_multi • ENDLN
  607 distribute_parallel_for_simd_clause_multi: distribute_parallel_for_simd_clause_multi • distribute_parallel_for_simd_clause
  608                                          | distribute_parallel_for_simd_clause_multi • ',' distribute_parallel_for_simd_clause

    NUM_THREADS    shift, and go to state 359
    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    COPYIN         shift, and go to state 364
    REDUCTION      shift, and go to state 290
    LASTPRIVATE    shift, and go to state 383
    LINEAR         shift, and go to state 407
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    SCHEDULE       shift, and go to state 385
    ORDERED        shift, and go to state 386
    ALIGNED        shift, and go to state 408
    SAFELEN        shift, and go to state 409
    SIMDLEN        shift, and go to state 410
    DIST_SCHEDULE  shift, and go to state 516
    PROC_BIND      shift, and go to state 367
    ENDLN          shift, and go to state 1193
    ','            shift, and go to state 1194

    distribute_parallel_for_simd_clause  go to state 1195
    dist_schedule_clause                 go to state 1196
    safe_len_clause                      go to state 1197
    simd_len_clause                      go to state 1198
    ordered_clause                       go to state 1199
    schedule_clause                      go to state 1200
    num_threads_clause                   go to state 1201
    copyin_clause                        go to state 1202
    default_clause                       go to state 1203
    private_clause                       go to state 1204
    first_private_clause                 go to state 1205
    last_private_clause                  go to state 1206
    shared_clause                        go to state 1207
    reduction_clause                     go to state 1208
    linear_clause                        go to state 1209
    aligned_clause                       go to state 1210
    collapse_clause                      go to state 1211
    if_clause                            go to state 1212
    procbind_clause                      go to state 1213


State 1009

  629 distribute_parallel_for_directive: PRAGMA OMP DISTRIBUTE PARALLEL FOR distribute_parallel_for_clause_multi ENDLN •

    $default  reduce using rule 629 (distribute_parallel_for_directive)


State 1010

  631 distribute_parallel_for_clause_multi: distribute_parallel_for_clause_multi ',' • distribute_parallel_for_clause

    NUM_THREADS    shift, and go to state 359
    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    COPYIN         shift, and go to state 364
    REDUCTION      shift, and go to state 290
    LASTPRIVATE    shift, and go to state 383
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    SCHEDULE       shift, and go to state 385
    ORDERED        shift, and go to state 386
    DIST_SCHEDULE  shift, and go to state 516
    PROC_BIND      shift, and go to state 367

    distribute_parallel_for_clause  go to state 1214
    dist_schedule_clause            go to state 1012
    ordered_clause                  go to state 1013
    schedule_clause                 go to state 1014
    num_threads_clause              go to state 1015
    copyin_clause                   go to state 1016
    default_clause                  go to state 1017
    private_clause                  go to state 1018
    first_private_clause            go to state 1019
    last_private_clause             go to state 1020
    shared_clause                   go to state 1021
    reduction_clause                go to state 1022
    collapse_clause                 go to state 1023
    if_clause                       go to state 1024
    procbind_clause                 go to state 1025


State 1011

  630 distribute_parallel_for_clause_multi: distribute_parallel_for_clause_multi distribute_parallel_for_clause •

    $default  reduce using rule 630 (distribute_parallel_for_clause_multi)


State 1012

  646 distribute_parallel_for_clause: dist_schedule_clause •

    $default  reduce using rule 646 (distribute_parallel_for_clause)


State 1013

  642 distribute_parallel_for_clause: ordered_clause •

    $default  reduce using rule 642 (distribute_parallel_for_clause)


State 1014

  643 distribute_parallel_for_clause: schedule_clause •

    $default  reduce using rule 643 (distribute_parallel_for_clause)


State 1015

  634 distribute_parallel_for_clause: num_threads_clause •

    $default  reduce using rule 634 (distribute_parallel_for_clause)


State 1016

  635 distribute_parallel_for_clause: copyin_clause •

    $default  reduce using rule 635 (distribute_parallel_for_clause)


State 1017

  637 distribute_parallel_for_clause: default_clause •

    $default  reduce using rule 637 (distribute_parallel_for_clause)


State 1018

  638 distribute_parallel_for_clause: private_clause •

    $default  reduce using rule 638 (distribute_parallel_for_clause)


State 1019

  639 distribute_parallel_for_clause: first_private_clause •

    $default  reduce using rule 639 (distribute_parallel_for_clause)


State 1020

  645 distribute_parallel_for_clause: last_private_clause •

    $default  reduce using rule 645 (distribute_parallel_for_clause)


State 1021

  640 distribute_parallel_for_clause: shared_clause •

    $default  reduce using rule 640 (distribute_parallel_for_clause)


State 1022

  641 distribute_parallel_for_clause: reduction_clause •

    $default  reduce using rule 641 (distribute_parallel_for_clause)


State 1023

  644 distribute_parallel_for_clause: collapse_clause •

    $default  reduce using rule 644 (distribute_parallel_for_clause)


State 1024

  633 distribute_parallel_for_clause: if_clause •

    $default  reduce using rule 633 (distribute_parallel_for_clause)


State 1025

  636 distribute_parallel_for_clause: procbind_clause •

    $default  reduce using rule 636 (distribute_parallel_for_clause)


State 1026

  650 distribute_simd_clause_multi: distribute_simd_clause_multi ',' distribute_simd_clause •

    $default  reduce using rule 650 (distribute_simd_clause_multi)


State 1027

  915 dist_schedule_clause: DIST_SCHEDULE '(' STATIC • ')'
  916                     | DIST_SCHEDULE '(' STATIC • ',' expression ')'

    ')'  shift, and go to state 1215
    ','  shift, and go to state 1216


State 1028

  428 teams_distribute_parallel_for_simd_directive: PRAGMA OMP TEAMS DISTRIBUTE PARALLEL FOR SIMD • teams_distribute_parallel_for_simd_clause_multi ENDLN

    $default  reduce using rule 431 (teams_distribute_parallel_for_simd_clause_multi)

    teams_distribute_parallel_for_simd_clause_multi  go to state 1217


State 1029

  485 teams_distribute_parallel_for_directive: PRAGMA OMP TEAMS DISTRIBUTE PARALLEL FOR teams_distribute_parallel_for_clause_multi • ENDLN
  486 teams_distribute_parallel_for_clause_multi: teams_distribute_parallel_for_clause_multi • teams_distribute_parallel_for_clause
  487                                           | teams_distribute_parallel_for_clause_multi • ',' teams_distribute_parallel_for_clause

    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    COPYIN         shift, and go to state 364
    REDUCTION      shift, and go to state 290
    LASTPRIVATE    shift, and go to state 383
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    SCHEDULE       shift, and go to state 385
    ORDERED        shift, and go to state 386
    NUM_TEAMS      shift, and go to state 528
    THREAD_LIMIT   shift, and go to state 529
    DIST_SCHEDULE  shift, and go to state 516
    PROC_BIND      shift, and go to state 367
    ENDLN          shift, and go to state 1218
    ','            shift, and go to state 1219

    teams_distribute_parallel_for_clause  go to state 1220
    dist_schedule_clause                  go to state 1221
    num_teams_clause                      go to state 1222
    thread_limit_clause                   go to state 1223
    ordered_clause                        go to state 1224
    schedule_clause                       go to state 1225
    copyin_clause                         go to state 1226
    default_clause                        go to state 1227
    private_clause                        go to state 1228
    first_private_clause                  go to state 1229
    last_private_clause                   go to state 1230
    shared_clause                         go to state 1231
    reduction_clause                      go to state 1232
    collapse_clause                       go to state 1233
    if_clause                             go to state 1234
    procbind_clause                       go to state 1235


State 1030

  553 teams_distribute_simd_directive: PRAGMA OMP TEAMS DISTRIBUTE SIMD teams_distribute_simd_clause_multi ENDLN •

    $default  reduce using rule 553 (teams_distribute_simd_directive)


State 1031

  555 teams_distribute_simd_clause_multi: teams_distribute_simd_clause_multi ',' • teams_distribute_simd_clause

    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    REDUCTION      shift, and go to state 290
    LASTPRIVATE    shift, and go to state 383
    LINEAR         shift, and go to state 407
    COLLAPSE       shift, and go to state 384
    ALIGNED        shift, and go to state 408
    SAFELEN        shift, and go to state 409
    SIMDLEN        shift, and go to state 410
    NUM_TEAMS      shift, and go to state 528
    THREAD_LIMIT   shift, and go to state 529
    DIST_SCHEDULE  shift, and go to state 516

    teams_distribute_simd_clause  go to state 1236
    dist_schedule_clause          go to state 1033
    num_teams_clause              go to state 1034
    thread_limit_clause           go to state 1035
    safe_len_clause               go to state 1036
    simd_len_clause               go to state 1037
    default_clause                go to state 1038
    private_clause                go to state 1039
    first_private_clause          go to state 1040
    last_private_clause           go to state 1041
    shared_clause                 go to state 1042
    reduction_clause              go to state 1043
    linear_clause                 go to state 1044
    aligned_clause                go to state 1045
    collapse_clause               go to state 1046


State 1032

  554 teams_distribute_simd_clause_multi: teams_distribute_simd_clause_multi teams_distribute_simd_clause •

    $default  reduce using rule 554 (teams_distribute_simd_clause_multi)


State 1033

  564 teams_distribute_simd_clause: dist_schedule_clause •

    $default  reduce using rule 564 (teams_distribute_simd_clause)


State 1034

  557 teams_distribute_simd_clause: num_teams_clause •

    $default  reduce using rule 557 (teams_distribute_simd_clause)


State 1035

  558 teams_distribute_simd_clause: thread_limit_clause •

    $default  reduce using rule 558 (teams_distribute_simd_clause)


State 1036

  567 teams_distribute_simd_clause: safe_len_clause •

    $default  reduce using rule 567 (teams_distribute_simd_clause)


State 1037

  568 teams_distribute_simd_clause: simd_len_clause •

    $default  reduce using rule 568 (teams_distribute_simd_clause)


State 1038

  559 teams_distribute_simd_clause: default_clause •

    $default  reduce using rule 559 (teams_distribute_simd_clause)


State 1039

  560 teams_distribute_simd_clause: private_clause •

    $default  reduce using rule 560 (teams_distribute_simd_clause)


State 1040

  561 teams_distribute_simd_clause: first_private_clause •

    $default  reduce using rule 561 (teams_distribute_simd_clause)


State 1041

  565 teams_distribute_simd_clause: last_private_clause •

    $default  reduce using rule 565 (teams_distribute_simd_clause)


State 1042

  562 teams_distribute_simd_clause: shared_clause •

    $default  reduce using rule 562 (teams_distribute_simd_clause)


State 1043

  563 teams_distribute_simd_clause: reduction_clause •

    $default  reduce using rule 563 (teams_distribute_simd_clause)


State 1044

  569 teams_distribute_simd_clause: linear_clause •

    $default  reduce using rule 569 (teams_distribute_simd_clause)


State 1045

  570 teams_distribute_simd_clause: aligned_clause •

    $default  reduce using rule 570 (teams_distribute_simd_clause)


State 1046

  566 teams_distribute_simd_clause: collapse_clause •

    $default  reduce using rule 566 (teams_distribute_simd_clause)


State 1047

  574 teams_distribute_clause_multi: teams_distribute_clause_multi ',' teams_distribute_clause •

    $default  reduce using rule 574 (teams_distribute_clause_multi)


State 1048

   90 expression: expression • ',' assignment_expression
  917 num_teams_clause: NUM_TEAMS '(' expression • ')'

    ')'  shift, and go to state 1237
    ','  shift, and go to state 258


State 1049

   90 expression: expression • ',' assignment_expression
  918 thread_limit_clause: THREAD_LIMIT '(' expression • ')'

    ')'  shift, and go to state 1238
    ','  shift, and go to state 258


State 1050

  983 variable_list: variable_list ',' IDENTIFIER •

    $default  reduce using rule 983 (variable_list)


State 1051

  910 omp_cancel: PRAGMA OMP CANCEL type_construct_clause ',' if_clause ENDLN •

    $default  reduce using rule 910 (omp_cancel)


State 1052

  883 omp_threadprivate: PRAGMA OMP THREADPRIVATE '(' variable_list ')' ENDLN •

    $default  reduce using rule 883 (omp_threadprivate)


State 1053

   18 generic_association: C_DEFAULT ':' • assignment_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 1239


State 1054

   14 generic_selection: _GENERIC '(' assignment_expression ',' generic_assoc_list ')' •

    $default  reduce using rule 14 (generic_selection)


State 1055

   16 generic_assoc_list: generic_assoc_list ',' • generic_association

    C_DEFAULT   shift, and go to state 821
    _ATOMIC     shift, and go to state 192
    CHAR        shift, and go to state 193
    CONST       shift, and go to state 194
    DOUBLE      shift, and go to state 195
    FLOAT       shift, and go to state 196
    INT         shift, and go to state 197
    LONG        shift, and go to state 198
    SHORT       shift, and go to state 199
    BOOL        shift, and go to state 200
    SIGNED      shift, and go to state 201
    STRUCT      shift, and go to state 202
    UNION       shift, and go to state 203
    UNSIGNED    shift, and go to state 204
    _BOOL       shift, and go to state 205
    _COMPLEX    shift, and go to state 206
    _IMAGINARY  shift, and go to state 207
    VOID        shift, and go to state 208
    RESTRICT    shift, and go to state 209
    VOLATILE    shift, and go to state 210

    generic_association        go to state 1240
    type_specifier             go to state 212
    struct_or_union_specifier  go to state 213
    struct_or_union            go to state 214
    specifier_qualifier_list   go to state 215
    atomic_type_specifier      go to state 216
    type_qualifier             go to state 217
    type_name                  go to state 824


State 1056

   17 generic_association: type_name ':' • assignment_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 1241


State 1057

  108 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list '}' •

    $default  reduce using rule 108 (struct_or_union_specifier)


State 1058

   91 constant_expression: conditional_expression •

    $default  reduce using rule 91 (constant_expression)


State 1059

  190 static_assert_declaration: _STATIC_ASSERT '(' constant_expression • ',' STRING_LITERAL ')' ';'

    ','  shift, and go to state 1242


State 1060

  134 direct_declarator: '(' declarator • ')'

    ')'  shift, and go to state 1243


State 1061

  123 struct_declarator: ':' constant_expression •

    $default  reduce using rule 123 (struct_declarator)


State 1062

  122 struct_declarator_list: struct_declarator_list ',' • struct_declarator

    IDENTIFIER  shift, and go to state 830
    '('         shift, and go to state 831
    ':'         shift, and go to state 832
    '*'         shift, and go to state 323

    struct_declarator  go to state 1244
    declarator         go to state 836
    direct_declarator  go to state 837
    pointer            go to state 838


State 1063

  115 struct_declaration: specifier_qualifier_list struct_declarator_list ';' •

    $default  reduce using rule 115 (struct_declaration)


State 1064

  124 struct_declarator: declarator ':' • constant_expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 237
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 1058
    constant_expression        go to state 1245


State 1065

  144 direct_declarator: direct_declarator '(' • ')'
  145                  | direct_declarator '(' • identifier_list ')'

    IDENTIFIER  shift, and go to state 1246
    ')'         shift, and go to state 1247

    identifier_list  go to state 1248


State 1066

  135 direct_declarator: direct_declarator '[' • ']'
  136                  | direct_declarator '[' • '*' ']'
  137                  | direct_declarator '[' • C_STATIC type_qualifier_list assignment_expression ']'
  138                  | direct_declarator '[' • C_STATIC assignment_expression ']'
  139                  | direct_declarator '[' • type_qualifier_list '*' ']'
  140                  | direct_declarator '[' • type_qualifier_list C_STATIC assignment_expression ']'
  141                  | direct_declarator '[' • type_qualifier_list assignment_expression ']'
  142                  | direct_declarator '[' • type_qualifier_list ']'
  143                  | direct_declarator '[' • assignment_expression ']'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    C_STATIC        shift, and go to state 1249
    _ALIGNOF        shift, and go to state 123
    _ATOMIC         shift, and go to state 563
    FUNC_NAME       shift, and go to state 124
    CONST           shift, and go to state 194
    SIZEOF          shift, and go to state 125
    RESTRICT        shift, and go to state 209
    VOLATILE        shift, and go to state 210
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    ']'             shift, and go to state 1250
    '&'             shift, and go to state 130
    '*'             shift, and go to state 1251
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 1252
    type_qualifier             go to state 567
    type_qualifier_list        go to state 1253


State 1067

  131 declarator: pointer direct_declarator •
  135 direct_declarator: direct_declarator • '[' ']'
  136                  | direct_declarator • '[' '*' ']'
  137                  | direct_declarator • '[' C_STATIC type_qualifier_list assignment_expression ']'
  138                  | direct_declarator • '[' C_STATIC assignment_expression ']'
  139                  | direct_declarator • '[' type_qualifier_list '*' ']'
  140                  | direct_declarator • '[' type_qualifier_list C_STATIC assignment_expression ']'
  141                  | direct_declarator • '[' type_qualifier_list assignment_expression ']'
  142                  | direct_declarator • '[' type_qualifier_list ']'
  143                  | direct_declarator • '[' assignment_expression ']'
  144                  | direct_declarator • '(' ')'
  145                  | direct_declarator • '(' identifier_list ')'

    '('  shift, and go to state 1065
    '['  shift, and go to state 1066

    $default  reduce using rule 131 (declarator)


State 1068

  163 direct_abstract_declarator: '[' C_STATIC assignment_expression ']' •

    $default  reduce using rule 163 (direct_abstract_declarator)


State 1069

  162 direct_abstract_declarator: '[' C_STATIC type_qualifier_list assignment_expression • ']'

    ']'  shift, and go to state 1254


State 1070

  164 direct_abstract_declarator: '[' type_qualifier_list C_STATIC assignment_expression • ']'

    ']'  shift, and go to state 1255


State 1071

  165 direct_abstract_declarator: '[' type_qualifier_list assignment_expression ']' •

    $default  reduce using rule 165 (direct_abstract_declarator)


State 1072

  171 direct_abstract_declarator: direct_abstract_declarator '[' C_STATIC assignment_expression • ']'

    ']'  shift, and go to state 1256


State 1073

  151 type_qualifier_list: type_qualifier_list • type_qualifier
  170 direct_abstract_declarator: direct_abstract_declarator '[' C_STATIC type_qualifier_list • assignment_expression ']'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    _ATOMIC         shift, and go to state 563
    FUNC_NAME       shift, and go to state 124
    CONST           shift, and go to state 194
    SIZEOF          shift, and go to state 125
    RESTRICT        shift, and go to state 209
    VOLATILE        shift, and go to state 210
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 1257
    type_qualifier             go to state 847


State 1074

  169 direct_abstract_declarator: direct_abstract_declarator '[' '*' ']' •

    $default  reduce using rule 169 (direct_abstract_declarator)


State 1075

  175 direct_abstract_declarator: direct_abstract_declarator '[' assignment_expression ']' •

    $default  reduce using rule 175 (direct_abstract_declarator)


State 1076

  173 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list C_STATIC • assignment_expression ']'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 1258


State 1077

  174 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list ']' •

    $default  reduce using rule 174 (direct_abstract_declarator)


State 1078

  172 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list assignment_expression • ']'

    ']'  shift, and go to state 1259


State 1079

  188 designator: '[' constant_expression • ']'

    ']'  shift, and go to state 1260


State 1080

  189 designator: '.' IDENTIFIER •

    $default  reduce using rule 189 (designator)


State 1081

  178 initializer: '{' initializer_list • '}'
  179            | '{' initializer_list • ',' '}'
  183 initializer_list: initializer_list • ',' designation initializer
  184                 | initializer_list • ',' initializer

    ','  shift, and go to state 1261
    '}'  shift, and go to state 1262


State 1082

   28 postfix_expression: '(' type_name ')' '{' initializer_list ',' • '}'
  183 initializer_list: initializer_list ',' • designation initializer
  184                 | initializer_list ',' • initializer

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '['             shift, and go to state 855
    '.'             shift, and go to state 856
    '{'             shift, and go to state 857
    '}'             shift, and go to state 1263
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 858
    initializer                go to state 1264
    designation                go to state 1265
    designator_list            go to state 862
    designator                 go to state 863


State 1083

   27 postfix_expression: '(' type_name ')' '{' initializer_list '}' •

    $default  reduce using rule 27 (postfix_expression)


State 1084

  181 initializer_list: designation initializer •

    $default  reduce using rule 181 (initializer_list)


State 1085

  185 designation: designator_list '=' •

    $default  reduce using rule 185 (designation)


State 1086

  187 designator_list: designator_list designator •

    $default  reduce using rule 187 (designator_list)


State 1087

  720 parallel_for_simd_clause_multi: parallel_for_simd_clause_multi ',' parallel_for_simd_clause •

    $default  reduce using rule 720 (parallel_for_simd_clause_multi)


State 1088

  958 num_threads_clause: NUM_THREADS '(' I_CONSTANT ')' •

    $default  reduce using rule 958 (num_threads_clause)


State 1089

  960 default_clause: DEFAULT '(' SHARED ')' •

    $default  reduce using rule 960 (default_clause)


State 1090

  961 default_clause: DEFAULT '(' NONE ')' •

    $default  reduce using rule 961 (default_clause)


State 1091

  962 private_clause: PRIVATE '(' variable_list ')' •

    $default  reduce using rule 962 (private_clause)


State 1092

  963 first_private_clause: FIRSTPRIVATE '(' variable_list ')' •

    $default  reduce using rule 963 (first_private_clause)


State 1093

  965 shared_clause: SHARED '(' variable_list ')' •

    $default  reduce using rule 965 (shared_clause)


State 1094

  959 copyin_clause: COPYIN '(' variable_list ')' •

    $default  reduce using rule 959 (copyin_clause)


State 1095

  933 depend_clause: DEPEND '(' dependence_type ':' • variable_array_section_list ')'

    IDENTIFIER  shift, and go to state 946

    variable_array_section_list  go to state 1266
    array_section                go to state 948


State 1096

  991 if_clause: IF '(' expression ')' •

    $default  reduce using rule 991 (if_clause)


State 1097

  992 procbind_clause: PROC_BIND '(' MASTER ')' •

    $default  reduce using rule 992 (procbind_clause)


State 1098

  993 procbind_clause: PROC_BIND '(' CLOSE ')' •

    $default  reduce using rule 993 (procbind_clause)


State 1099

  994 procbind_clause: PROC_BIND '(' SPREAD ')' •

    $default  reduce using rule 994 (procbind_clause)


State 1100

  964 last_private_clause: LASTPRIVATE '(' variable_list ')' •

    $default  reduce using rule 964 (last_private_clause)


State 1101

  982 collapse_clause: COLLAPSE '(' expression ')' •

    $default  reduce using rule 982 (collapse_clause)


State 1102

  952 schedule_clause: SCHEDULE '(' schedule_kind ')' •

    $default  reduce using rule 952 (schedule_clause)


State 1103

  953 schedule_clause: SCHEDULE '(' schedule_kind ',' • I_CONSTANT ')'
  954                | SCHEDULE '(' schedule_kind ',' • IDENTIFIER ')'

    IDENTIFIER  shift, and go to state 1267
    I_CONSTANT  shift, and go to state 1268


State 1104

  951 ordered_clause: ORDERED '(' expression ')' •

    $default  reduce using rule 951 (ordered_clause)


State 1105

  244 optional_expression: ':' • expression

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 156
    expression                 go to state 1269


State 1106

  967 linear_clause: LINEAR '(' variable_list optional_expression • ')'

    ')'  shift, and go to state 1270


State 1107

  968 aligned_clause: ALIGNED '(' variable_list optional_expression • ')'

    ')'  shift, and go to state 1271


State 1108

  928 safe_len_clause: SAFELEN '(' expression ')' •

    $default  reduce using rule 928 (safe_len_clause)


State 1109

  929 simd_len_clause: SIMDLEN '(' I_CONSTANT ')' •

    $default  reduce using rule 929 (simd_len_clause)


State 1110

  930 final_clause: FINAL '(' expression ')' •

    $default  reduce using rule 930 (final_clause)


State 1111

  938 priority_clause: PRIORITY '(' I_CONSTANT ')' •

    $default  reduce using rule 938 (priority_clause)


State 1112

  949 copy_private_clause: COPYPRIVATE '(' variable_list ')' •

    $default  reduce using rule 949 (copy_private_clause)


State 1113

  293 target_parallel_for_simd_clause: NOWAIT •

    $default  reduce using rule 293 (target_parallel_for_simd_clause)


State 1114

  277 target_parallel_for_simd_clause: IS_DEVICE_PTR • '(' variable_list ')'

    '('  shift, and go to state 1272


State 1115

  278 target_parallel_for_simd_clause: DEFAULTMAP • '(' TOFROM ':' SCALAR ')'

    '('  shift, and go to state 1273


State 1116

  268 target_parallel_for_simd_directive: PRAGMA OMP TARGET PARALLEL FOR SIMD target_parallel_for_simd_clause_multi ENDLN •

    $default  reduce using rule 268 (target_parallel_for_simd_directive)


State 1117

  270 target_parallel_for_simd_clause_multi: target_parallel_for_simd_clause_multi ',' • target_parallel_for_simd_clause

    NUM_THREADS    shift, and go to state 359
    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 1113
    DEPEND         shift, and go to state 365
    LASTPRIVATE    shift, and go to state 383
    LINEAR         shift, and go to state 407
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    SCHEDULE       shift, and go to state 385
    ORDERED        shift, and go to state 386
    ALIGNED        shift, and go to state 408
    SAFELEN        shift, and go to state 409
    SIMDLEN        shift, and go to state 410
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 1114
    DEFAULTMAP     shift, and go to state 1115
    PROC_BIND      shift, and go to state 367

    target_parallel_for_simd_clause  go to state 1274
    device_clause                    go to state 1119
    map_clause                       go to state 1120
    safe_len_clause                  go to state 1121
    simd_len_clause                  go to state 1122
    depend_clause                    go to state 1123
    ordered_clause                   go to state 1124
    schedule_clause                  go to state 1125
    num_threads_clause               go to state 1126
    default_clause                   go to state 1127
    private_clause                   go to state 1128
    first_private_clause             go to state 1129
    last_private_clause              go to state 1130
    shared_clause                    go to state 1131
    reduction_clause                 go to state 1132
    linear_clause                    go to state 1133
    aligned_clause                   go to state 1134
    collapse_clause                  go to state 1135
    if_clause                        go to state 1136
    procbind_clause                  go to state 1137


State 1118

  269 target_parallel_for_simd_clause_multi: target_parallel_for_simd_clause_multi target_parallel_for_simd_clause •

    $default  reduce using rule 269 (target_parallel_for_simd_clause_multi)


State 1119

  272 target_parallel_for_simd_clause: device_clause •

    $default  reduce using rule 272 (target_parallel_for_simd_clause)


State 1120

  273 target_parallel_for_simd_clause: map_clause •

    $default  reduce using rule 273 (target_parallel_for_simd_clause)


State 1121

  286 target_parallel_for_simd_clause: safe_len_clause •

    $default  reduce using rule 286 (target_parallel_for_simd_clause)


State 1122

  287 target_parallel_for_simd_clause: simd_len_clause •

    $default  reduce using rule 287 (target_parallel_for_simd_clause)


State 1123

  279 target_parallel_for_simd_clause: depend_clause •

    $default  reduce using rule 279 (target_parallel_for_simd_clause)


State 1124

  285 target_parallel_for_simd_clause: ordered_clause •

    $default  reduce using rule 285 (target_parallel_for_simd_clause)


State 1125

  290 target_parallel_for_simd_clause: schedule_clause •

    $default  reduce using rule 290 (target_parallel_for_simd_clause)


State 1126

  280 target_parallel_for_simd_clause: num_threads_clause •

    $default  reduce using rule 280 (target_parallel_for_simd_clause)


State 1127

  282 target_parallel_for_simd_clause: default_clause •

    $default  reduce using rule 282 (target_parallel_for_simd_clause)


State 1128

  275 target_parallel_for_simd_clause: private_clause •

    $default  reduce using rule 275 (target_parallel_for_simd_clause)


State 1129

  276 target_parallel_for_simd_clause: first_private_clause •

    $default  reduce using rule 276 (target_parallel_for_simd_clause)


State 1130

  292 target_parallel_for_simd_clause: last_private_clause •

    $default  reduce using rule 292 (target_parallel_for_simd_clause)


State 1131

  283 target_parallel_for_simd_clause: shared_clause •

    $default  reduce using rule 283 (target_parallel_for_simd_clause)


State 1132

  284 target_parallel_for_simd_clause: reduction_clause •

    $default  reduce using rule 284 (target_parallel_for_simd_clause)


State 1133

  288 target_parallel_for_simd_clause: linear_clause •

    $default  reduce using rule 288 (target_parallel_for_simd_clause)


State 1134

  289 target_parallel_for_simd_clause: aligned_clause •

    $default  reduce using rule 289 (target_parallel_for_simd_clause)


State 1135

  291 target_parallel_for_simd_clause: collapse_clause •

    $default  reduce using rule 291 (target_parallel_for_simd_clause)


State 1136

  274 target_parallel_for_simd_clause: if_clause •

    $default  reduce using rule 274 (target_parallel_for_simd_clause)


State 1137

  281 target_parallel_for_simd_clause: procbind_clause •

    $default  reduce using rule 281 (target_parallel_for_simd_clause)


State 1138

  304 target_parallel_for_clause: IS_DEVICE_PTR '(' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 1275


State 1139

  305 target_parallel_for_clause: DEFAULTMAP '(' • TOFROM ':' SCALAR ')'

    TOFROM  shift, and go to state 1276


State 1140

  297 target_parallel_for_clause_multi: target_parallel_for_clause_multi ',' target_parallel_for_clause •

    $default  reduce using rule 297 (target_parallel_for_clause_multi)


State 1141

  327 target_parallel_clause: IS_DEVICE_PTR '(' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 1277
    ','  shift, and go to state 816


State 1142

  328 target_parallel_clause: DEFAULTMAP '(' TOFROM • ':' SCALAR ')'

    ':'  shift, and go to state 1278


State 1143

  256 target_simd_clause: IS_DEVICE_PTR '(' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 1279
    ','  shift, and go to state 816


State 1144

  257 target_simd_clause: DEFAULTMAP '(' TOFROM • ':' SCALAR ')'

    ':'  shift, and go to state 1280


State 1145

  921 device_clause: DEVICE '(' expression ')' •

    $default  reduce using rule 921 (device_clause)


State 1146

  975 array_section_subscript: '[' • array_section_plain ']'

    IDENTIFIER  shift, and go to state 1281
    I_CONSTANT  shift, and go to state 1282

    array_section_plain  go to state 1283


State 1147

  973 array_section: IDENTIFIER array_section_subscript •
  974 array_section_subscript: array_section_subscript • '[' array_section_plain ']'

    '['  shift, and go to state 1284

    $default  reduce using rule 973 (array_section)


State 1148

  919 motion_clause: TO '(' variable_array_section_list ')' •

    $default  reduce using rule 919 (motion_clause)


State 1149

  971 variable_array_section_list: variable_array_section_list ',' • IDENTIFIER
  972                            | variable_array_section_list ',' • array_section

    IDENTIFIER  shift, and go to state 1285

    array_section  go to state 1286


State 1150

  920 motion_clause: FROM '(' variable_array_section_list ')' •

    $default  reduce using rule 920 (motion_clause)


State 1151

  716 target_data_clause: USE_DEVICE_PTR '(' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 1287
    ','  shift, and go to state 816


State 1152

  892 omp_target_enter_data_clause_multi: omp_target_enter_data_clause_multi ',' omp_target_enter_data_clause •

    $default  reduce using rule 892 (omp_target_enter_data_clause_multi)


State 1153

  901 omp_target_exit_data_clause_multi: omp_target_exit_data_clause_multi ',' omp_target_exit_data_clause •

    $default  reduce using rule 901 (omp_target_exit_data_clause_multi)


State 1154

  397 target_teams_distribute_parallel_for_simd_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE PARALLEL FOR SIMD • target_teams_distribute_parallel_for_simd_clause_multi ENDLN

    $default  reduce using rule 400 (target_teams_distribute_parallel_for_simd_clause_multi)

    target_teams_distribute_parallel_for_simd_clause_multi  go to state 1288


State 1155

  459 target_teams_distribute_parallel_for_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE PARALLEL FOR target_teams_distribute_parallel_for_clause_multi • ENDLN
  460 target_teams_distribute_parallel_for_clause_multi: target_teams_distribute_parallel_for_clause_multi • target_teams_distribute_parallel_for_clause
  461                                                  | target_teams_distribute_parallel_for_clause_multi • ',' target_teams_distribute_parallel_for_clause

    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    COPYIN         shift, and go to state 364
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 1289
    DEPEND         shift, and go to state 365
    LASTPRIVATE    shift, and go to state 383
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    SCHEDULE       shift, and go to state 385
    ORDERED        shift, and go to state 386
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 1290
    DEFAULTMAP     shift, and go to state 1291
    NUM_TEAMS      shift, and go to state 528
    THREAD_LIMIT   shift, and go to state 529
    DIST_SCHEDULE  shift, and go to state 516
    PROC_BIND      shift, and go to state 367
    ENDLN          shift, and go to state 1292
    ','            shift, and go to state 1293

    target_teams_distribute_parallel_for_clause  go to state 1294
    dist_schedule_clause                         go to state 1295
    num_teams_clause                             go to state 1296
    thread_limit_clause                          go to state 1297
    device_clause                                go to state 1298
    map_clause                                   go to state 1299
    depend_clause                                go to state 1300
    ordered_clause                               go to state 1301
    schedule_clause                              go to state 1302
    copyin_clause                                go to state 1303
    default_clause                               go to state 1304
    private_clause                               go to state 1305
    first_private_clause                         go to state 1306
    last_private_clause                          go to state 1307
    shared_clause                                go to state 1308
    reduction_clause                             go to state 1309
    collapse_clause                              go to state 1310
    if_clause                                    go to state 1311
    procbind_clause                              go to state 1312


State 1156

  529 target_teams_distribute_simd_clause: NOWAIT •

    $default  reduce using rule 529 (target_teams_distribute_simd_clause)


State 1157

  514 target_teams_distribute_simd_clause: IS_DEVICE_PTR • '(' variable_list ')'

    '('  shift, and go to state 1313


State 1158

  515 target_teams_distribute_simd_clause: DEFAULTMAP • '(' TOFROM ':' SCALAR ')'

    '('  shift, and go to state 1314


State 1159

  505 target_teams_distribute_simd_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE SIMD target_teams_distribute_simd_clause_multi ENDLN •

    $default  reduce using rule 505 (target_teams_distribute_simd_directive)


State 1160

  507 target_teams_distribute_simd_clause_multi: target_teams_distribute_simd_clause_multi ',' • target_teams_distribute_simd_clause

    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 1156
    DEPEND         shift, and go to state 365
    LASTPRIVATE    shift, and go to state 383
    LINEAR         shift, and go to state 407
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    ALIGNED        shift, and go to state 408
    SAFELEN        shift, and go to state 409
    SIMDLEN        shift, and go to state 410
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 1157
    DEFAULTMAP     shift, and go to state 1158
    NUM_TEAMS      shift, and go to state 528
    THREAD_LIMIT   shift, and go to state 529
    DIST_SCHEDULE  shift, and go to state 516

    target_teams_distribute_simd_clause  go to state 1315
    dist_schedule_clause                 go to state 1162
    num_teams_clause                     go to state 1163
    thread_limit_clause                  go to state 1164
    device_clause                        go to state 1165
    map_clause                           go to state 1166
    safe_len_clause                      go to state 1167
    simd_len_clause                      go to state 1168
    depend_clause                        go to state 1169
    default_clause                       go to state 1170
    private_clause                       go to state 1171
    first_private_clause                 go to state 1172
    last_private_clause                  go to state 1173
    shared_clause                        go to state 1174
    reduction_clause                     go to state 1175
    linear_clause                        go to state 1176
    aligned_clause                       go to state 1177
    collapse_clause                      go to state 1178
    if_clause                            go to state 1179


State 1161

  506 target_teams_distribute_simd_clause_multi: target_teams_distribute_simd_clause_multi target_teams_distribute_simd_clause •

    $default  reduce using rule 506 (target_teams_distribute_simd_clause_multi)


State 1162

  522 target_teams_distribute_simd_clause: dist_schedule_clause •

    $default  reduce using rule 522 (target_teams_distribute_simd_clause)


State 1163

  517 target_teams_distribute_simd_clause: num_teams_clause •

    $default  reduce using rule 517 (target_teams_distribute_simd_clause)


State 1164

  518 target_teams_distribute_simd_clause: thread_limit_clause •

    $default  reduce using rule 518 (target_teams_distribute_simd_clause)


State 1165

  509 target_teams_distribute_simd_clause: device_clause •

    $default  reduce using rule 509 (target_teams_distribute_simd_clause)


State 1166

  510 target_teams_distribute_simd_clause: map_clause •

    $default  reduce using rule 510 (target_teams_distribute_simd_clause)


State 1167

  525 target_teams_distribute_simd_clause: safe_len_clause •

    $default  reduce using rule 525 (target_teams_distribute_simd_clause)


State 1168

  526 target_teams_distribute_simd_clause: simd_len_clause •

    $default  reduce using rule 526 (target_teams_distribute_simd_clause)


State 1169

  516 target_teams_distribute_simd_clause: depend_clause •

    $default  reduce using rule 516 (target_teams_distribute_simd_clause)


State 1170

  519 target_teams_distribute_simd_clause: default_clause •

    $default  reduce using rule 519 (target_teams_distribute_simd_clause)


State 1171

  512 target_teams_distribute_simd_clause: private_clause •

    $default  reduce using rule 512 (target_teams_distribute_simd_clause)


State 1172

  513 target_teams_distribute_simd_clause: first_private_clause •

    $default  reduce using rule 513 (target_teams_distribute_simd_clause)


State 1173

  523 target_teams_distribute_simd_clause: last_private_clause •

    $default  reduce using rule 523 (target_teams_distribute_simd_clause)


State 1174

  520 target_teams_distribute_simd_clause: shared_clause •

    $default  reduce using rule 520 (target_teams_distribute_simd_clause)


State 1175

  521 target_teams_distribute_simd_clause: reduction_clause •

    $default  reduce using rule 521 (target_teams_distribute_simd_clause)


State 1176

  527 target_teams_distribute_simd_clause: linear_clause •

    $default  reduce using rule 527 (target_teams_distribute_simd_clause)


State 1177

  528 target_teams_distribute_simd_clause: aligned_clause •

    $default  reduce using rule 528 (target_teams_distribute_simd_clause)


State 1178

  524 target_teams_distribute_simd_clause: collapse_clause •

    $default  reduce using rule 524 (target_teams_distribute_simd_clause)


State 1179

  511 target_teams_distribute_simd_clause: if_clause •

    $default  reduce using rule 511 (target_teams_distribute_simd_clause)


State 1180

  540 target_teams_distribute_clause: IS_DEVICE_PTR '(' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 1316


State 1181

  541 target_teams_distribute_clause: DEFAULTMAP '(' • TOFROM ':' SCALAR ')'

    TOFROM  shift, and go to state 1317


State 1182

  533 target_teams_distribute_clause_multi: target_teams_distribute_clause_multi ',' target_teams_distribute_clause •

    $default  reduce using rule 533 (target_teams_distribute_clause_multi)


State 1183

  596 target_teams_clause: IS_DEVICE_PTR '(' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 1318
    ','  shift, and go to state 816


State 1184

  597 target_teams_clause: DEFAULTMAP '(' TOFROM • ':' SCALAR ')'

    ':'  shift, and go to state 1319


State 1185

  922 map_clause: MAP '(' map_type ':' • variable_array_section_list ')'

    IDENTIFIER  shift, and go to state 946

    variable_array_section_list  go to state 1320
    array_section                go to state 948


State 1186

  923 map_clause: MAP '(' variable_array_section_list ')' •

    $default  reduce using rule 923 (map_clause)


State 1187

  704 target_clause: IS_DEVICE_PTR '(' variable_list ')' •

    $default  reduce using rule 704 (target_clause)


State 1188

  705 target_clause: DEFAULTMAP '(' TOFROM ':' • SCALAR ')'

    SCALAR  shift, and go to state 1321


State 1189

   30 argument_expression_list: argument_expression_list • ',' assignment_expression
  914 uniform_clause: UNIFORM '(' argument_expression_list • ')'

    ')'  shift, and go to state 1322
    ','  shift, and go to state 577


State 1190

  966 reduction_clause: REDUCTION '(' reduction_identifier ':' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 1323
    ','  shift, and go to state 816


State 1191

  912 grainsize_clause: GRAINSIZE '(' I_CONSTANT ')' •

    $default  reduce using rule 912 (grainsize_clause)


State 1192

  913 num_tasks_clause: NUM_TASKS '(' I_CONSTANT ')' •

    $default  reduce using rule 913 (num_tasks_clause)


State 1193

  606 distribute_parallel_for_simd_directive: PRAGMA OMP DISTRIBUTE PARALLEL FOR SIMD distribute_parallel_for_simd_clause_multi ENDLN •

    $default  reduce using rule 606 (distribute_parallel_for_simd_directive)


State 1194

  608 distribute_parallel_for_simd_clause_multi: distribute_parallel_for_simd_clause_multi ',' • distribute_parallel_for_simd_clause

    NUM_THREADS    shift, and go to state 359
    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    COPYIN         shift, and go to state 364
    REDUCTION      shift, and go to state 290
    LASTPRIVATE    shift, and go to state 383
    LINEAR         shift, and go to state 407
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    SCHEDULE       shift, and go to state 385
    ORDERED        shift, and go to state 386
    ALIGNED        shift, and go to state 408
    SAFELEN        shift, and go to state 409
    SIMDLEN        shift, and go to state 410
    DIST_SCHEDULE  shift, and go to state 516
    PROC_BIND      shift, and go to state 367

    distribute_parallel_for_simd_clause  go to state 1324
    dist_schedule_clause                 go to state 1196
    safe_len_clause                      go to state 1197
    simd_len_clause                      go to state 1198
    ordered_clause                       go to state 1199
    schedule_clause                      go to state 1200
    num_threads_clause                   go to state 1201
    copyin_clause                        go to state 1202
    default_clause                       go to state 1203
    private_clause                       go to state 1204
    first_private_clause                 go to state 1205
    last_private_clause                  go to state 1206
    shared_clause                        go to state 1207
    reduction_clause                     go to state 1208
    linear_clause                        go to state 1209
    aligned_clause                       go to state 1210
    collapse_clause                      go to state 1211
    if_clause                            go to state 1212
    procbind_clause                      go to state 1213


State 1195

  607 distribute_parallel_for_simd_clause_multi: distribute_parallel_for_simd_clause_multi distribute_parallel_for_simd_clause •

    $default  reduce using rule 607 (distribute_parallel_for_simd_clause_multi)


State 1196

  610 distribute_parallel_for_simd_clause: dist_schedule_clause •

    $default  reduce using rule 610 (distribute_parallel_for_simd_clause)


State 1197

  621 distribute_parallel_for_simd_clause: safe_len_clause •

    $default  reduce using rule 621 (distribute_parallel_for_simd_clause)


State 1198

  622 distribute_parallel_for_simd_clause: simd_len_clause •

    $default  reduce using rule 622 (distribute_parallel_for_simd_clause)


State 1199

  620 distribute_parallel_for_simd_clause: ordered_clause •

    $default  reduce using rule 620 (distribute_parallel_for_simd_clause)


State 1200

  625 distribute_parallel_for_simd_clause: schedule_clause •

    $default  reduce using rule 625 (distribute_parallel_for_simd_clause)


State 1201

  612 distribute_parallel_for_simd_clause: num_threads_clause •

    $default  reduce using rule 612 (distribute_parallel_for_simd_clause)


State 1202

  613 distribute_parallel_for_simd_clause: copyin_clause •

    $default  reduce using rule 613 (distribute_parallel_for_simd_clause)


State 1203

  615 distribute_parallel_for_simd_clause: default_clause •

    $default  reduce using rule 615 (distribute_parallel_for_simd_clause)


State 1204

  616 distribute_parallel_for_simd_clause: private_clause •

    $default  reduce using rule 616 (distribute_parallel_for_simd_clause)


State 1205

  617 distribute_parallel_for_simd_clause: first_private_clause •

    $default  reduce using rule 617 (distribute_parallel_for_simd_clause)


State 1206

  627 distribute_parallel_for_simd_clause: last_private_clause •

    $default  reduce using rule 627 (distribute_parallel_for_simd_clause)


State 1207

  618 distribute_parallel_for_simd_clause: shared_clause •

    $default  reduce using rule 618 (distribute_parallel_for_simd_clause)


State 1208

  619 distribute_parallel_for_simd_clause: reduction_clause •

    $default  reduce using rule 619 (distribute_parallel_for_simd_clause)


State 1209

  623 distribute_parallel_for_simd_clause: linear_clause •

    $default  reduce using rule 623 (distribute_parallel_for_simd_clause)


State 1210

  624 distribute_parallel_for_simd_clause: aligned_clause •

    $default  reduce using rule 624 (distribute_parallel_for_simd_clause)


State 1211

  626 distribute_parallel_for_simd_clause: collapse_clause •

    $default  reduce using rule 626 (distribute_parallel_for_simd_clause)


State 1212

  611 distribute_parallel_for_simd_clause: if_clause •

    $default  reduce using rule 611 (distribute_parallel_for_simd_clause)


State 1213

  614 distribute_parallel_for_simd_clause: procbind_clause •

    $default  reduce using rule 614 (distribute_parallel_for_simd_clause)


State 1214

  631 distribute_parallel_for_clause_multi: distribute_parallel_for_clause_multi ',' distribute_parallel_for_clause •

    $default  reduce using rule 631 (distribute_parallel_for_clause_multi)


State 1215

  915 dist_schedule_clause: DIST_SCHEDULE '(' STATIC ')' •

    $default  reduce using rule 915 (dist_schedule_clause)


State 1216

  916 dist_schedule_clause: DIST_SCHEDULE '(' STATIC ',' • expression ')'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 156
    expression                 go to state 1325


State 1217

  428 teams_distribute_parallel_for_simd_directive: PRAGMA OMP TEAMS DISTRIBUTE PARALLEL FOR SIMD teams_distribute_parallel_for_simd_clause_multi • ENDLN
  429 teams_distribute_parallel_for_simd_clause_multi: teams_distribute_parallel_for_simd_clause_multi • teams_distribute_parallel_for_simd_clause
  430                                                | teams_distribute_parallel_for_simd_clause_multi • ',' teams_distribute_parallel_for_simd_clause

    NUM_THREADS    shift, and go to state 359
    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    COPYIN         shift, and go to state 364
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 1326
    DEPEND         shift, and go to state 365
    LASTPRIVATE    shift, and go to state 383
    LINEAR         shift, and go to state 407
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    SCHEDULE       shift, and go to state 385
    ORDERED        shift, and go to state 386
    ALIGNED        shift, and go to state 408
    SAFELEN        shift, and go to state 409
    SIMDLEN        shift, and go to state 410
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 1327
    DEFAULTMAP     shift, and go to state 1328
    NUM_TEAMS      shift, and go to state 528
    THREAD_LIMIT   shift, and go to state 529
    DIST_SCHEDULE  shift, and go to state 516
    PROC_BIND      shift, and go to state 367
    ENDLN          shift, and go to state 1329
    ','            shift, and go to state 1330

    teams_distribute_parallel_for_simd_clause  go to state 1331
    dist_schedule_clause                       go to state 1332
    num_teams_clause                           go to state 1333
    thread_limit_clause                        go to state 1334
    device_clause                              go to state 1335
    map_clause                                 go to state 1336
    safe_len_clause                            go to state 1337
    simd_len_clause                            go to state 1338
    depend_clause                              go to state 1339
    ordered_clause                             go to state 1340
    schedule_clause                            go to state 1341
    num_threads_clause                         go to state 1342
    copyin_clause                              go to state 1343
    default_clause                             go to state 1344
    private_clause                             go to state 1345
    first_private_clause                       go to state 1346
    last_private_clause                        go to state 1347
    shared_clause                              go to state 1348
    reduction_clause                           go to state 1349
    linear_clause                              go to state 1350
    aligned_clause                             go to state 1351
    collapse_clause                            go to state 1352
    if_clause                                  go to state 1353
    procbind_clause                            go to state 1354


State 1218

  485 teams_distribute_parallel_for_directive: PRAGMA OMP TEAMS DISTRIBUTE PARALLEL FOR teams_distribute_parallel_for_clause_multi ENDLN •

    $default  reduce using rule 485 (teams_distribute_parallel_for_directive)


State 1219

  487 teams_distribute_parallel_for_clause_multi: teams_distribute_parallel_for_clause_multi ',' • teams_distribute_parallel_for_clause

    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    COPYIN         shift, and go to state 364
    REDUCTION      shift, and go to state 290
    LASTPRIVATE    shift, and go to state 383
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    SCHEDULE       shift, and go to state 385
    ORDERED        shift, and go to state 386
    NUM_TEAMS      shift, and go to state 528
    THREAD_LIMIT   shift, and go to state 529
    DIST_SCHEDULE  shift, and go to state 516
    PROC_BIND      shift, and go to state 367

    teams_distribute_parallel_for_clause  go to state 1355
    dist_schedule_clause                  go to state 1221
    num_teams_clause                      go to state 1222
    thread_limit_clause                   go to state 1223
    ordered_clause                        go to state 1224
    schedule_clause                       go to state 1225
    copyin_clause                         go to state 1226
    default_clause                        go to state 1227
    private_clause                        go to state 1228
    first_private_clause                  go to state 1229
    last_private_clause                   go to state 1230
    shared_clause                         go to state 1231
    reduction_clause                      go to state 1232
    collapse_clause                       go to state 1233
    if_clause                             go to state 1234
    procbind_clause                       go to state 1235


State 1220

  486 teams_distribute_parallel_for_clause_multi: teams_distribute_parallel_for_clause_multi teams_distribute_parallel_for_clause •

    $default  reduce using rule 486 (teams_distribute_parallel_for_clause_multi)


State 1221

  503 teams_distribute_parallel_for_clause: dist_schedule_clause •

    $default  reduce using rule 503 (teams_distribute_parallel_for_clause)


State 1222

  489 teams_distribute_parallel_for_clause: num_teams_clause •

    $default  reduce using rule 489 (teams_distribute_parallel_for_clause)


State 1223

  490 teams_distribute_parallel_for_clause: thread_limit_clause •

    $default  reduce using rule 490 (teams_distribute_parallel_for_clause)


State 1224

  499 teams_distribute_parallel_for_clause: ordered_clause •

    $default  reduce using rule 499 (teams_distribute_parallel_for_clause)


State 1225

  500 teams_distribute_parallel_for_clause: schedule_clause •

    $default  reduce using rule 500 (teams_distribute_parallel_for_clause)


State 1226

  497 teams_distribute_parallel_for_clause: copyin_clause •

    $default  reduce using rule 497 (teams_distribute_parallel_for_clause)


State 1227

  491 teams_distribute_parallel_for_clause: default_clause •

    $default  reduce using rule 491 (teams_distribute_parallel_for_clause)


State 1228

  492 teams_distribute_parallel_for_clause: private_clause •

    $default  reduce using rule 492 (teams_distribute_parallel_for_clause)


State 1229

  493 teams_distribute_parallel_for_clause: first_private_clause •

    $default  reduce using rule 493 (teams_distribute_parallel_for_clause)


State 1230

  502 teams_distribute_parallel_for_clause: last_private_clause •

    $default  reduce using rule 502 (teams_distribute_parallel_for_clause)


State 1231

  494 teams_distribute_parallel_for_clause: shared_clause •

    $default  reduce using rule 494 (teams_distribute_parallel_for_clause)


State 1232

  495 teams_distribute_parallel_for_clause: reduction_clause •

    $default  reduce using rule 495 (teams_distribute_parallel_for_clause)


State 1233

  501 teams_distribute_parallel_for_clause: collapse_clause •

    $default  reduce using rule 501 (teams_distribute_parallel_for_clause)


State 1234

  496 teams_distribute_parallel_for_clause: if_clause •

    $default  reduce using rule 496 (teams_distribute_parallel_for_clause)


State 1235

  498 teams_distribute_parallel_for_clause: procbind_clause •

    $default  reduce using rule 498 (teams_distribute_parallel_for_clause)


State 1236

  555 teams_distribute_simd_clause_multi: teams_distribute_simd_clause_multi ',' teams_distribute_simd_clause •

    $default  reduce using rule 555 (teams_distribute_simd_clause_multi)


State 1237

  917 num_teams_clause: NUM_TEAMS '(' expression ')' •

    $default  reduce using rule 917 (num_teams_clause)


State 1238

  918 thread_limit_clause: THREAD_LIMIT '(' expression ')' •

    $default  reduce using rule 918 (thread_limit_clause)


State 1239

   18 generic_association: C_DEFAULT ':' assignment_expression •

    $default  reduce using rule 18 (generic_association)


State 1240

   16 generic_assoc_list: generic_assoc_list ',' generic_association •

    $default  reduce using rule 16 (generic_assoc_list)


State 1241

   17 generic_association: type_name ':' assignment_expression •

    $default  reduce using rule 17 (generic_association)


State 1242

  190 static_assert_declaration: _STATIC_ASSERT '(' constant_expression ',' • STRING_LITERAL ')' ';'

    STRING_LITERAL  shift, and go to state 1356


State 1243

  134 direct_declarator: '(' declarator ')' •

    $default  reduce using rule 134 (direct_declarator)


State 1244

  122 struct_declarator_list: struct_declarator_list ',' struct_declarator •

    $default  reduce using rule 122 (struct_declarator_list)


State 1245

  124 struct_declarator: declarator ':' constant_expression •

    $default  reduce using rule 124 (struct_declarator)


State 1246

  152 identifier_list: IDENTIFIER •

    $default  reduce using rule 152 (identifier_list)


State 1247

  144 direct_declarator: direct_declarator '(' ')' •

    $default  reduce using rule 144 (direct_declarator)


State 1248

  145 direct_declarator: direct_declarator '(' identifier_list • ')'
  153 identifier_list: identifier_list • ',' IDENTIFIER

    ')'  shift, and go to state 1357
    ','  shift, and go to state 1358


State 1249

  137 direct_declarator: direct_declarator '[' C_STATIC • type_qualifier_list assignment_expression ']'
  138                  | direct_declarator '[' C_STATIC • assignment_expression ']'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    _ATOMIC         shift, and go to state 563
    FUNC_NAME       shift, and go to state 124
    CONST           shift, and go to state 194
    SIZEOF          shift, and go to state 125
    RESTRICT        shift, and go to state 209
    VOLATILE        shift, and go to state 210
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 1359
    type_qualifier             go to state 567
    type_qualifier_list        go to state 1360


State 1250

  135 direct_declarator: direct_declarator '[' ']' •

    $default  reduce using rule 135 (direct_declarator)


State 1251

   39 unary_operator: '*' •
  136 direct_declarator: direct_declarator '[' '*' • ']'

    ']'  shift, and go to state 1361

    $default  reduce using rule 39 (unary_operator)


State 1252

  143 direct_declarator: direct_declarator '[' assignment_expression • ']'

    ']'  shift, and go to state 1362


State 1253

  139 direct_declarator: direct_declarator '[' type_qualifier_list • '*' ']'
  140                  | direct_declarator '[' type_qualifier_list • C_STATIC assignment_expression ']'
  141                  | direct_declarator '[' type_qualifier_list • assignment_expression ']'
  142                  | direct_declarator '[' type_qualifier_list • ']'
  151 type_qualifier_list: type_qualifier_list • type_qualifier

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    C_STATIC        shift, and go to state 1363
    _ALIGNOF        shift, and go to state 123
    _ATOMIC         shift, and go to state 563
    FUNC_NAME       shift, and go to state 124
    CONST           shift, and go to state 194
    SIZEOF          shift, and go to state 125
    RESTRICT        shift, and go to state 209
    VOLATILE        shift, and go to state 210
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    ']'             shift, and go to state 1364
    '&'             shift, and go to state 130
    '*'             shift, and go to state 1365
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 1366
    type_qualifier             go to state 847


State 1254

  162 direct_abstract_declarator: '[' C_STATIC type_qualifier_list assignment_expression ']' •

    $default  reduce using rule 162 (direct_abstract_declarator)


State 1255

  164 direct_abstract_declarator: '[' type_qualifier_list C_STATIC assignment_expression ']' •

    $default  reduce using rule 164 (direct_abstract_declarator)


State 1256

  171 direct_abstract_declarator: direct_abstract_declarator '[' C_STATIC assignment_expression ']' •

    $default  reduce using rule 171 (direct_abstract_declarator)


State 1257

  170 direct_abstract_declarator: direct_abstract_declarator '[' C_STATIC type_qualifier_list assignment_expression • ']'

    ']'  shift, and go to state 1367


State 1258

  173 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list C_STATIC assignment_expression • ']'

    ']'  shift, and go to state 1368


State 1259

  172 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list assignment_expression ']' •

    $default  reduce using rule 172 (direct_abstract_declarator)


State 1260

  188 designator: '[' constant_expression ']' •

    $default  reduce using rule 188 (designator)


State 1261

  179 initializer: '{' initializer_list ',' • '}'
  183 initializer_list: initializer_list ',' • designation initializer
  184                 | initializer_list ',' • initializer

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '['             shift, and go to state 855
    '.'             shift, and go to state 856
    '{'             shift, and go to state 857
    '}'             shift, and go to state 1369
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 858
    initializer                go to state 1264
    designation                go to state 1265
    designator_list            go to state 862
    designator                 go to state 863


State 1262

  178 initializer: '{' initializer_list '}' •

    $default  reduce using rule 178 (initializer)


State 1263

   28 postfix_expression: '(' type_name ')' '{' initializer_list ',' '}' •

    $default  reduce using rule 28 (postfix_expression)


State 1264

  184 initializer_list: initializer_list ',' initializer •

    $default  reduce using rule 184 (initializer_list)


State 1265

  183 initializer_list: initializer_list ',' designation • initializer

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '{'             shift, and go to state 857
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 858
    initializer                go to state 1370


State 1266

  933 depend_clause: DEPEND '(' dependence_type ':' variable_array_section_list • ')'
  971 variable_array_section_list: variable_array_section_list • ',' IDENTIFIER
  972                            | variable_array_section_list • ',' array_section

    ')'  shift, and go to state 1371
    ','  shift, and go to state 1149


State 1267

  954 schedule_clause: SCHEDULE '(' schedule_kind ',' IDENTIFIER • ')'

    ')'  shift, and go to state 1372


State 1268

  953 schedule_clause: SCHEDULE '(' schedule_kind ',' I_CONSTANT • ')'

    ')'  shift, and go to state 1373


State 1269

   90 expression: expression • ',' assignment_expression
  244 optional_expression: ':' expression •

    ','  shift, and go to state 258

    $default  reduce using rule 244 (optional_expression)


State 1270

  967 linear_clause: LINEAR '(' variable_list optional_expression ')' •

    $default  reduce using rule 967 (linear_clause)


State 1271

  968 aligned_clause: ALIGNED '(' variable_list optional_expression ')' •

    $default  reduce using rule 968 (aligned_clause)


State 1272

  277 target_parallel_for_simd_clause: IS_DEVICE_PTR '(' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 1374


State 1273

  278 target_parallel_for_simd_clause: DEFAULTMAP '(' • TOFROM ':' SCALAR ')'

    TOFROM  shift, and go to state 1375


State 1274

  270 target_parallel_for_simd_clause_multi: target_parallel_for_simd_clause_multi ',' target_parallel_for_simd_clause •

    $default  reduce using rule 270 (target_parallel_for_simd_clause_multi)


State 1275

  304 target_parallel_for_clause: IS_DEVICE_PTR '(' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 1376
    ','  shift, and go to state 816


State 1276

  305 target_parallel_for_clause: DEFAULTMAP '(' TOFROM • ':' SCALAR ')'

    ':'  shift, and go to state 1377


State 1277

  327 target_parallel_clause: IS_DEVICE_PTR '(' variable_list ')' •

    $default  reduce using rule 327 (target_parallel_clause)


State 1278

  328 target_parallel_clause: DEFAULTMAP '(' TOFROM ':' • SCALAR ')'

    SCALAR  shift, and go to state 1378


State 1279

  256 target_simd_clause: IS_DEVICE_PTR '(' variable_list ')' •

    $default  reduce using rule 256 (target_simd_clause)


State 1280

  257 target_simd_clause: DEFAULTMAP '(' TOFROM ':' • SCALAR ')'

    SCALAR  shift, and go to state 1379


State 1281

  976 array_section_plain: IDENTIFIER •
  978                    | IDENTIFIER • ':' IDENTIFIER
  979                    | IDENTIFIER • ':' I_CONSTANT

    ':'  shift, and go to state 1380

    $default  reduce using rule 976 (array_section_plain)


State 1282

  977 array_section_plain: I_CONSTANT •
  980                    | I_CONSTANT • ':' IDENTIFIER
  981                    | I_CONSTANT • ':' I_CONSTANT

    ':'  shift, and go to state 1381

    $default  reduce using rule 977 (array_section_plain)


State 1283

  975 array_section_subscript: '[' array_section_plain • ']'

    ']'  shift, and go to state 1382


State 1284

  974 array_section_subscript: array_section_subscript '[' • array_section_plain ']'

    IDENTIFIER  shift, and go to state 1281
    I_CONSTANT  shift, and go to state 1282

    array_section_plain  go to state 1383


State 1285

  971 variable_array_section_list: variable_array_section_list ',' IDENTIFIER •
  973 array_section: IDENTIFIER • array_section_subscript

    '['  shift, and go to state 1146

    $default  reduce using rule 971 (variable_array_section_list)

    array_section_subscript  go to state 1147


State 1286

  972 variable_array_section_list: variable_array_section_list ',' array_section •

    $default  reduce using rule 972 (variable_array_section_list)


State 1287

  716 target_data_clause: USE_DEVICE_PTR '(' variable_list ')' •

    $default  reduce using rule 716 (target_data_clause)


State 1288

  397 target_teams_distribute_parallel_for_simd_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE PARALLEL FOR SIMD target_teams_distribute_parallel_for_simd_clause_multi • ENDLN
  398 target_teams_distribute_parallel_for_simd_clause_multi: target_teams_distribute_parallel_for_simd_clause_multi • target_teams_distribute_parallel_for_simd_clause
  399                                                       | target_teams_distribute_parallel_for_simd_clause_multi • ',' target_teams_distribute_parallel_for_simd_clause

    NUM_THREADS    shift, and go to state 359
    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    COPYIN         shift, and go to state 364
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 1384
    DEPEND         shift, and go to state 365
    LASTPRIVATE    shift, and go to state 383
    LINEAR         shift, and go to state 407
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    SCHEDULE       shift, and go to state 385
    ORDERED        shift, and go to state 386
    ALIGNED        shift, and go to state 408
    SAFELEN        shift, and go to state 409
    SIMDLEN        shift, and go to state 410
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 1385
    DEFAULTMAP     shift, and go to state 1386
    NUM_TEAMS      shift, and go to state 528
    THREAD_LIMIT   shift, and go to state 529
    DIST_SCHEDULE  shift, and go to state 516
    PROC_BIND      shift, and go to state 367
    ENDLN          shift, and go to state 1387
    ','            shift, and go to state 1388

    target_teams_distribute_parallel_for_simd_clause  go to state 1389
    dist_schedule_clause                              go to state 1390
    num_teams_clause                                  go to state 1391
    thread_limit_clause                               go to state 1392
    device_clause                                     go to state 1393
    map_clause                                        go to state 1394
    safe_len_clause                                   go to state 1395
    simd_len_clause                                   go to state 1396
    depend_clause                                     go to state 1397
    ordered_clause                                    go to state 1398
    schedule_clause                                   go to state 1399
    num_threads_clause                                go to state 1400
    copyin_clause                                     go to state 1401
    default_clause                                    go to state 1402
    private_clause                                    go to state 1403
    first_private_clause                              go to state 1404
    last_private_clause                               go to state 1405
    shared_clause                                     go to state 1406
    reduction_clause                                  go to state 1407
    linear_clause                                     go to state 1408
    aligned_clause                                    go to state 1409
    collapse_clause                                   go to state 1410
    if_clause                                         go to state 1411
    procbind_clause                                   go to state 1412


State 1289

  483 target_teams_distribute_parallel_for_clause: NOWAIT •

    $default  reduce using rule 483 (target_teams_distribute_parallel_for_clause)


State 1290

  480 target_teams_distribute_parallel_for_clause: IS_DEVICE_PTR • '(' variable_list ')'

    '('  shift, and go to state 1413


State 1291

  481 target_teams_distribute_parallel_for_clause: DEFAULTMAP • '(' TOFROM ':' SCALAR ')'

    '('  shift, and go to state 1414


State 1292

  459 target_teams_distribute_parallel_for_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE PARALLEL FOR target_teams_distribute_parallel_for_clause_multi ENDLN •

    $default  reduce using rule 459 (target_teams_distribute_parallel_for_directive)


State 1293

  461 target_teams_distribute_parallel_for_clause_multi: target_teams_distribute_parallel_for_clause_multi ',' • target_teams_distribute_parallel_for_clause

    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    COPYIN         shift, and go to state 364
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 1289
    DEPEND         shift, and go to state 365
    LASTPRIVATE    shift, and go to state 383
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    SCHEDULE       shift, and go to state 385
    ORDERED        shift, and go to state 386
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 1290
    DEFAULTMAP     shift, and go to state 1291
    NUM_TEAMS      shift, and go to state 528
    THREAD_LIMIT   shift, and go to state 529
    DIST_SCHEDULE  shift, and go to state 516
    PROC_BIND      shift, and go to state 367

    target_teams_distribute_parallel_for_clause  go to state 1415
    dist_schedule_clause                         go to state 1295
    num_teams_clause                             go to state 1296
    thread_limit_clause                          go to state 1297
    device_clause                                go to state 1298
    map_clause                                   go to state 1299
    depend_clause                                go to state 1300
    ordered_clause                               go to state 1301
    schedule_clause                              go to state 1302
    copyin_clause                                go to state 1303
    default_clause                               go to state 1304
    private_clause                               go to state 1305
    first_private_clause                         go to state 1306
    last_private_clause                          go to state 1307
    shared_clause                                go to state 1308
    reduction_clause                             go to state 1309
    collapse_clause                              go to state 1310
    if_clause                                    go to state 1311
    procbind_clause                              go to state 1312


State 1294

  460 target_teams_distribute_parallel_for_clause_multi: target_teams_distribute_parallel_for_clause_multi target_teams_distribute_parallel_for_clause •

    $default  reduce using rule 460 (target_teams_distribute_parallel_for_clause_multi)


State 1295

  477 target_teams_distribute_parallel_for_clause: dist_schedule_clause •

    $default  reduce using rule 477 (target_teams_distribute_parallel_for_clause)


State 1296

  463 target_teams_distribute_parallel_for_clause: num_teams_clause •

    $default  reduce using rule 463 (target_teams_distribute_parallel_for_clause)


State 1297

  464 target_teams_distribute_parallel_for_clause: thread_limit_clause •

    $default  reduce using rule 464 (target_teams_distribute_parallel_for_clause)


State 1298

  478 target_teams_distribute_parallel_for_clause: device_clause •

    $default  reduce using rule 478 (target_teams_distribute_parallel_for_clause)


State 1299

  479 target_teams_distribute_parallel_for_clause: map_clause •

    $default  reduce using rule 479 (target_teams_distribute_parallel_for_clause)


State 1300

  482 target_teams_distribute_parallel_for_clause: depend_clause •

    $default  reduce using rule 482 (target_teams_distribute_parallel_for_clause)


State 1301

  473 target_teams_distribute_parallel_for_clause: ordered_clause •

    $default  reduce using rule 473 (target_teams_distribute_parallel_for_clause)


State 1302

  474 target_teams_distribute_parallel_for_clause: schedule_clause •

    $default  reduce using rule 474 (target_teams_distribute_parallel_for_clause)


State 1303

  471 target_teams_distribute_parallel_for_clause: copyin_clause •

    $default  reduce using rule 471 (target_teams_distribute_parallel_for_clause)


State 1304

  465 target_teams_distribute_parallel_for_clause: default_clause •

    $default  reduce using rule 465 (target_teams_distribute_parallel_for_clause)


State 1305

  466 target_teams_distribute_parallel_for_clause: private_clause •

    $default  reduce using rule 466 (target_teams_distribute_parallel_for_clause)


State 1306

  467 target_teams_distribute_parallel_for_clause: first_private_clause •

    $default  reduce using rule 467 (target_teams_distribute_parallel_for_clause)


State 1307

  476 target_teams_distribute_parallel_for_clause: last_private_clause •

    $default  reduce using rule 476 (target_teams_distribute_parallel_for_clause)


State 1308

  468 target_teams_distribute_parallel_for_clause: shared_clause •

    $default  reduce using rule 468 (target_teams_distribute_parallel_for_clause)


State 1309

  469 target_teams_distribute_parallel_for_clause: reduction_clause •

    $default  reduce using rule 469 (target_teams_distribute_parallel_for_clause)


State 1310

  475 target_teams_distribute_parallel_for_clause: collapse_clause •

    $default  reduce using rule 475 (target_teams_distribute_parallel_for_clause)


State 1311

  470 target_teams_distribute_parallel_for_clause: if_clause •

    $default  reduce using rule 470 (target_teams_distribute_parallel_for_clause)


State 1312

  472 target_teams_distribute_parallel_for_clause: procbind_clause •

    $default  reduce using rule 472 (target_teams_distribute_parallel_for_clause)


State 1313

  514 target_teams_distribute_simd_clause: IS_DEVICE_PTR '(' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 1416


State 1314

  515 target_teams_distribute_simd_clause: DEFAULTMAP '(' • TOFROM ':' SCALAR ')'

    TOFROM  shift, and go to state 1417


State 1315

  507 target_teams_distribute_simd_clause_multi: target_teams_distribute_simd_clause_multi ',' target_teams_distribute_simd_clause •

    $default  reduce using rule 507 (target_teams_distribute_simd_clause_multi)


State 1316

  540 target_teams_distribute_clause: IS_DEVICE_PTR '(' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 1418
    ','  shift, and go to state 816


State 1317

  541 target_teams_distribute_clause: DEFAULTMAP '(' TOFROM • ':' SCALAR ')'

    ':'  shift, and go to state 1419


State 1318

  596 target_teams_clause: IS_DEVICE_PTR '(' variable_list ')' •

    $default  reduce using rule 596 (target_teams_clause)


State 1319

  597 target_teams_clause: DEFAULTMAP '(' TOFROM ':' • SCALAR ')'

    SCALAR  shift, and go to state 1420


State 1320

  922 map_clause: MAP '(' map_type ':' variable_array_section_list • ')'
  971 variable_array_section_list: variable_array_section_list • ',' IDENTIFIER
  972                            | variable_array_section_list • ',' array_section

    ')'  shift, and go to state 1421
    ','  shift, and go to state 1149


State 1321

  705 target_clause: DEFAULTMAP '(' TOFROM ':' SCALAR • ')'

    ')'  shift, and go to state 1422


State 1322

  914 uniform_clause: UNIFORM '(' argument_expression_list ')' •

    $default  reduce using rule 914 (uniform_clause)


State 1323

  966 reduction_clause: REDUCTION '(' reduction_identifier ':' variable_list ')' •

    $default  reduce using rule 966 (reduction_clause)


State 1324

  608 distribute_parallel_for_simd_clause_multi: distribute_parallel_for_simd_clause_multi ',' distribute_parallel_for_simd_clause •

    $default  reduce using rule 608 (distribute_parallel_for_simd_clause_multi)


State 1325

   90 expression: expression • ',' assignment_expression
  916 dist_schedule_clause: DIST_SCHEDULE '(' STATIC ',' expression • ')'

    ')'  shift, and go to state 1423
    ','  shift, and go to state 258


State 1326

  457 teams_distribute_parallel_for_simd_clause: NOWAIT •

    $default  reduce using rule 457 (teams_distribute_parallel_for_simd_clause)


State 1327

  452 teams_distribute_parallel_for_simd_clause: IS_DEVICE_PTR • '(' variable_list ')'

    '('  shift, and go to state 1424


State 1328

  453 teams_distribute_parallel_for_simd_clause: DEFAULTMAP • '(' TOFROM ':' SCALAR ')'

    '('  shift, and go to state 1425


State 1329

  428 teams_distribute_parallel_for_simd_directive: PRAGMA OMP TEAMS DISTRIBUTE PARALLEL FOR SIMD teams_distribute_parallel_for_simd_clause_multi ENDLN •

    $default  reduce using rule 428 (teams_distribute_parallel_for_simd_directive)


State 1330

  430 teams_distribute_parallel_for_simd_clause_multi: teams_distribute_parallel_for_simd_clause_multi ',' • teams_distribute_parallel_for_simd_clause

    NUM_THREADS    shift, and go to state 359
    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    COPYIN         shift, and go to state 364
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 1326
    DEPEND         shift, and go to state 365
    LASTPRIVATE    shift, and go to state 383
    LINEAR         shift, and go to state 407
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    SCHEDULE       shift, and go to state 385
    ORDERED        shift, and go to state 386
    ALIGNED        shift, and go to state 408
    SAFELEN        shift, and go to state 409
    SIMDLEN        shift, and go to state 410
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 1327
    DEFAULTMAP     shift, and go to state 1328
    NUM_TEAMS      shift, and go to state 528
    THREAD_LIMIT   shift, and go to state 529
    DIST_SCHEDULE  shift, and go to state 516
    PROC_BIND      shift, and go to state 367

    teams_distribute_parallel_for_simd_clause  go to state 1426
    dist_schedule_clause                       go to state 1332
    num_teams_clause                           go to state 1333
    thread_limit_clause                        go to state 1334
    device_clause                              go to state 1335
    map_clause                                 go to state 1336
    safe_len_clause                            go to state 1337
    simd_len_clause                            go to state 1338
    depend_clause                              go to state 1339
    ordered_clause                             go to state 1340
    schedule_clause                            go to state 1341
    num_threads_clause                         go to state 1342
    copyin_clause                              go to state 1343
    default_clause                             go to state 1344
    private_clause                             go to state 1345
    first_private_clause                       go to state 1346
    last_private_clause                        go to state 1347
    shared_clause                              go to state 1348
    reduction_clause                           go to state 1349
    linear_clause                              go to state 1350
    aligned_clause                             go to state 1351
    collapse_clause                            go to state 1352
    if_clause                                  go to state 1353
    procbind_clause                            go to state 1354


State 1331

  429 teams_distribute_parallel_for_simd_clause_multi: teams_distribute_parallel_for_simd_clause_multi teams_distribute_parallel_for_simd_clause •

    $default  reduce using rule 429 (teams_distribute_parallel_for_simd_clause_multi)


State 1332

  432 teams_distribute_parallel_for_simd_clause: dist_schedule_clause •

    $default  reduce using rule 432 (teams_distribute_parallel_for_simd_clause)


State 1333

  455 teams_distribute_parallel_for_simd_clause: num_teams_clause •

    $default  reduce using rule 455 (teams_distribute_parallel_for_simd_clause)


State 1334

  456 teams_distribute_parallel_for_simd_clause: thread_limit_clause •

    $default  reduce using rule 456 (teams_distribute_parallel_for_simd_clause)


State 1335

  450 teams_distribute_parallel_for_simd_clause: device_clause •

    $default  reduce using rule 450 (teams_distribute_parallel_for_simd_clause)


State 1336

  451 teams_distribute_parallel_for_simd_clause: map_clause •

    $default  reduce using rule 451 (teams_distribute_parallel_for_simd_clause)


State 1337

  443 teams_distribute_parallel_for_simd_clause: safe_len_clause •

    $default  reduce using rule 443 (teams_distribute_parallel_for_simd_clause)


State 1338

  444 teams_distribute_parallel_for_simd_clause: simd_len_clause •

    $default  reduce using rule 444 (teams_distribute_parallel_for_simd_clause)


State 1339

  454 teams_distribute_parallel_for_simd_clause: depend_clause •

    $default  reduce using rule 454 (teams_distribute_parallel_for_simd_clause)


State 1340

  442 teams_distribute_parallel_for_simd_clause: ordered_clause •

    $default  reduce using rule 442 (teams_distribute_parallel_for_simd_clause)


State 1341

  447 teams_distribute_parallel_for_simd_clause: schedule_clause •

    $default  reduce using rule 447 (teams_distribute_parallel_for_simd_clause)


State 1342

  434 teams_distribute_parallel_for_simd_clause: num_threads_clause •

    $default  reduce using rule 434 (teams_distribute_parallel_for_simd_clause)


State 1343

  435 teams_distribute_parallel_for_simd_clause: copyin_clause •

    $default  reduce using rule 435 (teams_distribute_parallel_for_simd_clause)


State 1344

  437 teams_distribute_parallel_for_simd_clause: default_clause •

    $default  reduce using rule 437 (teams_distribute_parallel_for_simd_clause)


State 1345

  438 teams_distribute_parallel_for_simd_clause: private_clause •

    $default  reduce using rule 438 (teams_distribute_parallel_for_simd_clause)


State 1346

  439 teams_distribute_parallel_for_simd_clause: first_private_clause •

    $default  reduce using rule 439 (teams_distribute_parallel_for_simd_clause)


State 1347

  449 teams_distribute_parallel_for_simd_clause: last_private_clause •

    $default  reduce using rule 449 (teams_distribute_parallel_for_simd_clause)


State 1348

  440 teams_distribute_parallel_for_simd_clause: shared_clause •

    $default  reduce using rule 440 (teams_distribute_parallel_for_simd_clause)


State 1349

  441 teams_distribute_parallel_for_simd_clause: reduction_clause •

    $default  reduce using rule 441 (teams_distribute_parallel_for_simd_clause)


State 1350

  445 teams_distribute_parallel_for_simd_clause: linear_clause •

    $default  reduce using rule 445 (teams_distribute_parallel_for_simd_clause)


State 1351

  446 teams_distribute_parallel_for_simd_clause: aligned_clause •

    $default  reduce using rule 446 (teams_distribute_parallel_for_simd_clause)


State 1352

  448 teams_distribute_parallel_for_simd_clause: collapse_clause •

    $default  reduce using rule 448 (teams_distribute_parallel_for_simd_clause)


State 1353

  433 teams_distribute_parallel_for_simd_clause: if_clause •

    $default  reduce using rule 433 (teams_distribute_parallel_for_simd_clause)


State 1354

  436 teams_distribute_parallel_for_simd_clause: procbind_clause •

    $default  reduce using rule 436 (teams_distribute_parallel_for_simd_clause)


State 1355

  487 teams_distribute_parallel_for_clause_multi: teams_distribute_parallel_for_clause_multi ',' teams_distribute_parallel_for_clause •

    $default  reduce using rule 487 (teams_distribute_parallel_for_clause_multi)


State 1356

  190 static_assert_declaration: _STATIC_ASSERT '(' constant_expression ',' STRING_LITERAL • ')' ';'

    ')'  shift, and go to state 1427


State 1357

  145 direct_declarator: direct_declarator '(' identifier_list ')' •

    $default  reduce using rule 145 (direct_declarator)


State 1358

  153 identifier_list: identifier_list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 1428


State 1359

  138 direct_declarator: direct_declarator '[' C_STATIC assignment_expression • ']'

    ']'  shift, and go to state 1429


State 1360

  137 direct_declarator: direct_declarator '[' C_STATIC type_qualifier_list • assignment_expression ']'
  151 type_qualifier_list: type_qualifier_list • type_qualifier

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    _ATOMIC         shift, and go to state 563
    FUNC_NAME       shift, and go to state 124
    CONST           shift, and go to state 194
    SIZEOF          shift, and go to state 125
    RESTRICT        shift, and go to state 209
    VOLATILE        shift, and go to state 210
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 1430
    type_qualifier             go to state 847


State 1361

  136 direct_declarator: direct_declarator '[' '*' ']' •

    $default  reduce using rule 136 (direct_declarator)


State 1362

  143 direct_declarator: direct_declarator '[' assignment_expression ']' •

    $default  reduce using rule 143 (direct_declarator)


State 1363

  140 direct_declarator: direct_declarator '[' type_qualifier_list C_STATIC • assignment_expression ']'

    IDENTIFIER      shift, and go to state 119
    STRING_LITERAL  shift, and go to state 120
    F_CONSTANT      shift, and go to state 121
    I_CONSTANT      shift, and go to state 122
    _ALIGNOF        shift, and go to state 123
    FUNC_NAME       shift, and go to state 124
    SIZEOF          shift, and go to state 125
    _GENERIC        shift, and go to state 126
    INC_OPERAND     shift, and go to state 127
    DEC_OPERAND     shift, and go to state 128
    '('             shift, and go to state 129
    '&'             shift, and go to state 130
    '*'             shift, and go to state 131
    '+'             shift, and go to state 132
    '-'             shift, and go to state 133
    '~'             shift, and go to state 134
    '!'             shift, and go to state 135

    primary_expression         go to state 137
    constant                   go to state 138
    string                     go to state 139
    generic_selection          go to state 140
    postfix_expression         go to state 141
    unary_expression           go to state 142
    unary_operator             go to state 143
    cast_expression            go to state 144
    multiplicative_expression  go to state 145
    additive_expression        go to state 146
    shift_expression           go to state 147
    relational_expression      go to state 148
    equality_expression        go to state 149
    and_expression             go to state 150
    exclusive_or_expression    go to state 151
    inclusive_or_expression    go to state 152
    logical_and_expression     go to state 153
    logical_or_expression      go to state 154
    conditional_expression     go to state 155
    assignment_expression      go to state 1431


State 1364

  142 direct_declarator: direct_declarator '[' type_qualifier_list ']' •

    $default  reduce using rule 142 (direct_declarator)


State 1365

   39 unary_operator: '*' •
  139 direct_declarator: direct_declarator '[' type_qualifier_list '*' • ']'

    ']'  shift, and go to state 1432

    $default  reduce using rule 39 (unary_operator)


State 1366

  141 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression • ']'

    ']'  shift, and go to state 1433


State 1367

  170 direct_abstract_declarator: direct_abstract_declarator '[' C_STATIC type_qualifier_list assignment_expression ']' •

    $default  reduce using rule 170 (direct_abstract_declarator)


State 1368

  173 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list C_STATIC assignment_expression ']' •

    $default  reduce using rule 173 (direct_abstract_declarator)


State 1369

  179 initializer: '{' initializer_list ',' '}' •

    $default  reduce using rule 179 (initializer)


State 1370

  183 initializer_list: initializer_list ',' designation initializer •

    $default  reduce using rule 183 (initializer_list)


State 1371

  933 depend_clause: DEPEND '(' dependence_type ':' variable_array_section_list ')' •

    $default  reduce using rule 933 (depend_clause)


State 1372

  954 schedule_clause: SCHEDULE '(' schedule_kind ',' IDENTIFIER ')' •

    $default  reduce using rule 954 (schedule_clause)


State 1373

  953 schedule_clause: SCHEDULE '(' schedule_kind ',' I_CONSTANT ')' •

    $default  reduce using rule 953 (schedule_clause)


State 1374

  277 target_parallel_for_simd_clause: IS_DEVICE_PTR '(' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 1434
    ','  shift, and go to state 816


State 1375

  278 target_parallel_for_simd_clause: DEFAULTMAP '(' TOFROM • ':' SCALAR ')'

    ':'  shift, and go to state 1435


State 1376

  304 target_parallel_for_clause: IS_DEVICE_PTR '(' variable_list ')' •

    $default  reduce using rule 304 (target_parallel_for_clause)


State 1377

  305 target_parallel_for_clause: DEFAULTMAP '(' TOFROM ':' • SCALAR ')'

    SCALAR  shift, and go to state 1436


State 1378

  328 target_parallel_clause: DEFAULTMAP '(' TOFROM ':' SCALAR • ')'

    ')'  shift, and go to state 1437


State 1379

  257 target_simd_clause: DEFAULTMAP '(' TOFROM ':' SCALAR • ')'

    ')'  shift, and go to state 1438


State 1380

  978 array_section_plain: IDENTIFIER ':' • IDENTIFIER
  979                    | IDENTIFIER ':' • I_CONSTANT

    IDENTIFIER  shift, and go to state 1439
    I_CONSTANT  shift, and go to state 1440


State 1381

  980 array_section_plain: I_CONSTANT ':' • IDENTIFIER
  981                    | I_CONSTANT ':' • I_CONSTANT

    IDENTIFIER  shift, and go to state 1441
    I_CONSTANT  shift, and go to state 1442


State 1382

  975 array_section_subscript: '[' array_section_plain ']' •

    $default  reduce using rule 975 (array_section_subscript)


State 1383

  974 array_section_subscript: array_section_subscript '[' array_section_plain • ']'

    ']'  shift, and go to state 1443


State 1384

  426 target_teams_distribute_parallel_for_simd_clause: NOWAIT •

    $default  reduce using rule 426 (target_teams_distribute_parallel_for_simd_clause)


State 1385

  421 target_teams_distribute_parallel_for_simd_clause: IS_DEVICE_PTR • '(' variable_list ')'

    '('  shift, and go to state 1444


State 1386

  422 target_teams_distribute_parallel_for_simd_clause: DEFAULTMAP • '(' TOFROM ':' SCALAR ')'

    '('  shift, and go to state 1445


State 1387

  397 target_teams_distribute_parallel_for_simd_directive: PRAGMA OMP TARGET TEAMS DISTRIBUTE PARALLEL FOR SIMD target_teams_distribute_parallel_for_simd_clause_multi ENDLN •

    $default  reduce using rule 397 (target_teams_distribute_parallel_for_simd_directive)


State 1388

  399 target_teams_distribute_parallel_for_simd_clause_multi: target_teams_distribute_parallel_for_simd_clause_multi ',' • target_teams_distribute_parallel_for_simd_clause

    NUM_THREADS    shift, and go to state 359
    DEFAULT        shift, and go to state 360
    PRIVATE        shift, and go to state 361
    FIRSTPRIVATE   shift, and go to state 362
    SHARED         shift, and go to state 363
    COPYIN         shift, and go to state 364
    REDUCTION      shift, and go to state 290
    NOWAIT         shift, and go to state 1384
    DEPEND         shift, and go to state 365
    LASTPRIVATE    shift, and go to state 383
    LINEAR         shift, and go to state 407
    COLLAPSE       shift, and go to state 384
    IF             shift, and go to state 366
    SCHEDULE       shift, and go to state 385
    ORDERED        shift, and go to state 386
    ALIGNED        shift, and go to state 408
    SAFELEN        shift, and go to state 409
    SIMDLEN        shift, and go to state 410
    DEVICE         shift, and go to state 451
    MAP            shift, and go to state 466
    IS_DEVICE_PTR  shift, and go to state 1385
    DEFAULTMAP     shift, and go to state 1386
    NUM_TEAMS      shift, and go to state 528
    THREAD_LIMIT   shift, and go to state 529
    DIST_SCHEDULE  shift, and go to state 516
    PROC_BIND      shift, and go to state 367

    target_teams_distribute_parallel_for_simd_clause  go to state 1446
    dist_schedule_clause                              go to state 1390
    num_teams_clause                                  go to state 1391
    thread_limit_clause                               go to state 1392
    device_clause                                     go to state 1393
    map_clause                                        go to state 1394
    safe_len_clause                                   go to state 1395
    simd_len_clause                                   go to state 1396
    depend_clause                                     go to state 1397
    ordered_clause                                    go to state 1398
    schedule_clause                                   go to state 1399
    num_threads_clause                                go to state 1400
    copyin_clause                                     go to state 1401
    default_clause                                    go to state 1402
    private_clause                                    go to state 1403
    first_private_clause                              go to state 1404
    last_private_clause                               go to state 1405
    shared_clause                                     go to state 1406
    reduction_clause                                  go to state 1407
    linear_clause                                     go to state 1408
    aligned_clause                                    go to state 1409
    collapse_clause                                   go to state 1410
    if_clause                                         go to state 1411
    procbind_clause                                   go to state 1412


State 1389

  398 target_teams_distribute_parallel_for_simd_clause_multi: target_teams_distribute_parallel_for_simd_clause_multi target_teams_distribute_parallel_for_simd_clause •

    $default  reduce using rule 398 (target_teams_distribute_parallel_for_simd_clause_multi)


State 1390

  401 target_teams_distribute_parallel_for_simd_clause: dist_schedule_clause •

    $default  reduce using rule 401 (target_teams_distribute_parallel_for_simd_clause)


State 1391

  424 target_teams_distribute_parallel_for_simd_clause: num_teams_clause •

    $default  reduce using rule 424 (target_teams_distribute_parallel_for_simd_clause)


State 1392

  425 target_teams_distribute_parallel_for_simd_clause: thread_limit_clause •

    $default  reduce using rule 425 (target_teams_distribute_parallel_for_simd_clause)


State 1393

  419 target_teams_distribute_parallel_for_simd_clause: device_clause •

    $default  reduce using rule 419 (target_teams_distribute_parallel_for_simd_clause)


State 1394

  420 target_teams_distribute_parallel_for_simd_clause: map_clause •

    $default  reduce using rule 420 (target_teams_distribute_parallel_for_simd_clause)


State 1395

  412 target_teams_distribute_parallel_for_simd_clause: safe_len_clause •

    $default  reduce using rule 412 (target_teams_distribute_parallel_for_simd_clause)


State 1396

  413 target_teams_distribute_parallel_for_simd_clause: simd_len_clause •

    $default  reduce using rule 413 (target_teams_distribute_parallel_for_simd_clause)


State 1397

  423 target_teams_distribute_parallel_for_simd_clause: depend_clause •

    $default  reduce using rule 423 (target_teams_distribute_parallel_for_simd_clause)


State 1398

  411 target_teams_distribute_parallel_for_simd_clause: ordered_clause •

    $default  reduce using rule 411 (target_teams_distribute_parallel_for_simd_clause)


State 1399

  416 target_teams_distribute_parallel_for_simd_clause: schedule_clause •

    $default  reduce using rule 416 (target_teams_distribute_parallel_for_simd_clause)


State 1400

  403 target_teams_distribute_parallel_for_simd_clause: num_threads_clause •

    $default  reduce using rule 403 (target_teams_distribute_parallel_for_simd_clause)


State 1401

  404 target_teams_distribute_parallel_for_simd_clause: copyin_clause •

    $default  reduce using rule 404 (target_teams_distribute_parallel_for_simd_clause)


State 1402

  406 target_teams_distribute_parallel_for_simd_clause: default_clause •

    $default  reduce using rule 406 (target_teams_distribute_parallel_for_simd_clause)


State 1403

  407 target_teams_distribute_parallel_for_simd_clause: private_clause •

    $default  reduce using rule 407 (target_teams_distribute_parallel_for_simd_clause)


State 1404

  408 target_teams_distribute_parallel_for_simd_clause: first_private_clause •

    $default  reduce using rule 408 (target_teams_distribute_parallel_for_simd_clause)


State 1405

  418 target_teams_distribute_parallel_for_simd_clause: last_private_clause •

    $default  reduce using rule 418 (target_teams_distribute_parallel_for_simd_clause)


State 1406

  409 target_teams_distribute_parallel_for_simd_clause: shared_clause •

    $default  reduce using rule 409 (target_teams_distribute_parallel_for_simd_clause)


State 1407

  410 target_teams_distribute_parallel_for_simd_clause: reduction_clause •

    $default  reduce using rule 410 (target_teams_distribute_parallel_for_simd_clause)


State 1408

  414 target_teams_distribute_parallel_for_simd_clause: linear_clause •

    $default  reduce using rule 414 (target_teams_distribute_parallel_for_simd_clause)


State 1409

  415 target_teams_distribute_parallel_for_simd_clause: aligned_clause •

    $default  reduce using rule 415 (target_teams_distribute_parallel_for_simd_clause)


State 1410

  417 target_teams_distribute_parallel_for_simd_clause: collapse_clause •

    $default  reduce using rule 417 (target_teams_distribute_parallel_for_simd_clause)


State 1411

  402 target_teams_distribute_parallel_for_simd_clause: if_clause •

    $default  reduce using rule 402 (target_teams_distribute_parallel_for_simd_clause)


State 1412

  405 target_teams_distribute_parallel_for_simd_clause: procbind_clause •

    $default  reduce using rule 405 (target_teams_distribute_parallel_for_simd_clause)


State 1413

  480 target_teams_distribute_parallel_for_clause: IS_DEVICE_PTR '(' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 1447


State 1414

  481 target_teams_distribute_parallel_for_clause: DEFAULTMAP '(' • TOFROM ':' SCALAR ')'

    TOFROM  shift, and go to state 1448


State 1415

  461 target_teams_distribute_parallel_for_clause_multi: target_teams_distribute_parallel_for_clause_multi ',' target_teams_distribute_parallel_for_clause •

    $default  reduce using rule 461 (target_teams_distribute_parallel_for_clause_multi)


State 1416

  514 target_teams_distribute_simd_clause: IS_DEVICE_PTR '(' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 1449
    ','  shift, and go to state 816


State 1417

  515 target_teams_distribute_simd_clause: DEFAULTMAP '(' TOFROM • ':' SCALAR ')'

    ':'  shift, and go to state 1450


State 1418

  540 target_teams_distribute_clause: IS_DEVICE_PTR '(' variable_list ')' •

    $default  reduce using rule 540 (target_teams_distribute_clause)


State 1419

  541 target_teams_distribute_clause: DEFAULTMAP '(' TOFROM ':' • SCALAR ')'

    SCALAR  shift, and go to state 1451


State 1420

  597 target_teams_clause: DEFAULTMAP '(' TOFROM ':' SCALAR • ')'

    ')'  shift, and go to state 1452


State 1421

  922 map_clause: MAP '(' map_type ':' variable_array_section_list ')' •

    $default  reduce using rule 922 (map_clause)


State 1422

  705 target_clause: DEFAULTMAP '(' TOFROM ':' SCALAR ')' •

    $default  reduce using rule 705 (target_clause)


State 1423

  916 dist_schedule_clause: DIST_SCHEDULE '(' STATIC ',' expression ')' •

    $default  reduce using rule 916 (dist_schedule_clause)


State 1424

  452 teams_distribute_parallel_for_simd_clause: IS_DEVICE_PTR '(' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 1453


State 1425

  453 teams_distribute_parallel_for_simd_clause: DEFAULTMAP '(' • TOFROM ':' SCALAR ')'

    TOFROM  shift, and go to state 1454


State 1426

  430 teams_distribute_parallel_for_simd_clause_multi: teams_distribute_parallel_for_simd_clause_multi ',' teams_distribute_parallel_for_simd_clause •

    $default  reduce using rule 430 (teams_distribute_parallel_for_simd_clause_multi)


State 1427

  190 static_assert_declaration: _STATIC_ASSERT '(' constant_expression ',' STRING_LITERAL ')' • ';'

    ';'  shift, and go to state 1455


State 1428

  153 identifier_list: identifier_list ',' IDENTIFIER •

    $default  reduce using rule 153 (identifier_list)


State 1429

  138 direct_declarator: direct_declarator '[' C_STATIC assignment_expression ']' •

    $default  reduce using rule 138 (direct_declarator)


State 1430

  137 direct_declarator: direct_declarator '[' C_STATIC type_qualifier_list assignment_expression • ']'

    ']'  shift, and go to state 1456


State 1431

  140 direct_declarator: direct_declarator '[' type_qualifier_list C_STATIC assignment_expression • ']'

    ']'  shift, and go to state 1457


State 1432

  139 direct_declarator: direct_declarator '[' type_qualifier_list '*' ']' •

    $default  reduce using rule 139 (direct_declarator)


State 1433

  141 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression ']' •

    $default  reduce using rule 141 (direct_declarator)


State 1434

  277 target_parallel_for_simd_clause: IS_DEVICE_PTR '(' variable_list ')' •

    $default  reduce using rule 277 (target_parallel_for_simd_clause)


State 1435

  278 target_parallel_for_simd_clause: DEFAULTMAP '(' TOFROM ':' • SCALAR ')'

    SCALAR  shift, and go to state 1458


State 1436

  305 target_parallel_for_clause: DEFAULTMAP '(' TOFROM ':' SCALAR • ')'

    ')'  shift, and go to state 1459


State 1437

  328 target_parallel_clause: DEFAULTMAP '(' TOFROM ':' SCALAR ')' •

    $default  reduce using rule 328 (target_parallel_clause)


State 1438

  257 target_simd_clause: DEFAULTMAP '(' TOFROM ':' SCALAR ')' •

    $default  reduce using rule 257 (target_simd_clause)


State 1439

  978 array_section_plain: IDENTIFIER ':' IDENTIFIER •

    $default  reduce using rule 978 (array_section_plain)


State 1440

  979 array_section_plain: IDENTIFIER ':' I_CONSTANT •

    $default  reduce using rule 979 (array_section_plain)


State 1441

  980 array_section_plain: I_CONSTANT ':' IDENTIFIER •

    $default  reduce using rule 980 (array_section_plain)


State 1442

  981 array_section_plain: I_CONSTANT ':' I_CONSTANT •

    $default  reduce using rule 981 (array_section_plain)


State 1443

  974 array_section_subscript: array_section_subscript '[' array_section_plain ']' •

    $default  reduce using rule 974 (array_section_subscript)


State 1444

  421 target_teams_distribute_parallel_for_simd_clause: IS_DEVICE_PTR '(' • variable_list ')'

    IDENTIFIER  shift, and go to state 540
    I_CONSTANT  shift, and go to state 541

    variable_list  go to state 1460


State 1445

  422 target_teams_distribute_parallel_for_simd_clause: DEFAULTMAP '(' • TOFROM ':' SCALAR ')'

    TOFROM  shift, and go to state 1461


State 1446

  399 target_teams_distribute_parallel_for_simd_clause_multi: target_teams_distribute_parallel_for_simd_clause_multi ',' target_teams_distribute_parallel_for_simd_clause •

    $default  reduce using rule 399 (target_teams_distribute_parallel_for_simd_clause_multi)


State 1447

  480 target_teams_distribute_parallel_for_clause: IS_DEVICE_PTR '(' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 1462
    ','  shift, and go to state 816


State 1448

  481 target_teams_distribute_parallel_for_clause: DEFAULTMAP '(' TOFROM • ':' SCALAR ')'

    ':'  shift, and go to state 1463


State 1449

  514 target_teams_distribute_simd_clause: IS_DEVICE_PTR '(' variable_list ')' •

    $default  reduce using rule 514 (target_teams_distribute_simd_clause)


State 1450

  515 target_teams_distribute_simd_clause: DEFAULTMAP '(' TOFROM ':' • SCALAR ')'

    SCALAR  shift, and go to state 1464


State 1451

  541 target_teams_distribute_clause: DEFAULTMAP '(' TOFROM ':' SCALAR • ')'

    ')'  shift, and go to state 1465


State 1452

  597 target_teams_clause: DEFAULTMAP '(' TOFROM ':' SCALAR ')' •

    $default  reduce using rule 597 (target_teams_clause)


State 1453

  452 teams_distribute_parallel_for_simd_clause: IS_DEVICE_PTR '(' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 1466
    ','  shift, and go to state 816


State 1454

  453 teams_distribute_parallel_for_simd_clause: DEFAULTMAP '(' TOFROM • ':' SCALAR ')'

    ':'  shift, and go to state 1467


State 1455

  190 static_assert_declaration: _STATIC_ASSERT '(' constant_expression ',' STRING_LITERAL ')' ';' •

    $default  reduce using rule 190 (static_assert_declaration)


State 1456

  137 direct_declarator: direct_declarator '[' C_STATIC type_qualifier_list assignment_expression ']' •

    $default  reduce using rule 137 (direct_declarator)


State 1457

  140 direct_declarator: direct_declarator '[' type_qualifier_list C_STATIC assignment_expression ']' •

    $default  reduce using rule 140 (direct_declarator)


State 1458

  278 target_parallel_for_simd_clause: DEFAULTMAP '(' TOFROM ':' SCALAR • ')'

    ')'  shift, and go to state 1468


State 1459

  305 target_parallel_for_clause: DEFAULTMAP '(' TOFROM ':' SCALAR ')' •

    $default  reduce using rule 305 (target_parallel_for_clause)


State 1460

  421 target_teams_distribute_parallel_for_simd_clause: IS_DEVICE_PTR '(' variable_list • ')'
  983 variable_list: variable_list • ',' IDENTIFIER

    ')'  shift, and go to state 1469
    ','  shift, and go to state 816


State 1461

  422 target_teams_distribute_parallel_for_simd_clause: DEFAULTMAP '(' TOFROM • ':' SCALAR ')'

    ':'  shift, and go to state 1470


State 1462

  480 target_teams_distribute_parallel_for_clause: IS_DEVICE_PTR '(' variable_list ')' •

    $default  reduce using rule 480 (target_teams_distribute_parallel_for_clause)


State 1463

  481 target_teams_distribute_parallel_for_clause: DEFAULTMAP '(' TOFROM ':' • SCALAR ')'

    SCALAR  shift, and go to state 1471


State 1464

  515 target_teams_distribute_simd_clause: DEFAULTMAP '(' TOFROM ':' SCALAR • ')'

    ')'  shift, and go to state 1472


State 1465

  541 target_teams_distribute_clause: DEFAULTMAP '(' TOFROM ':' SCALAR ')' •

    $default  reduce using rule 541 (target_teams_distribute_clause)


State 1466

  452 teams_distribute_parallel_for_simd_clause: IS_DEVICE_PTR '(' variable_list ')' •

    $default  reduce using rule 452 (teams_distribute_parallel_for_simd_clause)


State 1467

  453 teams_distribute_parallel_for_simd_clause: DEFAULTMAP '(' TOFROM ':' • SCALAR ')'

    SCALAR  shift, and go to state 1473


State 1468

  278 target_parallel_for_simd_clause: DEFAULTMAP '(' TOFROM ':' SCALAR ')' •

    $default  reduce using rule 278 (target_parallel_for_simd_clause)


State 1469

  421 target_teams_distribute_parallel_for_simd_clause: IS_DEVICE_PTR '(' variable_list ')' •

    $default  reduce using rule 421 (target_teams_distribute_parallel_for_simd_clause)


State 1470

  422 target_teams_distribute_parallel_for_simd_clause: DEFAULTMAP '(' TOFROM ':' • SCALAR ')'

    SCALAR  shift, and go to state 1474


State 1471

  481 target_teams_distribute_parallel_for_clause: DEFAULTMAP '(' TOFROM ':' SCALAR • ')'

    ')'  shift, and go to state 1475


State 1472

  515 target_teams_distribute_simd_clause: DEFAULTMAP '(' TOFROM ':' SCALAR ')' •

    $default  reduce using rule 515 (target_teams_distribute_simd_clause)


State 1473

  453 teams_distribute_parallel_for_simd_clause: DEFAULTMAP '(' TOFROM ':' SCALAR • ')'

    ')'  shift, and go to state 1476


State 1474

  422 target_teams_distribute_parallel_for_simd_clause: DEFAULTMAP '(' TOFROM ':' SCALAR • ')'

    ')'  shift, and go to state 1477


State 1475

  481 target_teams_distribute_parallel_for_clause: DEFAULTMAP '(' TOFROM ':' SCALAR ')' •

    $default  reduce using rule 481 (target_teams_distribute_parallel_for_clause)


State 1476

  453 teams_distribute_parallel_for_simd_clause: DEFAULTMAP '(' TOFROM ':' SCALAR ')' •

    $default  reduce using rule 453 (teams_distribute_parallel_for_simd_clause)


State 1477

  422 target_teams_distribute_parallel_for_simd_clause: DEFAULTMAP '(' TOFROM ':' SCALAR ')' •

    $default  reduce using rule 422 (target_teams_distribute_parallel_for_simd_clause)
